'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8933
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8933.
'
Namespace WMS_Materials
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WMS_MaterialsSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WMS_Materials
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = AppSettings.ServerUrl + "/Catalogues/WMS_Materials.asmx"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateMaterials( _
                    ByVal pCLIENT_OWNER As String,  _
                    ByVal pMATERIAL_ID As String,  _
                    ByVal pBARCODE_ID As String,  _
                    ByVal pALTERNATE_BARCODE As String,  _
                    ByVal pMATERIAL_NAME As String,  _
                    ByVal pSHORT_NAME As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pMATERIAL_CLASS As String,  _
                    ByVal pHIGH As Double,  _
                    ByVal pLENGTH As Double,  _
                    ByVal pWIDTH As Double,  _
                    ByVal pMAX_X_BIN As Integer,  _
                    ByVal pSCAN_BY_ONE As Integer,  _
                    ByVal pREQUIRES_LOGISTICS_INFO As Integer,  _
                    ByVal pWEIGTH As Double,  _
                    ByVal pLAST_UPDATED_BY As String,  _
                    ByVal pIS_CAR As Integer,  _
                    ByVal pBatchRequested As Integer,  _
                    ByRef resultado As String,  _
                    ByVal ambiente As String,  _
                    ByVal serialNumberRequests As Integer,  _
                    ByVal isMasterPack As Integer,  _
                    ByVal weightMeasurement As String,  _
                    ByVal explodeInReception As Integer,  _
                    ByVal handleTone As Integer,  _
                    ByVal handleCaliber As Integer,  _
                    ByVal usePickingLine As String,  _
                    ByVal pQUALITY_CONTROL As Integer) As Boolean
            Dim results() As Object = Me.Invoke("CreateMaterials", New Object() {pCLIENT_OWNER, pMATERIAL_ID, pBARCODE_ID, pALTERNATE_BARCODE, pMATERIAL_NAME, pSHORT_NAME, pVOLUME_FACTOR, pMATERIAL_CLASS, pHIGH, pLENGTH, pWIDTH, pMAX_X_BIN, pSCAN_BY_ONE, pREQUIRES_LOGISTICS_INFO, pWEIGTH, pLAST_UPDATED_BY, pIS_CAR, pBatchRequested, resultado, ambiente, serialNumberRequests, isMasterPack, weightMeasurement, explodeInReception, handleTone, handleCaliber, usePickingLine, pQUALITY_CONTROL})
            resultado = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateMaterials( _
                    ByVal pCLIENT_OWNER As String,  _
                    ByVal pMATERIAL_ID As String,  _
                    ByVal pBARCODE_ID As String,  _
                    ByVal pALTERNATE_BARCODE As String,  _
                    ByVal pMATERIAL_NAME As String,  _
                    ByVal pSHORT_NAME As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pMATERIAL_CLASS As String,  _
                    ByVal pHIGH As Double,  _
                    ByVal pLENGTH As Double,  _
                    ByVal pWIDTH As Double,  _
                    ByVal pMAX_X_BIN As Integer,  _
                    ByVal pSCAN_BY_ONE As Integer,  _
                    ByVal pREQUIRES_LOGISTICS_INFO As Integer,  _
                    ByVal pWEIGTH As Double,  _
                    ByVal pLAST_UPDATED_BY As String,  _
                    ByVal pIS_CAR As Integer,  _
                    ByVal pBatchRequested As Integer,  _
                    ByVal resultado As String,  _
                    ByVal ambiente As String,  _
                    ByVal serialNumberRequests As Integer,  _
                    ByVal isMasterPack As Integer,  _
                    ByVal weightMeasurement As String,  _
                    ByVal explodeInReception As Integer,  _
                    ByVal handleTone As Integer,  _
                    ByVal handleCaliber As Integer,  _
                    ByVal usePickingLine As String,  _
                    ByVal pQUALITY_CONTROL As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateMaterials", New Object() {pCLIENT_OWNER, pMATERIAL_ID, pBARCODE_ID, pALTERNATE_BARCODE, pMATERIAL_NAME, pSHORT_NAME, pVOLUME_FACTOR, pMATERIAL_CLASS, pHIGH, pLENGTH, pWIDTH, pMAX_X_BIN, pSCAN_BY_ONE, pREQUIRES_LOGISTICS_INFO, pWEIGTH, pLAST_UPDATED_BY, pIS_CAR, pBatchRequested, resultado, ambiente, serialNumberRequests, isMasterPack, weightMeasurement, explodeInReception, handleTone, handleCaliber, usePickingLine, pQUALITY_CONTROL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateMaterials(ByVal asyncResult As System.IAsyncResult, ByRef resultado As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            resultado = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCodeMultipleClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchByBarCodeMultipleClients(ByVal pBARCODE_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchByBarCodeMultipleClients", New Object() {pBARCODE_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchByBarCodeMultipleClients(ByVal pBARCODE_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchByBarCodeMultipleClients", New Object() {pBARCODE_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchByBarCodeMultipleClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCodeMultipleClientsJava", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchByBarCodeMultipleClientsJava(ByVal pBARCODE_ID As String) As String
            Dim results() As Object = Me.Invoke("SearchByBarCodeMultipleClientsJava", New Object() {pBARCODE_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchByBarCodeMultipleClientsJava(ByVal pBARCODE_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchByBarCodeMultipleClientsJava", New Object() {pBARCODE_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchByBarCodeMultipleClientsJava(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchByBarCode(ByVal pBARCODE_ID As String, ByVal pCLIENT_OWNER As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchByBarCode", New Object() {pBARCODE_ID, pCLIENT_OWNER, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchByBarCode(ByVal pBARCODE_ID As String, ByVal pCLIENT_OWNER As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchByBarCode", New Object() {pBARCODE_ID, pCLIENT_OWNER, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchByBarCode(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMaterialPorCodigoDeBarraYLicencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerMaterialPorCodigoDeBarraYLicencia(ByVal codigoBarra As String, ByVal cliente As String, ByVal licencia As Integer, ByVal tarea As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerMaterialPorCodigoDeBarraYLicencia", New Object() {codigoBarra, cliente, licencia, tarea, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerMaterialPorCodigoDeBarraYLicencia(ByVal codigoBarra As String, ByVal cliente As String, ByVal licencia As Integer, ByVal tarea As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerMaterialPorCodigoDeBarraYLicencia", New Object() {codigoBarra, cliente, licencia, tarea, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerMaterialPorCodigoDeBarraYLicencia(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMaterials( _
                    ByVal pCLIENT_OWNER As String,  _
                    ByVal pMATERIAL_ID As String,  _
                    ByVal pBARCODE_ID As String,  _
                    ByVal pALTERNATE_BARCODE As String,  _
                    ByVal pMATERIAL_NAME As String,  _
                    ByVal pSHORT_NAME As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pMATERIAL_CLASS As String,  _
                    ByVal pHIGH As Double,  _
                    ByVal pLENGTH As Double,  _
                    ByVal pWIDTH As Double,  _
                    ByVal pMAX_X_BIN As Integer,  _
                    ByVal pSCAN_BY_ONE As Integer,  _
                    ByVal pREQUIRES_LOGISTICS_INFO As Integer,  _
                    ByVal pWEIGTH As Decimal,  _
                    ByVal pLAST_UPDATED_BY As String,  _
                    ByVal IS_CAR As Integer,  _
                    ByVal pBatchRequested As Integer,  _
                    ByRef resultado As String,  _
                    ByVal ambiente As String,  _
                    ByVal serialNumberRequests As Integer,  _
                    ByVal isMasterPack As Integer,  _
                    ByVal weightMeasurement As String,  _
                    ByVal explodeInReception As Integer,  _
                    ByVal handleTone As Integer,  _
                    ByVal handleCaliber As Integer,  _
                    ByVal usePickingLine As String,  _
                    ByVal pQUALITY_CONTROL As Integer) As Boolean
            Dim results() As Object = Me.Invoke("UpdateMaterials", New Object() {pCLIENT_OWNER, pMATERIAL_ID, pBARCODE_ID, pALTERNATE_BARCODE, pMATERIAL_NAME, pSHORT_NAME, pVOLUME_FACTOR, pMATERIAL_CLASS, pHIGH, pLENGTH, pWIDTH, pMAX_X_BIN, pSCAN_BY_ONE, pREQUIRES_LOGISTICS_INFO, pWEIGTH, pLAST_UPDATED_BY, IS_CAR, pBatchRequested, resultado, ambiente, serialNumberRequests, isMasterPack, weightMeasurement, explodeInReception, handleTone, handleCaliber, usePickingLine, pQUALITY_CONTROL})
            resultado = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateMaterials( _
                    ByVal pCLIENT_OWNER As String,  _
                    ByVal pMATERIAL_ID As String,  _
                    ByVal pBARCODE_ID As String,  _
                    ByVal pALTERNATE_BARCODE As String,  _
                    ByVal pMATERIAL_NAME As String,  _
                    ByVal pSHORT_NAME As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pMATERIAL_CLASS As String,  _
                    ByVal pHIGH As Double,  _
                    ByVal pLENGTH As Double,  _
                    ByVal pWIDTH As Double,  _
                    ByVal pMAX_X_BIN As Integer,  _
                    ByVal pSCAN_BY_ONE As Integer,  _
                    ByVal pREQUIRES_LOGISTICS_INFO As Integer,  _
                    ByVal pWEIGTH As Decimal,  _
                    ByVal pLAST_UPDATED_BY As String,  _
                    ByVal IS_CAR As Integer,  _
                    ByVal pBatchRequested As Integer,  _
                    ByVal resultado As String,  _
                    ByVal ambiente As String,  _
                    ByVal serialNumberRequests As Integer,  _
                    ByVal isMasterPack As Integer,  _
                    ByVal weightMeasurement As String,  _
                    ByVal explodeInReception As Integer,  _
                    ByVal handleTone As Integer,  _
                    ByVal handleCaliber As Integer,  _
                    ByVal usePickingLine As String,  _
                    ByVal pQUALITY_CONTROL As Integer,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMaterials", New Object() {pCLIENT_OWNER, pMATERIAL_ID, pBARCODE_ID, pALTERNATE_BARCODE, pMATERIAL_NAME, pSHORT_NAME, pVOLUME_FACTOR, pMATERIAL_CLASS, pHIGH, pLENGTH, pWIDTH, pMAX_X_BIN, pSCAN_BY_ONE, pREQUIRES_LOGISTICS_INFO, pWEIGTH, pLAST_UPDATED_BY, IS_CAR, pBatchRequested, resultado, ambiente, serialNumberRequests, isMasterPack, weightMeasurement, explodeInReception, handleTone, handleCaliber, usePickingLine, pQUALITY_CONTROL}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateMaterials(ByVal asyncResult As System.IAsyncResult, ByRef resultado As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            resultado = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteMaterials(ByVal pBARCODE_ID As String, ByVal pCLIENT_OWNER As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteMaterials", New Object() {pBARCODE_ID, pCLIENT_OWNER, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteMaterials(ByVal pBARCODE_ID As String, ByVal pCLIENT_OWNER As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteMaterials", New Object() {pBARCODE_ID, pCLIENT_OWNER, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteMaterials(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchByKeyMaterials(ByVal pMATERIAL_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchByKeyMaterials", New Object() {pMATERIAL_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchByKeyMaterials(ByVal pMATERIAL_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchByKeyMaterials", New Object() {pMATERIAL_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchByKeyMaterials(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialMaterials", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchPartialMaterials(ByVal pMATERIAL_ID As String, ByVal pMATERIAL_NAME As String, ByVal pSHORT_NAME As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchPartialMaterials", New Object() {pMATERIAL_ID, pMATERIAL_NAME, pSHORT_NAME, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchPartialMaterials(ByVal pMATERIAL_ID As String, ByVal pMATERIAL_NAME As String, ByVal pSHORT_NAME As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchPartialMaterials", New Object() {pMATERIAL_ID, pMATERIAL_NAME, pSHORT_NAME, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchPartialMaterials(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsSector1", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaterialsSector1(ByVal pMATERIAL_ID As String, ByVal pMATERIAL_NAME As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMaterialsSector1", New Object() {pMATERIAL_ID, pMATERIAL_NAME, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaterialsSector1(ByVal pMATERIAL_ID As String, ByVal pMATERIAL_NAME As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaterialsSector1", New Object() {pMATERIAL_ID, pMATERIAL_NAME, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaterialsSector1(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVolumeFactor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateVolumeFactor(ByVal pMATERIAL_ID As String, ByVal pALTO As Double, ByVal pLARGO As Double, ByVal pANCHO As Double, ByVal pVOLUME_FACTOR As Double, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateVolumeFactor", New Object() {pMATERIAL_ID, pALTO, pLARGO, pANCHO, pVOLUME_FACTOR, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateVolumeFactor(ByVal pMATERIAL_ID As String, ByVal pALTO As Double, ByVal pLARGO As Double, ByVal pANCHO As Double, ByVal pVOLUME_FACTOR As Double, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateVolumeFactor", New Object() {pMATERIAL_ID, pALTO, pLARGO, pANCHO, pVOLUME_FACTOR, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateVolumeFactor(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVolumeFactorMultipleSKUs", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateVolumeFactorMultipleSKUs(ByVal pBARCODE_SKU As String, ByVal pALTO As String, ByVal pLARGO As String, ByVal pANCHO As String, ByVal pVOLUME_FACTOR As String, ByVal pPESO As String, ByVal pMT3 As String) As String
            Dim results() As Object = Me.Invoke("UpdateVolumeFactorMultipleSKUs", New Object() {pBARCODE_SKU, pALTO, pLARGO, pANCHO, pVOLUME_FACTOR, pPESO, pMT3})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateVolumeFactorMultipleSKUs(ByVal pBARCODE_SKU As String, ByVal pALTO As String, ByVal pLARGO As String, ByVal pANCHO As String, ByVal pVOLUME_FACTOR As String, ByVal pPESO As String, ByVal pMT3 As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateVolumeFactorMultipleSKUs", New Object() {pBARCODE_SKU, pALTO, pLARGO, pANCHO, pVOLUME_FACTOR, pPESO, pMT3}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateVolumeFactorMultipleSKUs(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedLocations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRelatedLocations(ByVal pMATERIAL_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRelatedLocations", New Object() {pMATERIAL_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRelatedLocations(ByVal pMATERIAL_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRelatedLocations", New Object() {pMATERIAL_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRelatedLocations(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterials_X_Location", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteMaterials_X_Location(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteMaterials_X_Location", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteMaterials_X_Location(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteMaterials_X_Location", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteMaterials_X_Location(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterial_Join_SpotLocations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateMaterial_Join_SpotLocations(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByVal pUSER_ID As String, ByVal pMIN_QTY As Integer, ByVal pMAX_QTY As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("CreateMaterial_Join_SpotLocations", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pUSER_ID, pMIN_QTY, pMAX_QTY, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateMaterial_Join_SpotLocations(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByVal pUSER_ID As String, ByVal pMIN_QTY As Integer, ByVal pMAX_QTY As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateMaterial_Join_SpotLocations", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pUSER_ID, pMIN_QTY, pMAX_QTY, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateMaterial_Join_SpotLocations(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Join_SpotLocations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Update_Join_SpotLocations(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByVal pUSER_ID As String, ByVal pMIN_QTY As Double, ByVal pMAX_QTY As Double, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("Update_Join_SpotLocations", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pUSER_ID, pMIN_QTY, pMAX_QTY, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdate_Join_SpotLocations(ByVal pMATERIAL_ID As String, ByVal pWAREHOUSE_PARENT As String, ByVal pLOCATION_SPOT As String, ByVal pUSER_ID As String, ByVal pMIN_QTY As Double, ByVal pMAX_QTY As Double, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Update_Join_SpotLocations", New Object() {pMATERIAL_ID, pWAREHOUSE_PARENT, pLOCATION_SPOT, pUSER_ID, pMIN_QTY, pMAX_QTY, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdate_Join_SpotLocations(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationsAvailableToRelate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocationsAvailableToRelate(ByVal pMATERIAL_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLocationsAvailableToRelate", New Object() {pMATERIAL_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLocationsAvailableToRelate(ByVal pMATERIAL_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLocationsAvailableToRelate", New Object() {pMATERIAL_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLocationsAvailableToRelate(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuickSKU_Mantainance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QuickSKU_Mantainance(ByVal pCLIENT_OWNER As String, ByVal pMATERIAL_NAME As String, ByVal pBARCODE As String, ByVal pLAST_LOGIN As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pIMAGE_1() As Byte, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("QuickSKU_Mantainance", New Object() {pCLIENT_OWNER, pMATERIAL_NAME, pBARCODE, pLAST_LOGIN, pIMAGE_1, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginQuickSKU_Mantainance(ByVal pCLIENT_OWNER As String, ByVal pMATERIAL_NAME As String, ByVal pBARCODE As String, ByVal pLAST_LOGIN As String, ByVal pIMAGE_1() As Byte, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("QuickSKU_Mantainance", New Object() {pCLIENT_OWNER, pMATERIAL_NAME, pBARCODE, pLAST_LOGIN, pIMAGE_1, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndQuickSKU_Mantainance(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalFactorVolumeLicense", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTotalFactorVolumeLicense(ByVal pLicenseId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTotalFactorVolumeLicense", New Object() {pLicenseId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTotalFactorVolumeLicense(ByVal pLicenseId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTotalFactorVolumeLicense", New Object() {pLicenseId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTotalFactorVolumeLicense(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIfExistsMaterialByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIfExistsMaterialByClient(ByVal clientOwner As String, ByVal materialId As String, ByRef result As String, ByVal environmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("GetIfExistsMaterialByClient", New Object() {clientOwner, materialId, result, environmentName})
            result = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGetIfExistsMaterialByClient(ByVal clientOwner As String, ByVal materialId As String, ByVal result As String, ByVal environmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetIfExistsMaterialByClient", New Object() {clientOwner, materialId, result, environmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetIfExistsMaterialByClient(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMaterialByXml", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadMaterialByXml(ByVal xmlDeMaterial As String, ByVal xmlDeUbicacion As String, ByVal xmlDeUnidadDeMedida As String, ByVal xmlDeMasterPack As String, ByVal xmlDePropiedades As String, ByVal login As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("LoadMaterialByXml", New Object() {xmlDeMaterial, xmlDeUbicacion, xmlDeUnidadDeMedida, xmlDeMasterPack, xmlDePropiedades, login, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginLoadMaterialByXml(ByVal xmlDeMaterial As String, ByVal xmlDeUbicacion As String, ByVal xmlDeUnidadDeMedida As String, ByVal xmlDeMasterPack As String, ByVal xmlDePropiedades As String, ByVal login As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LoadMaterialByXml", New Object() {xmlDeMaterial, xmlDeUbicacion, xmlDeUnidadDeMedida, xmlDeMasterPack, xmlDePropiedades, login, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLoadMaterialByXml(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerClasesParaMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerClasesParaMaterial(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerClasesParaMaterial", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerClasesParaMaterial(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerClasesParaMaterial", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerClasesParaMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerClasePorNombre", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerClasePorNombre(ByRef pResult As String, ByRef ClassName As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerClasePorNombre", New Object() {pResult, ClassName, pEnvironmentName})
            pResult = CType(results(1),String)
            ClassName = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerClasePorNombre(ByVal pResult As String, ByVal ClassName As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerClasePorNombre", New Object() {pResult, ClassName, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerClasePorNombre(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String, ByRef ClassName As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            ClassName = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarSiMaterialEsMasterPack", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarSiMaterialEsMasterPack(ByVal ambiente As String, ByVal material As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidarSiMaterialEsMasterPack", New Object() {ambiente, material})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarSiMaterialEsMasterPack(ByVal ambiente As String, ByVal material As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarSiMaterialEsMasterPack", New Object() {ambiente, material}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarSiMaterialEsMasterPack(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarInventarioDeImplosionDeMasterpack", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarInventarioDeImplosionDeMasterpack(ByVal ambiente As String, ByVal codigoDeMaterial As String, ByVal codigoDeBodega As String, ByVal cantidad As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ValidarInventarioDeImplosionDeMasterpack", New Object() {ambiente, codigoDeMaterial, codigoDeBodega, cantidad})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarInventarioDeImplosionDeMasterpack(ByVal ambiente As String, ByVal codigoDeMaterial As String, ByVal codigoDeBodega As String, ByVal cantidad As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarInventarioDeImplosionDeMasterpack", New Object() {ambiente, codigoDeMaterial, codigoDeBodega, cantidad}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarInventarioDeImplosionDeMasterpack(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarLicenciaEnImplosion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarLicenciaEnImplosion(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeBodega As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidarLicenciaEnImplosion", New Object() {ambiente, licencia, codigoDeBodega})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarLicenciaEnImplosion(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeBodega As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarLicenciaEnImplosion", New Object() {ambiente, licencia, codigoDeBodega}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarLicenciaEnImplosion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarControlDeMasterPackEnImplosion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarControlDeMasterPackEnImplosion(ByVal ambiente As String, ByVal codigoDeMasterPack As String, ByVal cantidad As Decimal, ByVal usuario As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AgregarControlDeMasterPackEnImplosion", New Object() {ambiente, codigoDeMasterPack, cantidad, usuario})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarControlDeMasterPackEnImplosion(ByVal ambiente As String, ByVal codigoDeMasterPack As String, ByVal cantidad As Decimal, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarControlDeMasterPackEnImplosion", New Object() {ambiente, codigoDeMasterPack, cantidad, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarControlDeMasterPackEnImplosion(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarParteDeImplosionATarea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarParteDeImplosionATarea(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal, ByVal usuario As String, ByVal codigoDeMaterPack As String, ByVal licenciaDestino As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AgregarParteDeImplosionATarea", New Object() {ambiente, licencia, codigoDeMaterial, cantidad, usuario, codigoDeMaterPack, licenciaDestino})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarParteDeImplosionATarea(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal, ByVal usuario As String, ByVal codigoDeMaterPack As String, ByVal licenciaDestino As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarParteDeImplosionATarea", New Object() {ambiente, licencia, codigoDeMaterial, cantidad, usuario, codigoDeMaterPack, licenciaDestino}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarParteDeImplosionATarea(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelarImplosionEnProgreso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelarImplosionEnProgreso(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeMaterPack As String, ByVal usuario As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CancelarImplosionEnProgreso", New Object() {ambiente, licencia, codigoDeMaterPack, usuario})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginCancelarImplosionEnProgreso(ByVal ambiente As String, ByVal licencia As Integer, ByVal codigoDeMaterPack As String, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CancelarImplosionEnProgreso", New Object() {ambiente, licencia, codigoDeMaterPack, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCancelarImplosionEnProgreso(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInventarioDeMaterialPorLicencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerInventarioDeMaterialPorLicencia(ByVal ambiente As String, ByVal licenciaOrigen As Integer, ByVal licenciaDestino As Integer, ByVal codigoDeMaterPack As String, ByVal material As String, ByVal bodega As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerInventarioDeMaterialPorLicencia", New Object() {ambiente, licenciaOrigen, licenciaDestino, codigoDeMaterPack, material, bodega})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerInventarioDeMaterialPorLicencia(ByVal ambiente As String, ByVal licenciaOrigen As Integer, ByVal licenciaDestino As Integer, ByVal codigoDeMaterPack As String, ByVal material As String, ByVal bodega As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerInventarioDeMaterialPorLicencia", New Object() {ambiente, licenciaOrigen, licenciaDestino, codigoDeMaterPack, material, bodega}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerInventarioDeMaterialPorLicencia(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeImplosionEnProceso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDetalleDeImplosionEnProceso(ByVal ambiente As String, ByRef resultado As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerDetalleDeImplosionEnProceso", New Object() {ambiente, resultado, licencia, codigoDeMaterial, cantidad})
            resultado = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerDetalleDeImplosionEnProceso(ByVal ambiente As String, ByVal resultado As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerDetalleDeImplosionEnProceso", New Object() {ambiente, resultado, licencia, codigoDeMaterial, cantidad}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerDetalleDeImplosionEnProceso(ByVal asyncResult As System.IAsyncResult, ByRef resultado As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            resultado = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinalizarImplosionDeMasterpack", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FinalizarImplosionDeMasterpack(ByVal ambiente As String, ByRef ubicacion As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal, ByVal usuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("FinalizarImplosionDeMasterpack", New Object() {ambiente, ubicacion, licencia, codigoDeMaterial, cantidad, usuario})
            ubicacion = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginFinalizarImplosionDeMasterpack(ByVal ambiente As String, ByVal ubicacion As String, ByVal licencia As Integer, ByVal codigoDeMaterial As String, ByVal cantidad As Decimal, ByVal usuario As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FinalizarImplosionDeMasterpack", New Object() {ambiente, ubicacion, licencia, codigoDeMaterial, cantidad, usuario}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFinalizarImplosionDeMasterpack(ByVal asyncResult As System.IAsyncResult, ByRef ubicacion As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            ubicacion = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterialUnitMesurement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateMaterialUnitMesurement(ByVal clientId As String, ByVal materialId As String, ByVal measuremntUnit As String, ByVal qty As Integer, ByVal barcode As String, ByVal alternativeBarcode As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CreateMaterialUnitMesurement", New Object() {clientId, materialId, measuremntUnit, qty, barcode, alternativeBarcode, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateMaterialUnitMesurement(ByVal clientId As String, ByVal materialId As String, ByVal measuremntUnit As String, ByVal qty As Integer, ByVal barcode As String, ByVal alternativeBarcode As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateMaterialUnitMesurement", New Object() {clientId, materialId, measuremntUnit, qty, barcode, alternativeBarcode, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateMaterialUnitMesurement(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaterialUnitMesurement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMaterialUnitMesurement(ByVal measurementUnitId As Integer, ByVal clientId As String, ByVal materialId As String, ByVal measuremntUnit As String, ByVal qty As Integer, ByVal barcode As String, ByVal alternativeBarcode As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("UpdateMaterialUnitMesurement", New Object() {measurementUnitId, clientId, materialId, measuremntUnit, qty, barcode, alternativeBarcode, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateMaterialUnitMesurement(ByVal measurementUnitId As Integer, ByVal clientId As String, ByVal materialId As String, ByVal measuremntUnit As String, ByVal qty As Integer, ByVal barcode As String, ByVal alternativeBarcode As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMaterialUnitMesurement", New Object() {measurementUnitId, clientId, materialId, measuremntUnit, qty, barcode, alternativeBarcode, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateMaterialUnitMesurement(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterialUnitMesurement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteMaterialUnitMesurement(ByVal measurementUnitId As Integer, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("DeleteMaterialUnitMesurement", New Object() {measurementUnitId, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteMaterialUnitMesurement(ByVal measurementUnitId As Integer, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteMaterialUnitMesurement", New Object() {measurementUnitId, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteMaterialUnitMesurement(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitMesurement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitMesurement(ByVal clientId As String, ByVal materialId As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUnitMesurement", New Object() {clientId, materialId, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUnitMesurement(ByVal clientId As String, ByVal materialId As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUnitMesurement", New Object() {clientId, materialId, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUnitMesurement(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStoragePackaging", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStoragePackaging(ByVal materialId As String, ByVal paramName As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetStoragePackaging", New Object() {materialId, paramName, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStoragePackaging(ByVal materialId As String, ByVal paramName As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStoragePackaging", New Object() {materialId, paramName, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStoragePackaging(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuggestedLocations", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuggestedLocations(ByVal LICENSE_ID As Integer, ByVal LOGIN_ID As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSuggestedLocations", New Object() {LICENSE_ID, LOGIN_ID, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSuggestedLocations(ByVal LICENSE_ID As Integer, ByVal LOGIN_ID As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSuggestedLocations", New Object() {LICENSE_ID, LOGIN_ID, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSuggestedLocations(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsReceptionDocumentByTask", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaterialsReceptionDocumentByTask(ByVal SERIAL_NUMBER As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMaterialsReceptionDocumentByTask", New Object() {SERIAL_NUMBER, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaterialsReceptionDocumentByTask(ByVal SERIAL_NUMBER As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaterialsReceptionDocumentByTask", New Object() {SERIAL_NUMBER, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaterialsReceptionDocumentByTask(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsForMasterPackComponentByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaterialsForMasterPackComponentByClient(ByVal pCLIENT_OWNER As String, ByVal masterPackMaterialId As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMaterialsForMasterPackComponentByClient", New Object() {pCLIENT_OWNER, masterPackMaterialId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaterialsForMasterPackComponentByClient(ByVal pCLIENT_OWNER As String, ByVal masterPackMaterialId As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaterialsForMasterPackComponentByClient", New Object() {pCLIENT_OWNER, masterPackMaterialId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaterialsForMasterPackComponentByClient(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsComponentsMasterPack", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaterialsComponentsMasterPack(ByVal pMaterialId As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMaterialsComponentsMasterPack", New Object() {pMaterialId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaterialsComponentsMasterPack(ByVal pMaterialId As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaterialsComponentsMasterPack", New Object() {pMaterialId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaterialsComponentsMasterPack(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMasterPackComponent", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertMasterPackComponent(ByVal pMasterPackCode As String, ByVal pComponentMaterialId As String, ByVal pQTY As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertMasterPackComponent", New Object() {pMasterPackCode, pComponentMaterialId, pQTY, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginInsertMasterPackComponent(ByVal pMasterPackCode As String, ByVal pComponentMaterialId As String, ByVal pQTY As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("InsertMasterPackComponent", New Object() {pMasterPackCode, pComponentMaterialId, pQTY, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndInsertMasterPackComponent(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMasterPackComponent", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteMasterPackComponent(ByVal pMasterPackComponentId As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteMasterPackComponent", New Object() {pMasterPackComponentId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteMasterPackComponent(ByVal pMasterPackComponentId As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteMasterPackComponent", New Object() {pMasterPackComponentId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteMasterPackComponent(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MergeMasterPackComponentByLoad", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MergeMasterPackComponentByLoad(ByVal masterPackCode As String, ByVal componentMaterial As String, ByVal qty As Integer, ByRef result As String, ByVal environmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("MergeMasterPackComponentByLoad", New Object() {masterPackCode, componentMaterial, qty, result, environmentName})
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginMergeMasterPackComponentByLoad(ByVal masterPackCode As String, ByVal componentMaterial As String, ByVal qty As Integer, ByVal result As String, ByVal environmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MergeMasterPackComponentByLoad", New Object() {masterPackCode, componentMaterial, qty, result, environmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMergeMasterPackComponentByLoad(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarPropiedadPorBodegaAMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarPropiedadPorBodegaAMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal valor As String, ByVal usuario As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AgregarPropiedadPorBodegaAMaterial", New Object() {idPropiedadMaterial, materialId, bodega, valor, usuario, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarPropiedadPorBodegaAMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal valor As String, ByVal usuario As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarPropiedadPorBodegaAMaterial", New Object() {idPropiedadMaterial, materialId, bodega, valor, usuario, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarPropiedadPorBodegaAMaterial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModificarPropiedadPorBodegaAMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModificarPropiedadPorBodegaAMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal valor As String, ByVal usuario As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ModificarPropiedadPorBodegaAMaterial", New Object() {idPropiedadMaterial, materialId, bodega, valor, usuario, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginModificarPropiedadPorBodegaAMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal valor As String, ByVal usuario As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ModificarPropiedadPorBodegaAMaterial", New Object() {idPropiedadMaterial, materialId, bodega, valor, usuario, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndModificarPropiedadPorBodegaAMaterial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarPropiedadPorBodegaDeMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarPropiedadPorBodegaDeMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("EliminarPropiedadPorBodegaDeMaterial", New Object() {idPropiedadMaterial, materialId, bodega, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarPropiedadPorBodegaDeMaterial(ByVal idPropiedadMaterial As Integer, ByVal materialId As String, ByVal bodega As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarPropiedadPorBodegaDeMaterial", New Object() {idPropiedadMaterial, materialId, bodega, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarPropiedadPorBodegaDeMaterial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPropiedadesDeMaterialPorBodega", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPropiedadesDeMaterialPorBodega(ByVal materialId As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerPropiedadesDeMaterialPorBodega", New Object() {materialId, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerPropiedadesDeMaterialPorBodega(ByVal materialId As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerPropiedadesDeMaterialPorBodega", New Object() {materialId, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerPropiedadesDeMaterialPorBodega(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPropiedadesDeMateriales", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerPropiedadesDeMateriales(ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerPropiedadesDeMateriales", New Object() {pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerPropiedadesDeMateriales(ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerPropiedadesDeMateriales", New Object() {pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerPropiedadesDeMateriales(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
    End Class
End Namespace
