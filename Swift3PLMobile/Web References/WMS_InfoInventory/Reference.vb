'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8937
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8937.
'
Namespace WMS_InfoInventory
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WMS_InfoInventorySoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WMS_InfoInventory
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = AppSettings.ServerUrl + "/Info/WMS_InfoInventory.asmx"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByLicense_JSON", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByLicense_JSON(ByVal pLICENSE_ID As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("GetInventory_ByLicense_JSON", New Object() {pLICENSE_ID, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByLicense_JSON(ByVal pLICENSE_ID As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByLicense_JSON", New Object() {pLICENSE_ID, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByLicense_JSON(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_View", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_View(ByVal Login As String, ByVal pViewName As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_View", New Object() {Login, pViewName, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_View(ByVal Login As String, ByVal pViewName As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_View", New Object() {Login, pViewName, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_View(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByClient(ByVal pClientCode As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_ByClient", New Object() {pClientCode, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByClient(ByVal pClientCode As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByClient", New Object() {pClientCode, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByClient(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByLicense", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByLicense(ByVal pLICENSE_ID As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_ByLicense", New Object() {pLICENSE_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByLicense(ByVal pLICENSE_ID As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByLicense", New Object() {pLICENSE_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByLicense(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByWarehouse", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByWarehouse(ByVal Login As String, ByVal pWAREHOUSE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_ByWarehouse", New Object() {Login, pWAREHOUSE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByWarehouse(ByVal Login As String, ByVal pWAREHOUSE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByWarehouse", New Object() {Login, pWAREHOUSE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByWarehouse(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByWarehouseAndLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByWarehouseAndLocation(ByVal pWAREHOUSE As String, ByVal pSPOT_LOCATION As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_ByWarehouseAndLocation", New Object() {pWAREHOUSE, pSPOT_LOCATION, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByWarehouseAndLocation(ByVal pWAREHOUSE As String, ByVal pSPOT_LOCATION As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByWarehouseAndLocation", New Object() {pWAREHOUSE, pSPOT_LOCATION, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByWarehouseAndLocation(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_GroupByMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_GroupByMaterial(ByVal Login As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_GroupByMaterial", New Object() {Login, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_GroupByMaterial(ByVal Login As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_GroupByMaterial", New Object() {Login, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_GroupByMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_GroupByWarehouseMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_GroupByWarehouseMaterial(ByVal pMATERIAL_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_GroupByWarehouseMaterial", New Object() {pMATERIAL_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_GroupByWarehouseMaterial(ByVal pMATERIAL_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_GroupByWarehouseMaterial", New Object() {pMATERIAL_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_GroupByWarehouseMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInventory_ByMaterial(ByVal pMATERIAL_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInventory_ByMaterial", New Object() {pMATERIAL_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInventory_ByMaterial(ByVal pMATERIAL_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInventory_ByMaterial", New Object() {pMATERIAL_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInventory_ByMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_POLIZA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_INV_X_POLIZA(ByVal pPOLIZA As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_INV_X_POLIZA", New Object() {pPOLIZA, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_INV_X_POLIZA(ByVal pPOLIZA As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_INV_X_POLIZA", New Object() {pPOLIZA, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_INV_X_POLIZA(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_SKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_INV_X_SKU(ByVal pSKU As String, ByVal pLogin As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_INV_X_SKU", New Object() {pSKU, pLogin, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_INV_X_SKU(ByVal pSKU As String, ByVal pLogin As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_INV_X_SKU", New Object() {pSKU, pLogin, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_INV_X_SKU(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_LOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_INV_X_LOC(ByVal pLOC As String, ByVal pLogin As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_INV_X_LOC", New Object() {pLOC, pLogin, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_INV_X_LOC(ByVal pLOC As String, ByVal pLogin As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_INV_X_LOC", New Object() {pLOC, pLogin, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_INV_X_LOC(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocation(ByVal pLOC As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLocation", New Object() {pLOC, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLocation(ByVal pLOC As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLocation", New Object() {pLOC, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLocation(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_LIC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_INV_X_LIC(ByVal pLIC As Integer, ByVal pLogin As String, ByVal pSKU As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_INV_X_LIC", New Object() {pLIC, pLogin, pSKU, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_INV_X_LIC(ByVal pLIC As Integer, ByVal pLogin As String, ByVal pSKU As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_INV_X_LIC", New Object() {pLIC, pLogin, pSKU, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_INV_X_LIC(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLicenceAndSkuToRealloc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLicenceAndSkuToRealloc(ByVal pLIC As Integer, ByVal pSKU As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateLicenceAndSkuToRealloc", New Object() {pLIC, pSKU, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateLicenceAndSkuToRealloc(ByVal pLIC As Integer, ByVal pSKU As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateLicenceAndSkuToRealloc", New Object() {pLIC, pSKU, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateLicenceAndSkuToRealloc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLicenseLocationForRealloc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLicenseLocationForRealloc(ByVal license As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateLicenseLocationForRealloc", New Object() {license, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateLicenseLocationForRealloc(ByVal license As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateLicenseLocationForRealloc", New Object() {license, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateLicenseLocationForRealloc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLocationForStorage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLocationForStorage(ByVal location As String, ByVal login As String, ByVal taskId As String, ByVal licenseId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateLocationForStorage", New Object() {location, login, taskId, licenseId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateLocationForStorage(ByVal location As String, ByVal login As String, ByVal taskId As String, ByVal licenseId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateLocationForStorage", New Object() {location, login, taskId, licenseId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateLocationForStorage(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLocationMaxWeigth", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLocationMaxWeigth(ByVal locationSpot As String, ByVal licenseId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateLocationMaxWeigth", New Object() {locationSpot, licenseId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateLocationMaxWeigth(ByVal locationSpot As String, ByVal licenseId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateLocationMaxWeigth", New Object() {locationSpot, licenseId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateLocationMaxWeigth(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateIfStatusOfLicenseAllowsRealloc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateIfStatusOfLicenseAllowsRealloc(ByVal licenseId As Integer, ByVal codeSku As String, ByVal environmentName As String, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateIfStatusOfLicenseAllowsRealloc", New Object() {licenseId, codeSku, environmentName, result})
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateIfStatusOfLicenseAllowsRealloc(ByVal licenseId As Integer, ByVal codeSku As String, ByVal environmentName As String, ByVal result As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateIfStatusOfLicenseAllowsRealloc", New Object() {licenseId, codeSku, environmentName, result}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateIfStatusOfLicenseAllowsRealloc(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateIfLocationExists", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateIfLocationExists(ByVal enviroment As String, ByVal location As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateIfLocationExists", New Object() {enviroment, location})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateIfLocationExists(ByVal enviroment As String, ByVal location As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateIfLocationExists", New Object() {enviroment, location}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateIfLocationExists(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInformacionDeLaEtiquetaOCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerInformacionDeLaEtiquetaOCaja(ByVal type As String, ByVal barcode As String, ByVal enviroment As String, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerInformacionDeLaEtiquetaOCaja", New Object() {type, barcode, enviroment, result})
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerInformacionDeLaEtiquetaOCaja(ByVal type As String, ByVal barcode As String, ByVal enviroment As String, ByVal result As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerInformacionDeLaEtiquetaOCaja", New Object() {type, barcode, enviroment, result}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerInformacionDeLaEtiquetaOCaja(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeLaEtiquetaOCaja", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDetalleDeLaEtiquetaOCaja(ByVal type As String, ByVal barcode As String, ByVal wave As Integer, ByVal enviroment As String, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerDetalleDeLaEtiquetaOCaja", New Object() {type, barcode, wave, enviroment, result})
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerDetalleDeLaEtiquetaOCaja(ByVal type As String, ByVal barcode As String, ByVal wave As Integer, ByVal enviroment As String, ByVal result As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerDetalleDeLaEtiquetaOCaja", New Object() {type, barcode, wave, enviroment, result}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerDetalleDeLaEtiquetaOCaja(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReubicarEtiquetaDeDespacho", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReubicarEtiquetaDeDespacho(ByVal labelId As String, ByVal targetLocation As String, ByVal enviroment As String, ByRef result As String) As String
            Dim results() As Object = Me.Invoke("ReubicarEtiquetaDeDespacho", New Object() {labelId, targetLocation, enviroment, result})
            result = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReubicarEtiquetaDeDespacho(ByVal labelId As String, ByVal targetLocation As String, ByVal enviroment As String, ByVal result As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReubicarEtiquetaDeDespacho", New Object() {labelId, targetLocation, enviroment, result}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReubicarEtiquetaDeDespacho(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLocationVolume", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLocationVolume(ByVal locationSpot As String, ByVal licenseId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateLocationVolume", New Object() {locationSpot, licenseId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateLocationVolume(ByVal locationSpot As String, ByVal licenseId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateLocationVolume", New Object() {locationSpot, licenseId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateLocationVolume(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
    End Class
End Namespace
