'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8745
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
'
Namespace WMS_Clients
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WMS_ClientsSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WMS_Clients
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = AppSettings.ServerUrl + "/Catalogues/WMS_Clients.asmx"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByVal pCLIENT_ROUTE As String, ByVal pCLIENT_CLASS As String, ByVal pCLIENT_STATUS As Integer, ByVal pCLIENT_ERP_CODE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("CreateClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pCLIENT_ROUTE, pCLIENT_CLASS, pCLIENT_STATUS, pCLIENT_ERP_CODE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByVal pCLIENT_ROUTE As String, ByVal pCLIENT_CLASS As String, ByVal pCLIENT_STATUS As Integer, ByVal pCLIENT_ERP_CODE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pCLIENT_ROUTE, pCLIENT_CLASS, pCLIENT_STATUS, pCLIENT_ERP_CODE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByVal pCLIENT_ROUTE As String, ByVal pCLIENT_CLASS As String, ByVal pCLIENT_STATUS As Integer, ByVal pCLIENT_ERP_CODE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pCLIENT_ROUTE, pCLIENT_CLASS, pCLIENT_STATUS, pCLIENT_ERP_CODE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByVal pCLIENT_ROUTE As String, ByVal pCLIENT_CLASS As String, ByVal pCLIENT_STATUS As Integer, ByVal pCLIENT_ERP_CODE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pCLIENT_ROUTE, pCLIENT_CLASS, pCLIENT_STATUS, pCLIENT_ERP_CODE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteClients(ByVal pCLIENT_CODE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteClients", New Object() {pCLIENT_CODE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteClients(ByVal pCLIENT_CODE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteClients", New Object() {pCLIENT_CODE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchByKeyClients(ByVal pCLIENT_CODE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchByKeyClients", New Object() {pCLIENT_CODE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchByKeyClients(ByVal pCLIENT_CODE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchByKeyClients", New Object() {pCLIENT_CODE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchByKeyClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientsPendingToRelate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClientsPendingToRelate(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetClientsPendingToRelate", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetClientsPendingToRelate(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetClientsPendingToRelate", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetClientsPendingToRelate(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetERPClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetERPClients(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetERPClients", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetERPClients(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetERPClients", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetERPClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchPartialClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchPartialClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchPartialClients(ByVal pCLIENT_CODE As String, ByVal pCLIENT_NAME As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchPartialClients", New Object() {pCLIENT_CODE, pCLIENT_NAME, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchPartialClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetViewClients", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetViewClients(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetViewClients", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetViewClients(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetViewClients", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetViewClients(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIfExistsMaterialByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIfExistsMaterialByClient(ByVal clientCode As String, ByRef result As String, ByVal environmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("GetIfExistsMaterialByClient", New Object() {clientCode, result, environmentName})
            result = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGetIfExistsMaterialByClient(ByVal clientCode As String, ByVal result As String, ByVal environmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetIfExistsMaterialByClient", New Object() {clientCode, result, environmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetIfExistsMaterialByClient(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
    End Class
End Namespace
