'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8825
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8825.
'
Namespace WMS_InfoTrans
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WMS_InfoTransSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WMS_InfoTrans
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = AppSettings.ServerUrl + "/info/wms_infoTrans.asmx"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOccupancyLevel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOccupancyLevel(ByVal pDate As String, ByVal pDateTo As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetOccupancyLevel", New Object() {pDate, pDateTo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetOccupancyLevel(ByVal pDate As String, ByVal pDateTo As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetOccupancyLevel", New Object() {pDate, pDateTo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetOccupancyLevel(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIfPolizaHasReview", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckIfPolizaHasReview(ByVal pPoliza As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckIfPolizaHasReview", New Object() {pPoliza, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCheckIfPolizaHasReview(ByVal pPoliza As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CheckIfPolizaHasReview", New Object() {pPoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCheckIfPolizaHasReview(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickingVsAudit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPickingVsAudit(ByVal pSinceDate As Date, ByVal pToDate As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPickingVsAudit", New Object() {pSinceDate, pToDate, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPickingVsAudit(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPickingVsAudit", New Object() {pSinceDate, pToDate, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPickingVsAudit(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWavePickingDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWavePickingDetail(ByVal pWAVE_ID As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetWavePickingDetail", New Object() {pWAVE_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetWavePickingDetail(ByVal pWAVE_ID As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetWavePickingDetail", New Object() {pWAVE_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetWavePickingDetail(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditLog(ByVal pDate As String, ByVal pDateTo As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAuditLog", New Object() {pDate, pDateTo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAuditLog(ByVal pDate As String, ByVal pDateTo As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAuditLog", New Object() {pDate, pDateTo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAuditLog(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLogDispatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditLogDispatch(ByVal pDate As String, ByVal pDateTo As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAuditLogDispatch", New Object() {pDate, pDateTo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAuditLogDispatch(ByVal pDate As String, ByVal pDateTo As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAuditLogDispatch", New Object() {pDate, pDateTo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAuditLogDispatch(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImgAudi", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImgAudi(ByVal pCodePoliza As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetImgAudi", New Object() {pCodePoliza, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetImgAudi(ByVal pCodePoliza As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetImgAudi", New Object() {pCodePoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetImgAudi(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditLabel(ByVal pItemName As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAuditLabel", New Object() {pItemName, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAuditLabel(ByVal pItemName As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAuditLabel", New Object() {pItemName, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAuditLabel(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditSummary(ByVal pCODIGO_POLIZA As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAuditSummary", New Object() {pCODIGO_POLIZA, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAuditSummary(ByVal pCODIGO_POLIZA As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAuditSummary", New Object() {pCODIGO_POLIZA, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAuditSummary(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditView(ByVal pAuditID As Integer, ByVal pOPTION As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAuditView", New Object() {pAuditID, pOPTION, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAuditView(ByVal pAuditID As Integer, ByVal pOPTION As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAuditView", New Object() {pAuditID, pOPTION, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAuditView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyFirstTask", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyFirstTask(ByVal pLoginID As String, ByVal pWaveID As Integer, ByVal pCODIGO_POLIZA_SOURCE As String, ByVal pSKU As String, ByVal LocationSpotTarget As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyFirstTask", New Object() {pLoginID, pWaveID, pCODIGO_POLIZA_SOURCE, pSKU, LocationSpotTarget, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMyFirstTask(ByVal pLoginID As String, ByVal pWaveID As Integer, ByVal pCODIGO_POLIZA_SOURCE As String, ByVal pSKU As String, ByVal LocationSpotTarget As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMyFirstTask", New Object() {pLoginID, pWaveID, pCODIGO_POLIZA_SOURCE, pSKU, LocationSpotTarget, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMyFirstTask(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsContainedOnWave", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsContainedOnWave(ByVal pLoginID As String, ByVal pLocationID As String, ByVal pWaveID As Integer, ByVal pSKU As String, ByVal pLicenseID As Integer, ByVal pCODIGO_POLIZA_SOURCE As String, ByVal pSERVICE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("IsContainedOnWave", New Object() {pLoginID, pLocationID, pWaveID, pSKU, pLicenseID, pCODIGO_POLIZA_SOURCE, pSERVICE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginIsContainedOnWave(ByVal pLoginID As String, ByVal pLocationID As String, ByVal pWaveID As Integer, ByVal pSKU As String, ByVal pLicenseID As Integer, ByVal pCODIGO_POLIZA_SOURCE As String, ByVal pSERVICE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsContainedOnWave", New Object() {pLoginID, pLocationID, pWaveID, pSKU, pLicenseID, pCODIGO_POLIZA_SOURCE, pSERVICE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIsContainedOnWave(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyTasks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyTasks(ByVal pLoginID As String, ByVal pRegimen As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyTasks", New Object() {pLoginID, pRegimen, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMyTasks(ByVal pLoginID As String, ByVal pRegimen As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMyTasks", New Object() {pLoginID, pRegimen, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMyTasks(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClient_CommercialAggrements", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClient_CommercialAggrements(ByVal pCLIENT_CODE As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetClient_CommercialAggrements", New Object() {pCLIENT_CODE, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetClient_CommercialAggrements(ByVal pCLIENT_CODE As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetClient_CommercialAggrements", New Object() {pCLIENT_CODE, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetClient_CommercialAggrements(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDateTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServerDateTime() As String
            Dim results() As Object = Me.Invoke("GetServerDateTime", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetServerDateTime(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetServerDateTime", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetServerDateTime(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyLastLicense", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMyLastLicense(ByVal pCODIGO_POLIZA As String, ByVal pLOGIN_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMyLastLicense", New Object() {pCODIGO_POLIZA, pLOGIN_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMyLastLicense(ByVal pCODIGO_POLIZA As String, ByVal pLOGIN_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMyLastLicense", New Object() {pCODIGO_POLIZA, pLOGIN_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMyLastLicense(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_LICENSE_DETAIL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_LICENSE_DETAIL(ByVal pLICENSE_ID As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_LICENSE_DETAIL", New Object() {pLICENSE_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_LICENSE_DETAIL(ByVal pLICENSE_ID As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_LICENSE_DETAIL", New Object() {pLICENSE_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_LICENSE_DETAIL(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OP_WMS_POLIZA_HEADER", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_OP_WMS_POLIZA_HEADER(ByVal pCodigoPoliza As String, ByVal pNumeroOrden As String, ByVal pRegimen As String, ByVal pTipo As String, ByVal pOperador As String, ByVal validarOperador As Boolean, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_OP_WMS_POLIZA_HEADER", New Object() {pCodigoPoliza, pNumeroOrden, pRegimen, pTipo, pOperador, validarOperador, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGet_OP_WMS_POLIZA_HEADER(ByVal pCodigoPoliza As String, ByVal pNumeroOrden As String, ByVal pRegimen As String, ByVal pTipo As String, ByVal pOperador As String, ByVal validarOperador As Boolean, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Get_OP_WMS_POLIZA_HEADER", New Object() {pCodigoPoliza, pNumeroOrden, pRegimen, pTipo, pOperador, validarOperador, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGet_OP_WMS_POLIZA_HEADER(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OP_WMS_IMAGENES_POLIZA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Get_OP_WMS_IMAGENES_POLIZA(ByVal pCODIGO_BARRAS_ID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Get_OP_WMS_IMAGENES_POLIZA", New Object() {pCODIGO_BARRAS_ID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGet_OP_WMS_IMAGENES_POLIZA(ByVal pCODIGO_BARRAS_ID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Get_OP_WMS_IMAGENES_POLIZA", New Object() {pCODIGO_BARRAS_ID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGet_OP_WMS_IMAGENES_POLIZA(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransBasicView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransBasicView(ByVal UserLogged As String, ByVal plstUsers As String, ByVal plstTransTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransBasicView", New Object() {UserLogged, plstUsers, plstTransTypes, pSinceDate, pToDate, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransBasicView(ByVal UserLogged As String, ByVal plstUsers As String, ByVal plstTransTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransBasicView", New Object() {UserLogged, plstUsers, plstTransTypes, pSinceDate, pToDate, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransBasicView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransBasicView_ByClient", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransBasicView_ByClient(ByVal pClientID As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransBasicView_ByClient", New Object() {pClientID, pSinceDate, pToDate, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransBasicView_ByClient(ByVal pClientID As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransBasicView_ByClient", New Object() {pClientID, pSinceDate, pToDate, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransBasicView_ByClient(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksBasicView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTasksBasicView(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal login As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTasksBasicView", New Object() {plstUsers, plstTasksTypes, pSinceDate, pToDate, login, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTasksBasicView(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal login As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTasksBasicView", New Object() {plstUsers, plstTasksTypes, pSinceDate, pToDate, login, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTasksBasicView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepPolizaEgreso", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRepPolizaEgreso(ByVal pCodigoPoliza As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRepPolizaEgreso", New Object() {pCodigoPoliza, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRepPolizaEgreso(ByVal pCodigoPoliza As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRepPolizaEgreso", New Object() {pCodigoPoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRepPolizaEgreso(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepPolizaFiscal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRepPolizaFiscal(ByVal pCodigoPoliza As String, ByVal pRegimen As String, ByVal pTipo As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRepPolizaFiscal", New Object() {pCodigoPoliza, pRegimen, pTipo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRepPolizaFiscal(ByVal pCodigoPoliza As String, ByVal pRegimen As String, ByVal pTipo As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRepPolizaFiscal", New Object() {pCodigoPoliza, pRegimen, pTipo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRepPolizaFiscal(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksBasicView_Calendar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTasksBasicView_Calendar(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTasksBasicView_Calendar", New Object() {plstUsers, plstTasksTypes, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTasksBasicView_Calendar(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTasksBasicView_Calendar", New Object() {plstUsers, plstTasksTypes, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTasksBasicView_Calendar(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBasicView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandBasicView(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDateFilterType As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandBasicView", New Object() {plstUsers, plstTasksTypes, pDateFilterType, pSinceDate, pToDate, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandBasicView(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDateFilterType As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandBasicView", New Object() {plstUsers, plstTasksTypes, pDateFilterType, pSinceDate, pToDate, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandBasicView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBasicView_Calendar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandBasicView_Calendar(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandBasicView_Calendar", New Object() {plstUsers, plstTasksTypes, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandBasicView_Calendar(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandBasicView_Calendar", New Object() {plstUsers, plstTasksTypes, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandBasicView_Calendar(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandAssignedView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandAssignedView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandAssignedView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandAssignedView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandAssignedView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandAssignedView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandAssignedView_Calendar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandAssignedView_Calendar(ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandAssignedView_Calendar", New Object() {pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandAssignedView_Calendar(ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandAssignedView_Calendar", New Object() {pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandAssignedView_Calendar(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandVoidedView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandVoidedView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandVoidedView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandVoidedView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandVoidedView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandVoidedView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandPendingPickingView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandPendingPickingView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandPendingPickingView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandPendingPickingView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandPendingPickingView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandPendingPickingView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByVal pBIN As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingTasks", New Object() {pTaskType, pLoginID, pBIN, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByVal pBIN As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingTasks", New Object() {pTaskType, pLoginID, pBIN, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingTasks(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDoc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingTasksByDoc(ByVal pERP_DOCUMENT As String, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingTasksByDoc", New Object() {pERP_DOCUMENT, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingTasksByDoc(ByVal pERP_DOCUMENT As String, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingTasksByDoc", New Object() {pERP_DOCUMENT, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingTasksByDoc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDocAndSKU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingTasksByDocAndSKU(ByVal pERP_DOCUMENT As String, ByVal pSKU As String, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingTasksByDocAndSKU", New Object() {pERP_DOCUMENT, pSKU, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingTasksByDocAndSKU(ByVal pERP_DOCUMENT As String, ByVal pSKU As String, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingTasksByDocAndSKU", New Object() {pERP_DOCUMENT, pSKU, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingTasksByDocAndSKU(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextERP_DOC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNextERP_DOC(ByVal pLinea As String, ByVal pSector As String, ByVal pRuta As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetNextERP_DOC", New Object() {pLinea, pSector, pRuta, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetNextERP_DOC(ByVal pLinea As String, ByVal pSector As String, ByVal pRuta As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNextERP_DOC", New Object() {pLinea, pSector, pRuta, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetNextERP_DOC(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetERP_DOC_By_BIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetERP_DOC_By_BIN(ByVal pBIN As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetERP_DOC_By_BIN", New Object() {pBIN, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetERP_DOC_By_BIN(ByVal pBIN As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetERP_DOC_By_BIN", New Object() {pBIN, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetERP_DOC_By_BIN(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingReplenishmentTasks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingReplenishmentTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingReplenishmentTasks", New Object() {pTaskType, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingReplenishmentTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingReplenishmentTasks", New Object() {pTaskType, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingReplenishmentTasks(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingRelocationTasks", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingRelocationTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingRelocationTasks", New Object() {pTaskType, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingRelocationTasks(ByVal pTaskType As String, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingRelocationTasks", New Object() {pTaskType, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingRelocationTasks(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastTrans_ByLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLastTrans_ByLocation(ByVal pWarehouseParent As String, ByVal pLocation As String, ByVal pTopRows As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLastTrans_ByLocation", New Object() {pWarehouseParent, pLocation, pTopRows, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLastTrans_ByLocation(ByVal pWarehouseParent As String, ByVal pLocation As String, ByVal pTopRows As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLastTrans_ByLocation", New Object() {pWarehouseParent, pLocation, pTopRows, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLastTrans_ByLocation(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentDocOnDispatchInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCurrentDocOnDispatchInfo(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCurrentDocOnDispatchInfo", New Object() {pLine, pLogin, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCurrentDocOnDispatchInfo(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCurrentDocOnDispatchInfo", New Object() {pLine, pLogin, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCurrentDocOnDispatchInfo(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPerc_DocOnDispatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPerc_DocOnDispatch(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByRef pResult As String) As Double
            Dim results() As Object = Me.Invoke("GetPerc_DocOnDispatch", New Object() {pLine, pLogin, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPerc_DocOnDispatch(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPerc_DocOnDispatch", New Object() {pLine, pLogin, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPerc_DocOnDispatch(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllowMaterialScann_DocOnDispatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AllowMaterialScann_DocOnDispatch(ByVal pLine As String, ByVal pMaterialID As String, ByVal pScannedQty As Double, ByVal pLogin As String, ByVal pEnvironmentName As String, ByRef pResult As String) As Double
            Dim results() As Object = Me.Invoke("AllowMaterialScann_DocOnDispatch", New Object() {pLine, pMaterialID, pScannedQty, pLogin, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginAllowMaterialScann_DocOnDispatch(ByVal pLine As String, ByVal pMaterialID As String, ByVal pScannedQty As Double, ByVal pLogin As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AllowMaterialScann_DocOnDispatch", New Object() {pLine, pMaterialID, pScannedQty, pLogin, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAllowMaterialScann_DocOnDispatch(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransDet_DocOnDispatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransDet_DocOnDispatch(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTransDet_DocOnDispatch", New Object() {pLine, pLogin, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransDet_DocOnDispatch(ByVal pLine As String, ByVal pLogin As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransDet_DocOnDispatch", New Object() {pLine, pLogin, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransDet_DocOnDispatch(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReplenishmentProdsBasicView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReplenishmentProdsBasicView(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetReplenishmentProdsBasicView", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetReplenishmentProdsBasicView(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReplenishmentProdsBasicView", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetReplenishmentProdsBasicView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReplenishmentByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReplenishmentByUser(ByVal pUser As String, ByVal pWarehouse As String, ByVal pTaskType As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetReplenishmentByUser", New Object() {pUser, pWarehouse, pTaskType, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetReplenishmentByUser(ByVal pUser As String, ByVal pWarehouse As String, ByVal pTaskType As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReplenishmentByUser", New Object() {pUser, pWarehouse, pTaskType, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetReplenishmentByUser(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionalBINInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionalBINInfo(ByVal pBinID As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransactionalBINInfo", New Object() {pBinID, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransactionalBINInfo(ByVal pBinID As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransactionalBINInfo", New Object() {pBinID, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransactionalBINInfo(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionalDOCInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionalDOCInfo(ByVal pDocNumber As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransactionalDOCInfo", New Object() {pDocNumber, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransactionalDOCInfo(ByVal pDocNumber As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransactionalDOCInfo", New Object() {pDocNumber, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransactionalDOCInfo(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPending_Docs", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPending_Docs(ByVal pLinea As String, ByVal pSector As String, ByVal pRuta As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPending_Docs", New Object() {pLinea, pSector, pRuta, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPending_Docs(ByVal pLinea As String, ByVal pSector As String, ByVal pRuta As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPending_Docs", New Object() {pLinea, pSector, pRuta, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPending_Docs(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocsReportBasicView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocsReportBasicView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDocsReportBasicView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDocsReportBasicView(ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal pDateFilterType As String, ByVal pDates As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDocsReportBasicView", New Object() {pSinceDate, pToDate, pDateFilterType, pDates, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDocsReportBasicView(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLineBalancingBySector", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLineBalancingBySector(ByVal pSector As String, ByVal pRuta As String, ByVal pIncluyeAsignados As Boolean, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLineBalancingBySector", New Object() {pSector, pRuta, pIncluyeAsignados, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLineBalancingBySector(ByVal pSector As String, ByVal pRuta As String, ByVal pIncluyeAsignados As Boolean, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLineBalancingBySector", New Object() {pSector, pRuta, pIncluyeAsignados, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLineBalancingBySector(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBySizeForBalancing", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDemandBySizeForBalancing(ByVal pSector As String, ByVal pRuta As String, ByVal pIncluyeAsignados As Boolean, ByVal pTamano As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDemandBySizeForBalancing", New Object() {pSector, pRuta, pIncluyeAsignados, pTamano, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDemandBySizeForBalancing(ByVal pSector As String, ByVal pRuta As String, ByVal pIncluyeAsignados As Boolean, ByVal pTamano As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDemandBySizeForBalancing", New Object() {pSector, pRuta, pIncluyeAsignados, pTamano, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDemandBySizeForBalancing(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientRouteInfoByDoc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClientRouteInfoByDoc(ByVal pDoc As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetClientRouteInfoByDoc", New Object() {pDoc, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetClientRouteInfoByDoc(ByVal pDoc As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetClientRouteInfoByDoc", New Object() {pDoc, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetClientRouteInfoByDoc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextPendingBIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNextPendingBIN(ByVal pLogin As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetNextPendingBIN", New Object() {pLogin, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetNextPendingBIN(ByVal pLogin As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetNextPendingBIN", New Object() {pLogin, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetNextPendingBIN(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDoc_Kiosk", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingTasksByDoc_Kiosk(ByVal pERP_DOCUMENT As String, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPendingTasksByDoc_Kiosk", New Object() {pERP_DOCUMENT, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPendingTasksByDoc_Kiosk(ByVal pERP_DOCUMENT As String, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPendingTasksByDoc_Kiosk", New Object() {pERP_DOCUMENT, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPendingTasksByDoc_Kiosk(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocumentInfo(ByVal pDoc As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDocumentInfo", New Object() {pDoc, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDocumentInfo(ByVal pDoc As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDocumentInfo", New Object() {pDoc, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDocumentInfo(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsolidationByDay", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsolidationByDay(ByVal pDate As Date, ByVal pLoginID As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetConsolidationByDay", New Object() {pDate, pLoginID, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetConsolidationByDay(ByVal pDate As Date, ByVal pLoginID As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetConsolidationByDay", New Object() {pDate, pLoginID, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetConsolidationByDay(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRutasPorSector", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRutasPorSector(ByVal pSector As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRutasPorSector", New Object() {pSector, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRutasPorSector(ByVal pSector As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRutasPorSector", New Object() {pSector, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRutasPorSector(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationsByDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocationsByDocument(ByVal pDoc As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLocationsByDocument", New Object() {pDoc, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLocationsByDocument(ByVal pDoc As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLocationsByDocument", New Object() {pDoc, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLocationsByDocument(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFinishedDispatchAudit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFinishedDispatchAudit(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFinishedDispatchAudit", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetFinishedDispatchAudit(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFinishedDispatchAudit", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetFinishedDispatchAudit(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPassByPolizaAvailable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPassByPolizaAvailable(ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPassByPolizaAvailable", New Object() {pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPassByPolizaAvailable(ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPassByPolizaAvailable", New Object() {pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPassByPolizaAvailable(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPassByPolizaAssigned", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPassByPolizaAssigned(ByVal pPassId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPassByPolizaAssigned", New Object() {pPassId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPassByPolizaAssigned(ByVal pPassId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPassByPolizaAssigned", New Object() {pPassId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPassByPolizaAssigned(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_LOCATION", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_LOCATION(ByVal pLocation As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_LOCATION", New Object() {pLocation, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_LOCATION(ByVal pLocation As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_LOCATION", New Object() {pLocation, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_LOCATION(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_POLIZA_ASSIGNEDTO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_POLIZA_ASSIGNEDTO(ByVal pOperador As String, ByVal pPolizaOpcion As String, ByVal pRegimen As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_POLIZA_ASSIGNEDTO", New Object() {pOperador, pPolizaOpcion, pRegimen, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_POLIZA_ASSIGNEDTO(ByVal pOperador As String, ByVal pPolizaOpcion As String, ByVal pRegimen As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_POLIZA_ASSIGNEDTO", New Object() {pOperador, pPolizaOpcion, pRegimen, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_POLIZA_ASSIGNEDTO(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_TYPE_CHARGE_MOVIL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GET_TYPE_CHARGE_MOVIL(ByVal pLicenseId As Integer, ByVal pTypeTrans As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GET_TYPE_CHARGE_MOVIL", New Object() {pLicenseId, pTypeTrans, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGET_TYPE_CHARGE_MOVIL(ByVal pLicenseId As Integer, ByVal pTypeTrans As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GET_TYPE_CHARGE_MOVIL", New Object() {pLicenseId, pTypeTrans, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGET_TYPE_CHARGE_MOVIL(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchSkuAuditoriaDesp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchSkuAuditoriaDesp(ByVal pBarcode As String, ByVal pPoliza As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SearchSkuAuditoriaDesp", New Object() {pBarcode, pPoliza, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginSearchSkuAuditoriaDesp(ByVal pBarcode As String, ByVal pPoliza As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SearchSkuAuditoriaDesp", New Object() {pBarcode, pPoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndSearchSkuAuditoriaDesp(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskIngGeneral", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskIngGeneral(ByVal pCodigoPoliza As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTaskIngGeneral", New Object() {pCodigoPoliza, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskIngGeneral(ByVal pCodigoPoliza As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskIngGeneral", New Object() {pCodigoPoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskIngGeneral(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePoliza", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePoliza(ByVal pPOLIZA_SEGURO As String, ByVal pUSER As String, ByVal pRPOLIZA As String, ByVal pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("UpdatePoliza", New Object() {pPOLIZA_SEGURO, pUSER, pRPOLIZA, pResult, pEnvironmentName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdatePoliza(ByVal pPOLIZA_SEGURO As String, ByVal pUSER As String, ByVal pRPOLIZA As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdatePoliza", New Object() {pPOLIZA_SEGURO, pUSER, pRPOLIZA, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdatePoliza(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMaterial(ByVal pCODE_SKU As String, ByVal pSKU_DESCRIPTION As String, ByVal pCUSTOMER As String, ByVal pUSER As String, ByVal pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AddMaterial", New Object() {pCODE_SKU, pSKU_DESCRIPTION, pCUSTOMER, pUSER, pResult, pEnvironmentName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginAddMaterial(ByVal pCODE_SKU As String, ByVal pSKU_DESCRIPTION As String, ByVal pCUSTOMER As String, ByVal pUSER As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddMaterial", New Object() {pCODE_SKU, pSKU_DESCRIPTION, pCUSTOMER, pUSER, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddMaterial(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPolizaHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPolizaHeader(ByVal pNumeroPoliza As Integer, ByVal pCUSTOMER As String, ByVal pCUSTOMER_NAME As String, ByVal pUSER As String, ByVal pTIPO As String, ByVal pPOLASEGURADORA As String, ByVal pACUERDO_COMERCIAL As String, ByVal pIDENTITY As String, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddPolizaHeader", New Object() {pNumeroPoliza, pCUSTOMER, pCUSTOMER_NAME, pUSER, pTIPO, pPOLASEGURADORA, pACUERDO_COMERCIAL, pIDENTITY, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddPolizaHeader(ByVal pNumeroPoliza As Integer, ByVal pCUSTOMER As String, ByVal pCUSTOMER_NAME As String, ByVal pUSER As String, ByVal pTIPO As String, ByVal pPOLASEGURADORA As String, ByVal pACUERDO_COMERCIAL As String, ByVal pIDENTITY As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddPolizaHeader", New Object() {pNumeroPoliza, pCUSTOMER, pCUSTOMER_NAME, pUSER, pTIPO, pPOLASEGURADORA, pACUERDO_COMERCIAL, pIDENTITY, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddPolizaHeader(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLicense", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddLicense(ByVal pCUSTOMER As String, ByVal pWAREHOUSE As String, ByVal pLOCATION As String, ByVal pUSER As String, ByVal pFECHA As Date, ByVal pIDENTITY As String, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddLicense", New Object() {pCUSTOMER, pWAREHOUSE, pLOCATION, pUSER, pFECHA, pIDENTITY, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddLicense(ByVal pCUSTOMER As String, ByVal pWAREHOUSE As String, ByVal pLOCATION As String, ByVal pUSER As String, ByVal pFECHA As Date, ByVal pIDENTITY As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddLicense", New Object() {pCUSTOMER, pWAREHOUSE, pLOCATION, pUSER, pFECHA, pIDENTITY, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddLicense(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPolizaDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPolizaDetail(ByVal pHEADER As String, ByVal pLINE As String, ByVal pCUSTOMER As String, ByVal pCUSTOMER_NAME As String, ByVal pUSER As String, ByVal pSKU_DESCRIPTION As String, ByVal pUNIT_MEASURE As String, ByVal pQTY As String, ByVal pTOTAL As String, ByVal pUNIT_PRICE As String, ByVal pFECHA As Date, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddPolizaDetail", New Object() {pHEADER, pLINE, pCUSTOMER, pCUSTOMER_NAME, pUSER, pSKU_DESCRIPTION, pUNIT_MEASURE, pQTY, pTOTAL, pUNIT_PRICE, pFECHA, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddPolizaDetail(ByVal pHEADER As String, ByVal pLINE As String, ByVal pCUSTOMER As String, ByVal pCUSTOMER_NAME As String, ByVal pUSER As String, ByVal pSKU_DESCRIPTION As String, ByVal pUNIT_MEASURE As String, ByVal pQTY As String, ByVal pTOTAL As String, ByVal pUNIT_PRICE As String, ByVal pFECHA As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddPolizaDetail", New Object() {pHEADER, pLINE, pCUSTOMER, pCUSTOMER_NAME, pUSER, pSKU_DESCRIPTION, pUNIT_MEASURE, pQTY, pTOTAL, pUNIT_PRICE, pFECHA, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddPolizaDetail(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddInventory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddInventory( _
                    ByVal pcodeSku As String,  _
                    ByVal pskudes As String,  _
                    ByVal pumesure As String,  _
                    ByVal pqty As Integer,  _
                    ByVal ptotal As Decimal,  _
                    ByVal puprice As Decimal,  _
                    ByVal pcustomer As String,  _
                    ByVal pcustomername As String,  _
                    ByVal puser As String,  _
                    ByVal pwh As String,  _
                    ByVal psigno As String,  _
                    ByVal plocation As String,  _
                    ByVal pheader As String,  _
                    ByVal pfecha As Date,  _
                    ByVal pacuerdo As String,  _
                    ByVal pRESULTADO As String,  _
                    ByVal pResult As String,  _
                    ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddInventory", New Object() {pcodeSku, pskudes, pumesure, pqty, ptotal, puprice, pcustomer, pcustomername, puser, pwh, psigno, plocation, pheader, pfecha, pacuerdo, pRESULTADO, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddInventory( _
                    ByVal pcodeSku As String,  _
                    ByVal pskudes As String,  _
                    ByVal pumesure As String,  _
                    ByVal pqty As Integer,  _
                    ByVal ptotal As Decimal,  _
                    ByVal puprice As Decimal,  _
                    ByVal pcustomer As String,  _
                    ByVal pcustomername As String,  _
                    ByVal puser As String,  _
                    ByVal pwh As String,  _
                    ByVal psigno As String,  _
                    ByVal plocation As String,  _
                    ByVal pheader As String,  _
                    ByVal pfecha As Date,  _
                    ByVal pacuerdo As String,  _
                    ByVal pRESULTADO As String,  _
                    ByVal pResult As String,  _
                    ByVal pEnvironmentName As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddInventory", New Object() {pcodeSku, pskudes, pumesure, pqty, ptotal, puprice, pcustomer, pcustomername, puser, pwh, psigno, plocation, pheader, pfecha, pacuerdo, pRESULTADO, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddInventory(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGeneralData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddGeneralData(ByVal pcustomer As String, ByVal pcustomername As String, ByVal puser As String, ByVal pwh As String, ByVal plocation As String, ByVal pseguro As String, ByVal pacuerdo As String, ByVal pfecha As Date, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddGeneralData", New Object() {pcustomer, pcustomername, puser, pwh, plocation, pseguro, pacuerdo, pfecha, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddGeneralData(ByVal pcustomer As String, ByVal pcustomername As String, ByVal puser As String, ByVal pwh As String, ByVal plocation As String, ByVal pseguro As String, ByVal pacuerdo As String, ByVal pfecha As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddGeneralData", New Object() {pcustomer, pcustomername, puser, pwh, plocation, pseguro, pacuerdo, pfecha, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddGeneralData(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResultProcessDispatchExternal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ResultProcessDispatchExternal(ByVal pEnvironmentName As String, ByVal FechaDocumento As Date) As String
            Dim results() As Object = Me.Invoke("ResultProcessDispatchExternal", New Object() {pEnvironmentName, FechaDocumento})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginResultProcessDispatchExternal(ByVal pEnvironmentName As String, ByVal FechaDocumento As Date, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ResultProcessDispatchExternal", New Object() {pEnvironmentName, FechaDocumento}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndResultProcessDispatchExternal(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveInventoryFromFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveInventoryFromFile(ByVal pDATA As System.Data.DataSet, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("ReceiveInventoryFromFile", New Object() {pDATA, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReceiveInventoryFromFile(ByVal pDATA As System.Data.DataSet, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReceiveInventoryFromFile", New Object() {pDATA, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReceiveInventoryFromFile(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveInventoryFromFileExcel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReceiveInventoryFromFileExcel(ByVal pDATA As System.Data.DataTable, ByVal pLOGIN As String, ByVal pCLIENT As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("ReceiveInventoryFromFileExcel", New Object() {pDATA, pLOGIN, pCLIENT, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginReceiveInventoryFromFileExcel(ByVal pDATA As System.Data.DataTable, ByVal pLOGIN As String, ByVal pCLIENT As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReceiveInventoryFromFileExcel", New Object() {pDATA, pLOGIN, pCLIENT, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReceiveInventoryFromFileExcel(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDataToReviewAddExternal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddDataToReviewAddExternal(ByVal pDATA As System.Data.DataTable, ByVal pLOGIN As String, ByVal pCLIENT As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("AddDataToReviewAddExternal", New Object() {pDATA, pLOGIN, pCLIENT, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddDataToReviewAddExternal(ByVal pDATA As System.Data.DataTable, ByVal pLOGIN As String, ByVal pCLIENT As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddDataToReviewAddExternal", New Object() {pDATA, pLOGIN, pCLIENT, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddDataToReviewAddExternal(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReviewDispatchForExternal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReviewDispatchForExternal(ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetReviewDispatchForExternal", New Object() {pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetReviewDispatchForExternal(ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReviewDispatchForExternal", New Object() {pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetReviewDispatchForExternal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReviewDispatchForExternalUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReviewDispatchForExternalUpdate(ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetReviewDispatchForExternalUpdate", New Object() {pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetReviewDispatchForExternalUpdate(ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReviewDispatchForExternalUpdate", New Object() {pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetReviewDispatchForExternalUpdate(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseForExt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWarehouseForExt(ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetWarehouseForExt", New Object() {pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetWarehouseForExt(ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetWarehouseForExt", New Object() {pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetWarehouseForExt(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInsuranceAvilable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInsuranceAvilable(ByVal pPoliza As String, ByVal pUser As String, ByVal pRpoliza As Integer, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("GetInsuranceAvilable", New Object() {pPoliza, pUser, pRpoliza, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInsuranceAvilable(ByVal pPoliza As String, ByVal pUser As String, ByVal pRpoliza As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInsuranceAvilable", New Object() {pPoliza, pUser, pRpoliza, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInsuranceAvilable(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateInventory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function updateInventory(ByVal pcode As String, ByVal pqty As Integer, ByVal pcustomer As String, ByVal presultado As String, ByVal pResult As String, ByVal pEnvironmentName As String) As String
            Dim results() As Object = Me.Invoke("updateInventory", New Object() {pcode, pqty, pcustomer, presultado, pResult, pEnvironmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginupdateInventory(ByVal pcode As String, ByVal pqty As Integer, ByVal pcustomer As String, ByVal presultado As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("updateInventory", New Object() {pcode, pqty, pcustomer, presultado, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndupdateInventory(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuotaLatter", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateQuotaLatter(ByVal pCarta As String, ByVal pRegimen As String, ByVal pMedida As String, ByVal pFirma As String, ByVal pClave As String, ByVal positionPerson As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("UpdateQuotaLatter", New Object() {pCarta, pRegimen, pMedida, pFirma, pClave, positionPerson, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateQuotaLatter(ByVal pCarta As String, ByVal pRegimen As String, ByVal pMedida As String, ByVal pFirma As String, ByVal pClave As String, ByVal positionPerson As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateQuotaLatter", New Object() {pCarta, pRegimen, pMedida, pFirma, pClave, positionPerson, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateQuotaLatter(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotaLatter", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuotaLatter(ByVal pStatus As String, ByVal pStatus2 As String, ByVal pStatus3 As String, ByVal pFechaInicio As Date, ByVal pFechaFinal As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetQuotaLatter", New Object() {pStatus, pStatus2, pStatus3, pFechaInicio, pFechaFinal, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetQuotaLatter(ByVal pStatus As String, ByVal pStatus2 As String, ByVal pStatus3 As String, ByVal pFechaInicio As Date, ByVal pFechaFinal As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetQuotaLatter", New Object() {pStatus, pStatus2, pStatus3, pFechaInicio, pFechaFinal, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetQuotaLatter(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotaLatterGarita", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuotaLatterGarita(ByVal pDocId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetQuotaLatterGarita", New Object() {pDocId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetQuotaLatterGarita(ByVal pDocId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetQuotaLatterGarita", New Object() {pDocId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetQuotaLatterGarita(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocPolizaEnc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDocPolizaEnc(ByVal pDocId As Integer, ByVal pCodigoPoliza As String, ByVal pNumeroOrden As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDocPolizaEnc", New Object() {pDocId, pCodigoPoliza, pNumeroOrden, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDocPolizaEnc(ByVal pDocId As Integer, ByVal pCodigoPoliza As String, ByVal pNumeroOrden As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDocPolizaEnc", New Object() {pDocId, pCodigoPoliza, pNumeroOrden, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDocPolizaEnc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLineasAvailable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLineasAvailable(ByVal pDocId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLineasAvailable", New Object() {pDocId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLineasAvailable(ByVal pDocId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLineasAvailable", New Object() {pDocId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLineasAvailable(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAcuseRecibo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAcuseRecibo(ByVal pFechaInicio As Date, ByVal pFechaFinal As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAcuseRecibo", New Object() {pFechaInicio, pFechaFinal, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAcuseRecibo(ByVal pFechaInicio As Date, ByVal pFechaFinal As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAcuseRecibo", New Object() {pFechaInicio, pFechaFinal, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAcuseRecibo(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTareasRecepcionAsignadasUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTareasRecepcionAsignadasUsuario(ByVal Regimen As String, ByVal SerialNumber As String, ByVal AssignedTo As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerTareasRecepcionAsignadasUsuario", New Object() {Regimen, SerialNumber, AssignedTo, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerTareasRecepcionAsignadasUsuario(ByVal Regimen As String, ByVal SerialNumber As String, ByVal AssignedTo As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerTareasRecepcionAsignadasUsuario", New Object() {Regimen, SerialNumber, AssignedTo, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerTareasRecepcionAsignadasUsuario(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DistribuirTareasATodosLosOperadores", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DistribuirTareasATodosLosOperadores(ByVal login As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("DistribuirTareasATodosLosOperadores", New Object() {login, pEnvironmentName})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginDistribuirTareasATodosLosOperadores(ByVal login As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DistribuirTareasATodosLosOperadores", New Object() {login, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDistribuirTareasATodosLosOperadores(ByVal asyncResult As System.IAsyncResult) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DistribuirTareasATodosLosOperadoresSinTareas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DistribuirTareasATodosLosOperadoresSinTareas(ByVal login As String, ByRef result As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("DistribuirTareasATodosLosOperadoresSinTareas", New Object() {login, result, pEnvironmentName})
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginDistribuirTareasATodosLosOperadoresSinTareas(ByVal login As String, ByVal result As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DistribuirTareasATodosLosOperadoresSinTareas", New Object() {login, result, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDistribuirTareasATodosLosOperadoresSinTareas(ByVal asyncResult As System.IAsyncResult, ByRef result As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            result = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LicenceHasInventory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LicenceHasInventory(ByVal IdLicence As Integer, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("LicenceHasInventory", New Object() {IdLicence, pEnvironmentName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginLicenceHasInventory(ByVal IdLicence As Integer, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LicenceHasInventory", New Object() {IdLicence, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLicenceHasInventory(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizeErpReceptionDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthorizeErpReceptionDocument(ByVal ErpReceptionDocumentId As Integer, ByVal LastUpdateBy As String, ByVal pEnvironmentName As String, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.Invoke("AuthorizeErpReceptionDocument", New Object() {ErpReceptionDocumentId, LastUpdateBy, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAuthorizeErpReceptionDocument(ByVal ErpReceptionDocumentId As Integer, ByVal LastUpdateBy As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AuthorizeErpReceptionDocument", New Object() {ErpReceptionDocumentId, LastUpdateBy, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAuthorizeErpReceptionDocument(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceptionTag", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReceptionTag(ByVal taskId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetReceptionTag", New Object() {taskId, login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetReceptionTag(ByVal taskId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetReceptionTag", New Object() {taskId, login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetReceptionTag(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickingTag", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPickingTag(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPickingTag", New Object() {wavePickingId, login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPickingTag(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPickingTag", New Object() {wavePickingId, login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPickingTag(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLabel(ByVal labelId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLabel", New Object() {labelId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLabel(ByVal labelId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLabel", New Object() {labelId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLabel(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizeErpPickingDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthorizeErpPickingDocument(ByVal ErpPickingDocumentId As Integer, ByVal LastUpdateBy As String, ByVal pEnvironmentName As String, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.Invoke("AuthorizeErpPickingDocument", New Object() {ErpPickingDocumentId, LastUpdateBy, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAuthorizeErpPickingDocument(ByVal ErpPickingDocumentId As Integer, ByVal LastUpdateBy As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AuthorizeErpPickingDocument", New Object() {ErpPickingDocumentId, LastUpdateBy, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAuthorizeErpPickingDocument(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForPicking", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskDetailForPicking(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTaskDetailForPicking", New Object() {wavePickingId, login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskDetailForPicking(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskDetailForPicking", New Object() {wavePickingId, login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskDetailForPicking(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForReception", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskDetailForReception(ByVal serialNUmber As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTaskDetailForReception", New Object() {serialNUmber, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskDetailForReception(ByVal serialNUmber As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskDetailForReception", New Object() {serialNUmber, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskDetailForReception(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForRealloc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskDetailForRealloc(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTaskDetailForRealloc", New Object() {wavePickingId, login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskDetailForRealloc(ByVal wavePickingId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskDetailForRealloc", New Object() {wavePickingId, login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskDetailForRealloc(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForCount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskDetailForCount(ByVal taskId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTaskDetailForCount", New Object() {taskId, login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskDetailForCount(ByVal taskId As Integer, ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskDetailForCount", New Object() {taskId, login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskDetailForCount(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAssignedOperatorToCountDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAssignedOperatorToCountDetail(ByVal physicalCountDetailId As Integer, ByVal assignedTo As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateAssignedOperatorToCountDetail", New Object() {physicalCountDetailId, assignedTo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateAssignedOperatorToCountDetail(ByVal physicalCountDetailId As Integer, ByVal assignedTo As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateAssignedOperatorToCountDetail", New Object() {physicalCountDetailId, assignedTo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateAssignedOperatorToCountDetail(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorAssignedToDistributionCenterByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOperatorAssignedToDistributionCenterByUser(ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetOperatorAssignedToDistributionCenterByUser", New Object() {login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetOperatorAssignedToDistributionCenterByUser(ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetOperatorAssignedToDistributionCenterByUser", New Object() {login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetOperatorAssignedToDistributionCenterByUser(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorsGraphicsTask", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOperatorsGraphicsTask(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal login As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetOperatorsGraphicsTask", New Object() {plstUsers, plstTasksTypes, pSinceDate, pToDate, login, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetOperatorsGraphicsTask(ByVal plstUsers As String, ByVal plstTasksTypes As String, ByVal pSinceDate As Date, ByVal pToDate As Date, ByVal login As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetOperatorsGraphicsTask", New Object() {plstUsers, plstTasksTypes, pSinceDate, pToDate, login, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetOperatorsGraphicsTask(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskPending", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskPending(ByVal wavePickingId As Integer, ByVal login As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTaskPending", New Object() {wavePickingId, login, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskPending(ByVal wavePickingId As Integer, ByVal login As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskPending", New Object() {wavePickingId, login, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskPending(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLocation(ByVal location As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLocation", New Object() {location, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLocation(ByVal location As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLocation", New Object() {location, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLocation(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaterial(ByVal codeMaterial As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMaterial", New Object() {codeMaterial, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaterial(ByVal codeMaterial As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaterial", New Object() {codeMaterial, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCanReallocOperatorAssignedToDistributionCenterByUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCanReallocOperatorAssignedToDistributionCenterByUser(ByVal login As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCanReallocOperatorAssignedToDistributionCenterByUser", New Object() {login, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCanReallocOperatorAssignedToDistributionCenterByUser(ByVal login As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCanReallocOperatorAssignedToDistributionCenterByUser", New Object() {login, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCanReallocOperatorAssignedToDistributionCenterByUser(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateTaskStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateTaskStatus(ByVal login As String, ByVal serialNumber As Integer, ByVal taskId As Integer, ByVal wavePickingId As Integer, ByVal materialId As String, ByVal taskType As String, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateTaskStatus", New Object() {login, serialNumber, taskId, wavePickingId, materialId, taskType, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateTaskStatus(ByVal login As String, ByVal serialNumber As Integer, ByVal taskId As Integer, ByVal wavePickingId As Integer, ByVal materialId As String, ByVal taskType As String, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateTaskStatus", New Object() {login, serialNumber, taskId, wavePickingId, materialId, taskType, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateTaskStatus(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateStatusInMaterialsLicense", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateStatusInMaterialsLicense(ByVal license As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidateStatusInMaterialsLicense", New Object() {license, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateStatusInMaterialsLicense(ByVal license As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateStatusInMaterialsLicense", New Object() {license, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateStatusInMaterialsLicense(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierByDocument", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSupplierByDocument(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSupplierByDocument", New Object() {taskId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSupplierByDocument(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSupplierByDocument", New Object() {taskId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSupplierByDocument(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeRecepcionPorDevolucionPorTarea", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerDetalleDeRecepcionPorDevolucionPorTarea(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerDetalleDeRecepcionPorDevolucionPorTarea", New Object() {taskId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerDetalleDeRecepcionPorDevolucionPorTarea(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerDetalleDeRecepcionPorDevolucionPorTarea", New Object() {taskId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerDetalleDeRecepcionPorDevolucionPorTarea(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoDeRecepcion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTipoDeRecepcion(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As String
            Dim results() As Object = Me.Invoke("ObtenerTipoDeRecepcion", New Object() {taskId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerTipoDeRecepcion(ByVal taskId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerTipoDeRecepcion", New Object() {taskId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerTipoDeRecepcion(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerParametros", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerParametros(ByVal grupoParametro As String, ByVal idParametro As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerParametros", New Object() {grupoParametro, idParametro, pEnvironmentName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerParametros(ByVal grupoParametro As String, ByVal idParametro As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerParametros", New Object() {grupoParametro, idParametro, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerParametros(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarEtiqueta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarEtiqueta(ByVal labelId As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ValidarEtiqueta", New Object() {labelId, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginValidarEtiqueta(ByVal labelId As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidarEtiqueta", New Object() {labelId, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidarEtiqueta(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInformacionPickingNoInmediato", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerInformacionPickingNoInmediato(ByVal olaPicking As Integer, ByVal pEnvironmentName As String, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtenerInformacionPickingNoInmediato", New Object() {olaPicking, pEnvironmentName, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerInformacionPickingNoInmediato(ByVal olaPicking As Integer, ByVal pEnvironmentName As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerInformacionPickingNoInmediato", New Object() {olaPicking, pEnvironmentName, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerInformacionPickingNoInmediato(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerValorProyectoEnBaseALicencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerValorProyectoEnBaseALicencia(ByVal licenseId As Integer, ByVal environmentName As String) As String
            Dim results() As Object = Me.Invoke("ObtenerValorProyectoEnBaseALicencia", New Object() {licenseId, environmentName})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginObtenerValorProyectoEnBaseALicencia(ByVal licenseId As Integer, ByVal environmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtenerValorProyectoEnBaseALicencia", New Object() {licenseId, environmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtenerValorProyectoEnBaseALicencia(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskByLocation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTaskByLocation(ByVal loginId As String, ByVal regimen As String, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTaskByLocation", New Object() {loginId, regimen, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTaskByLocation(ByVal loginId As String, ByVal regimen As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTaskByLocation", New Object() {loginId, regimen, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTaskByLocation(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
    End Class
End Namespace
