'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8745
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
'
Namespace WMS_Polizas
    
    '''<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WMS_PolizasSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WMS_Polizas
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = AppSettings.ServerUrl + "/Trans/WMS_Polizas.asmx"
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ParsePoliza", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ParsePoliza(ByVal pPOLIZA_BARCODE As String, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ParsePoliza", New Object() {pPOLIZA_BARCODE, pResult})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginParsePoliza(ByVal pPOLIZA_BARCODE As String, ByVal pResult As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ParsePoliza", New Object() {pPOLIZA_BARCODE, pResult}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndParsePoliza(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarImagenAPoliza", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarImagenAPoliza(ByVal pCODIGO_BARRAS_ID As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal pIMAGE() As Byte, ByVal pLoginID As String, ByVal pAuditId As Integer, ByVal pAuditType As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("AgregarImagenAPoliza", New Object() {pCODIGO_BARRAS_ID, pIMAGE, pLoginID, pAuditId, pAuditType, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarImagenAPoliza(ByVal pCODIGO_BARRAS_ID As String, ByVal pIMAGE() As Byte, ByVal pLoginID As String, ByVal pAuditId As Integer, ByVal pAuditType As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarImagenAPoliza", New Object() {pCODIGO_BARRAS_ID, pIMAGE, pLoginID, pAuditId, pAuditType, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarImagenAPoliza(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearLicencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearLicencia(ByVal pCODIGO_POLIZA As String, ByVal pLoginID As String, ByRef pLICENCIA_ID As Integer, ByVal pCLIENT_OWNER As String, ByVal pREGIMEN As String, ByVal TaskId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("CrearLicencia", New Object() {pCODIGO_POLIZA, pLoginID, pLICENCIA_ID, pCLIENT_OWNER, pREGIMEN, TaskId, pResult, pEnvironmentName})
            pLICENCIA_ID = CType(results(1),Integer)
            pResult = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginCrearLicencia(ByVal pCODIGO_POLIZA As String, ByVal pLoginID As String, ByVal pLICENCIA_ID As Integer, ByVal pCLIENT_OWNER As String, ByVal pREGIMEN As String, ByVal TaskId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CrearLicencia", New Object() {pCODIGO_POLIZA, pLoginID, pLICENCIA_ID, pCLIENT_OWNER, pREGIMEN, TaskId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCrearLicencia(ByVal asyncResult As System.IAsyncResult, ByRef pLICENCIA_ID As Integer, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pLICENCIA_ID = CType(results(1),Integer)
            pResult = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregaSKU_Licencia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregaSKU_Licencia( _
                    ByVal pLICENSE_ID As Integer,  _
                    ByVal pBARCODE As String,  _
                    ByVal pQTY As Decimal,  _
                    ByVal pLAST_LOGIN As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pWEIGTH As Double,  _
                    ByVal pSERIAL As String,  _
                    ByVal pCOMMENTS As String,  _
                    ByVal pACUERDO_COMERCIAL As String,  _
                    ByRef pSKUS_COUNTED As Integer,  _
                    ByVal pSTATUS As String,  _
                    ByRef pResult As String,  _
                    ByVal pEnvironmentName As String,  _
                    ByVal pDateExpiration As Date,  _
                    ByVal pBatch As String,  _
                    ByVal pVin As String,  _
                    ByVal statusName As String,  _
                    ByVal action As String,  _
                    ByVal tone As String,  _
                    ByVal caliber As String) As Boolean
            Dim results() As Object = Me.Invoke("AgregaSKU_Licencia", New Object() {pLICENSE_ID, pBARCODE, pQTY, pLAST_LOGIN, pVOLUME_FACTOR, pWEIGTH, pSERIAL, pCOMMENTS, pACUERDO_COMERCIAL, pSKUS_COUNTED, pSTATUS, pResult, pEnvironmentName, pDateExpiration, pBatch, pVin, statusName, action, tone, caliber})
            pSKUS_COUNTED = CType(results(1),Integer)
            pResult = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregaSKU_Licencia( _
                    ByVal pLICENSE_ID As Integer,  _
                    ByVal pBARCODE As String,  _
                    ByVal pQTY As Decimal,  _
                    ByVal pLAST_LOGIN As String,  _
                    ByVal pVOLUME_FACTOR As Double,  _
                    ByVal pWEIGTH As Double,  _
                    ByVal pSERIAL As String,  _
                    ByVal pCOMMENTS As String,  _
                    ByVal pACUERDO_COMERCIAL As String,  _
                    ByVal pSKUS_COUNTED As Integer,  _
                    ByVal pSTATUS As String,  _
                    ByVal pResult As String,  _
                    ByVal pEnvironmentName As String,  _
                    ByVal pDateExpiration As Date,  _
                    ByVal pBatch As String,  _
                    ByVal pVin As String,  _
                    ByVal statusName As String,  _
                    ByVal action As String,  _
                    ByVal tone As String,  _
                    ByVal caliber As String,  _
                    ByVal callback As System.AsyncCallback,  _
                    ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregaSKU_Licencia", New Object() {pLICENSE_ID, pBARCODE, pQTY, pLAST_LOGIN, pVOLUME_FACTOR, pWEIGTH, pSERIAL, pCOMMENTS, pACUERDO_COMERCIAL, pSKUS_COUNTED, pSTATUS, pResult, pEnvironmentName, pDateExpiration, pBatch, pVin, statusName, action, tone, caliber}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregaSKU_Licencia(ByVal asyncResult As System.IAsyncResult, ByRef pSKUS_COUNTED As Integer, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pSKUS_COUNTED = CType(results(1),Integer)
            pResult = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePolizaImg", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePolizaImg(ByVal pPhotoId As Integer, ByVal pComment As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdatePolizaImg", New Object() {pPhotoId, pComment, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdatePolizaImg(ByVal pPhotoId As Integer, ByVal pComment As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdatePolizaImg", New Object() {pPhotoId, pComment, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdatePolizaImg(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarSeriePorMaterial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AgregarSeriePorMaterial(ByVal licenciaId As Integer, ByVal materialId As String, ByVal serie As String, ByVal batch As String, ByVal fechaDeExpiracion As Date, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("AgregarSeriePorMaterial", New Object() {licenciaId, materialId, serie, batch, fechaDeExpiracion, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginAgregarSeriePorMaterial(ByVal licenciaId As Integer, ByVal materialId As String, ByVal serie As String, ByVal batch As String, ByVal fechaDeExpiracion As Date, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AgregarSeriePorMaterial", New Object() {licenciaId, materialId, serie, batch, fechaDeExpiracion, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAgregarSeriePorMaterial(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActulizarLoteYFechaDeVencimientoPorSerie", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActulizarLoteYFechaDeVencimientoPorSerie(ByVal correlativo As Integer, ByVal batch As Integer, ByVal fechaDeExpiracion As String, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("ActulizarLoteYFechaDeVencimientoPorSerie", New Object() {correlativo, batch, fechaDeExpiracion, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginActulizarLoteYFechaDeVencimientoPorSerie(ByVal correlativo As Integer, ByVal batch As Integer, ByVal fechaDeExpiracion As String, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ActulizarLoteYFechaDeVencimientoPorSerie", New Object() {correlativo, batch, fechaDeExpiracion, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndActulizarLoteYFechaDeVencimientoPorSerie(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarSerie", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarSerie(ByVal correlativo As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As Boolean
            Dim results() As Object = Me.Invoke("EliminarSerie", New Object() {correlativo, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginEliminarSerie(ByVal correlativo As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("EliminarSerie", New Object() {correlativo, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndEliminarSerie(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtienerInformacionPorMaterialSerie", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtienerInformacionPorMaterialSerie(ByVal materialId As String, ByVal serie As String, ByVal licenseId As Integer, ByRef pResult As String, ByVal pEnvironmentName As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ObtienerInformacionPorMaterialSerie", New Object() {materialId, serie, licenseId, pResult, pEnvironmentName})
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Function BeginObtienerInformacionPorMaterialSerie(ByVal materialId As String, ByVal serie As String, ByVal licenseId As Integer, ByVal pResult As String, ByVal pEnvironmentName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ObtienerInformacionPorMaterialSerie", New Object() {materialId, serie, licenseId, pResult, pEnvironmentName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndObtienerInformacionPorMaterialSerie(ByVal asyncResult As System.IAsyncResult, ByRef pResult As String) As System.Data.DataTable
            Dim results() As Object = Me.EndInvoke(asyncResult)
            pResult = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
    End Class
End Namespace
