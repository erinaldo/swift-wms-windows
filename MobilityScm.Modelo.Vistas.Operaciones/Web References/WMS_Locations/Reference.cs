//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MobilityScm.Modelo.Vistas.Operaciones.WMS_Locations {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_LocationsSoap", Namespace="http://tempuri.org/")]
    public partial class WMS_Locations : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_Locations() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/Catalogues/WMS_Locations.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateShelfSpots(
                    string pWAREHOUSE_PARENT, 
                    string pLOCATION_SPOT, 
                    string pSPOT_TYPE, 
                    int pSPOT_ORDERBY, 
                    string pSPOT_AISLE, 
                    string pSPOT_COLUMN, 
                    string pSPOT_LEVEL, 
                    string pALLOW_PICKING, 
                    string pALLOW_STORAGE, 
                    string pALLOW_REALLOC, 
                    string pAVAILABLE, 
                    string pZONA, 
                    string pPARTICION, 
                    string pETIQUETA, 
                    string pLINE_ID, 
                    double pMAX_MT2, 
                    double pMAX_WEIGHT, 
                    ref string resultado, 
                    string ambiente, 
                    string seccion) {
            object[] results = this.Invoke("CreateShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pSPOT_TYPE,
                        pSPOT_ORDERBY,
                        pSPOT_AISLE,
                        pSPOT_COLUMN,
                        pSPOT_LEVEL,
                        pALLOW_PICKING,
                        pALLOW_STORAGE,
                        pALLOW_REALLOC,
                        pAVAILABLE,
                        pZONA,
                        pPARTICION,
                        pETIQUETA,
                        pLINE_ID,
                        pMAX_MT2,
                        pMAX_WEIGHT,
                        resultado,
                        ambiente,
                        seccion});
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateShelfSpots(
                    string pWAREHOUSE_PARENT, 
                    string pLOCATION_SPOT, 
                    string pSPOT_TYPE, 
                    int pSPOT_ORDERBY, 
                    string pSPOT_AISLE, 
                    string pSPOT_COLUMN, 
                    string pSPOT_LEVEL, 
                    string pALLOW_PICKING, 
                    string pALLOW_STORAGE, 
                    string pALLOW_REALLOC, 
                    string pAVAILABLE, 
                    string pZONA, 
                    string pPARTICION, 
                    string pETIQUETA, 
                    string pLINE_ID, 
                    double pMAX_MT2, 
                    double pMAX_WEIGHT, 
                    string resultado, 
                    string ambiente, 
                    string seccion, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pSPOT_TYPE,
                        pSPOT_ORDERBY,
                        pSPOT_AISLE,
                        pSPOT_COLUMN,
                        pSPOT_LEVEL,
                        pALLOW_PICKING,
                        pALLOW_STORAGE,
                        pALLOW_REALLOC,
                        pAVAILABLE,
                        pZONA,
                        pPARTICION,
                        pETIQUETA,
                        pLINE_ID,
                        pMAX_MT2,
                        pMAX_WEIGHT,
                        resultado,
                        ambiente,
                        seccion}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateShelfSpots(System.IAsyncResult asyncResult, out string resultado) {
            object[] results = this.EndInvoke(asyncResult);
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateShelfSpots(
                    string pWAREHOUSE_PARENT, 
                    string pLOCATION_SPOT, 
                    string pSPOT_TYPE, 
                    int pSPOT_ORDERBY, 
                    string pSPOT_AISLE, 
                    string pSPOT_COLUMN, 
                    string pSPOT_LEVEL, 
                    string pALLOW_PICKING, 
                    string pALLOW_STORAGE, 
                    string pALLOW_REALLOC, 
                    string pAVAILABLE, 
                    string pZONA, 
                    string pPARTICION, 
                    string pETIQUETA, 
                    string pLINE_ID, 
                    double pMAX_MT2, 
                    double pMAX_WEIGHT, 
                    ref string resultado, 
                    string ambiente, 
                    string seccion) {
            object[] results = this.Invoke("UpdateShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pSPOT_TYPE,
                        pSPOT_ORDERBY,
                        pSPOT_AISLE,
                        pSPOT_COLUMN,
                        pSPOT_LEVEL,
                        pALLOW_PICKING,
                        pALLOW_STORAGE,
                        pALLOW_REALLOC,
                        pAVAILABLE,
                        pZONA,
                        pPARTICION,
                        pETIQUETA,
                        pLINE_ID,
                        pMAX_MT2,
                        pMAX_WEIGHT,
                        resultado,
                        ambiente,
                        seccion});
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateShelfSpots(
                    string pWAREHOUSE_PARENT, 
                    string pLOCATION_SPOT, 
                    string pSPOT_TYPE, 
                    int pSPOT_ORDERBY, 
                    string pSPOT_AISLE, 
                    string pSPOT_COLUMN, 
                    string pSPOT_LEVEL, 
                    string pALLOW_PICKING, 
                    string pALLOW_STORAGE, 
                    string pALLOW_REALLOC, 
                    string pAVAILABLE, 
                    string pZONA, 
                    string pPARTICION, 
                    string pETIQUETA, 
                    string pLINE_ID, 
                    double pMAX_MT2, 
                    double pMAX_WEIGHT, 
                    string resultado, 
                    string ambiente, 
                    string seccion, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("UpdateShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pSPOT_TYPE,
                        pSPOT_ORDERBY,
                        pSPOT_AISLE,
                        pSPOT_COLUMN,
                        pSPOT_LEVEL,
                        pALLOW_PICKING,
                        pALLOW_STORAGE,
                        pALLOW_REALLOC,
                        pAVAILABLE,
                        pZONA,
                        pPARTICION,
                        pETIQUETA,
                        pLINE_ID,
                        pMAX_MT2,
                        pMAX_WEIGHT,
                        resultado,
                        ambiente,
                        seccion}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateShelfSpots(System.IAsyncResult asyncResult, out string resultado) {
            object[] results = this.EndInvoke(asyncResult);
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pLINE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pLINE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pLINE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pLINE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteShelfSpots(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchPartialShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchPartialShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchPartialShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchPartialShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchPartialShelfSpots(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnabledShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnabledShelfSpots(string pWAREHOUSE_Id, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("EnabledShelfSpots", new object[] {
                        pWAREHOUSE_Id,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnabledShelfSpots(string pWAREHOUSE_Id, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnabledShelfSpots", new object[] {
                        pWAREHOUSE_Id,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEnabledShelfSpots(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickingLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickingLines(string pWAREHOUSE_PARENT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPickingLines", new object[] {
                        pWAREHOUSE_PARENT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickingLines(string pWAREHOUSE_PARENT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickingLines", new object[] {
                        pWAREHOUSE_PARENT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickingLines(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByKeyShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByKeyShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByKeyShelfSpots(string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByKeyShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByKeyShelfSpots(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByHierarchyShelfSpots", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByHierarchyShelfSpots(string pWAREHOUSE_PARENT, string pZONE, string pLOCATION_SPOT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByHierarchyShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pZONE,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByHierarchyShelfSpots(string pWAREHOUSE_PARENT, string pZONE, string pLOCATION_SPOT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByHierarchyShelfSpots", new object[] {
                        pWAREHOUSE_PARENT,
                        pZONE,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByHierarchyShelfSpots(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectWarehousesGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectWarehousesGroup(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SelectWarehousesGroup", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectWarehousesGroup(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectWarehousesGroup", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSelectWarehousesGroup(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectWarehousesEnabled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectWarehousesEnabled(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SelectWarehousesEnabled", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectWarehousesEnabled(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectWarehousesEnabled", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSelectWarehousesEnabled(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectZonesGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectZonesGroup(string pWarehouseParent, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SelectZonesGroup", new object[] {
                        pWarehouseParent,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectZonesGroup(string pWarehouseParent, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectZonesGroup", new object[] {
                        pWarehouseParent,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSelectZonesGroup(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedProd_ByLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRelatedProd_ByLoc(string pWarehouseParent, string pLocation, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRelatedProd_ByLoc", new object[] {
                        pWarehouseParent,
                        pLocation,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedProd_ByLoc(string pWarehouseParent, string pLocation, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRelatedProd_ByLoc", new object[] {
                        pWarehouseParent,
                        pLocation,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRelatedProd_ByLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedProd_ByWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRelatedProd_ByWarehouse(string pWarehouseParent, string pMaterialID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRelatedProd_ByWarehouse", new object[] {
                        pWarehouseParent,
                        pMaterialID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedProd_ByWarehouse(string pWarehouseParent, string pMaterialID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRelatedProd_ByWarehouse", new object[] {
                        pWarehouseParent,
                        pMaterialID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRelatedProd_ByWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectERPWarehouses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectERPWarehouses(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SelectERPWarehouses", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectERPWarehouses(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectERPWarehouses", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSelectERPWarehouses(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectClimaWarehouses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectClimaWarehouses(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SelectClimaWarehouses", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectClimaWarehouses(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectClimaWarehouses", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSelectClimaWarehouses(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateLoginXLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateLoginXLoc(string pLOGIN_ID, string pLOGIN_NAME, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CreateLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pLOGIN_NAME,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLoginXLoc(string pLOGIN_ID, string pLOGIN_NAME, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pLOGIN_NAME,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateLoginXLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginXLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLoginXLoc(string pLOGIN_ID, string pLAST_LOGIN_ID, string pLOGIN_NAME, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pLAST_LOGIN_ID,
                        pLOGIN_NAME,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLoginXLoc(string pLOGIN_ID, string pLAST_LOGIN_ID, string pLOGIN_NAME, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pLAST_LOGIN_ID,
                        pLOGIN_NAME,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateLoginXLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLoginXLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLoginXLoc(string pLOGIN_ID, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLoginXLoc(string pLOGIN_ID, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteLoginXLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyLoginXLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByKeyLoginXLoc(string pLOGIN_ID, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByKeyLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByKeyLoginXLoc(string pLOGIN_ID, string pWAREHOUSE_PARENT, string pLINE_ID, string pLOCATION_SPOT, string pTASK_TYPE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByKeyLoginXLoc", new object[] {
                        pLOGIN_ID,
                        pWAREHOUSE_PARENT,
                        pLINE_ID,
                        pLOCATION_SPOT,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByKeyLoginXLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialLoginXLoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchPartialLoginXLoc(string pWAREHOUSE_PARENT, string pLOCATION, string pTASK_TYPE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchPartialLoginXLoc", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchPartialLoginXLoc(string pWAREHOUSE_PARENT, string pLOCATION, string pTASK_TYPE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchPartialLoginXLoc", new object[] {
                        pWAREHOUSE_PARENT,
                        pLOCATION,
                        pTASK_TYPE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchPartialLoginXLoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailable_Operators", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAvailable_Operators(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAvailable_Operators", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAvailable_Operators(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAvailable_Operators", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAvailable_Operators(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetModules_X_Operator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetModules_X_Operator(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetModules_X_Operator", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetModules_X_Operator(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetModules_X_Operator", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetModules_X_Operator(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWmsZones", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWmsZones(ref string pResult, string pEnvironmentName, string warehouse) {
            object[] results = this.Invoke("GetWmsZones", new object[] {
                        pResult,
                        pEnvironmentName,
                        warehouse});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWmsZones(string pResult, string pEnvironmentName, string warehouse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWmsZones", new object[] {
                        pResult,
                        pEnvironmentName,
                        warehouse}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWmsZones(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailable_Locations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAvailable_Locations(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAvailable_Locations", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAvailable_Locations(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAvailable_Locations", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAvailable_Locations(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationsByWH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocationsByWH(ref string pWh, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLocationsByWH", new object[] {
                        pWh,
                        pResult,
                        pEnvironmentName});
            pWh = ((string)(results[1]));
            pResult = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationsByWH(string pWh, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationsByWH", new object[] {
                        pWh,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLocationsByWH(System.IAsyncResult asyncResult, out string pWh, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pWh = ((string)(results[1]));
            pResult = ((string)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolizaInsurance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPolizaInsurance(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPolizaInsurance", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPolizaInsurance(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPolizaInsurance", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPolizaInsurance(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTermsOfTrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTermsOfTrade(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTermsOfTrade", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTermsOfTrade(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTermsOfTrade", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTermsOfTrade(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIfExistsMaterialByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIfExistsMaterialByClient(string clientOwner, string materialId, ref string result, string environmentName) {
            object[] results = this.Invoke("GetIfExistsMaterialByClient", new object[] {
                        clientOwner,
                        materialId,
                        result,
                        environmentName});
            result = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIfExistsMaterialByClient(string clientOwner, string materialId, string result, string environmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIfExistsMaterialByClient", new object[] {
                        clientOwner,
                        materialId,
                        result,
                        environmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetIfExistsMaterialByClient(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarUbicacionExisteEnBodega", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidarUbicacionExisteEnBodega(string ambiente, string codigoBodega, string codigoUbicacion) {
            object[] results = this.Invoke("ValidarUbicacionExisteEnBodega", new object[] {
                        ambiente,
                        codigoBodega,
                        codigoUbicacion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarUbicacionExisteEnBodega(string ambiente, string codigoBodega, string codigoUbicacion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarUbicacionExisteEnBodega", new object[] {
                        ambiente,
                        codigoBodega,
                        codigoUbicacion}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidarUbicacionExisteEnBodega(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWarehouse(string pWAREHOUSE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWarehouse(string pWAREHOUSE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWarehouse(string pWAREHOUSE_ID, string pNAME, string pCOMMENTS, string pERP_WAREHOUSE, string pShuntName, string pWareHouseWeather, int pWareHouseStatus, int pIs3plWareHouse, string pWareHouseAddres, string pGpsUrl, string pDistributionCenterId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pNAME,
                        pCOMMENTS,
                        pERP_WAREHOUSE,
                        pShuntName,
                        pWareHouseWeather,
                        pWareHouseStatus,
                        pIs3plWareHouse,
                        pWareHouseAddres,
                        pGpsUrl,
                        pDistributionCenterId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWarehouse(string pWAREHOUSE_ID, string pNAME, string pCOMMENTS, string pERP_WAREHOUSE, string pShuntName, string pWareHouseWeather, int pWareHouseStatus, int pIs3plWareHouse, string pWareHouseAddres, string pGpsUrl, string pDistributionCenterId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pNAME,
                        pCOMMENTS,
                        pERP_WAREHOUSE,
                        pShuntName,
                        pWareHouseWeather,
                        pWareHouseStatus,
                        pIs3plWareHouse,
                        pWareHouseAddres,
                        pGpsUrl,
                        pDistributionCenterId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateWarehouse(string pWAREHOUSE_ID, string pNAME, string pCOMMENTS, string pERP_WAREHOUSE, string pShuntName, string pWareHouseWeather, int pWareHouseStatus, int pIs3plWareHouse, string pWareHouseAddres, string pGpsUrl, string pDistributionCenterId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CreateWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pNAME,
                        pCOMMENTS,
                        pERP_WAREHOUSE,
                        pShuntName,
                        pWareHouseWeather,
                        pWareHouseStatus,
                        pIs3plWareHouse,
                        pWareHouseAddres,
                        pGpsUrl,
                        pDistributionCenterId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateWarehouse(string pWAREHOUSE_ID, string pNAME, string pCOMMENTS, string pERP_WAREHOUSE, string pShuntName, string pWareHouseWeather, int pWareHouseStatus, int pIs3plWareHouse, string pWareHouseAddres, string pGpsUrl, string pDistributionCenterId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pNAME,
                        pCOMMENTS,
                        pERP_WAREHOUSE,
                        pShuntName,
                        pWareHouseWeather,
                        pWareHouseStatus,
                        pIs3plWareHouse,
                        pWareHouseAddres,
                        pGpsUrl,
                        pDistributionCenterId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByKeyWarehouse(string pWAREHOUSE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByKeyWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByKeyWarehouse(string pWAREHOUSE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByKeyWarehouse", new object[] {
                        pWAREHOUSE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByKeyWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWareHouseEnabled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWareHouseEnabled(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetWareHouseEnabled", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWareHouseEnabled(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWareHouseEnabled", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWareHouseEnabled(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributionCenters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDistributionCenters(string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetDistributionCenters", new object[] {
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDistributionCenters(string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDistributionCenters", new object[] {
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDistributionCenters(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssociatedWarehouseWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssociatedWarehouseWithUser(string LOGIN_ID, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetAssociatedWarehouseWithUser", new object[] {
                        LOGIN_ID,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssociatedWarehouseWithUser(string LOGIN_ID, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssociatedWarehouseWithUser", new object[] {
                        LOGIN_ID,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAssociatedWarehouseWithUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseByDistributionCenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWarehouseByDistributionCenter(string LOGIN_ID, string DISTRIBUTION_CENTER, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetWarehouseByDistributionCenter", new object[] {
                        LOGIN_ID,
                        DISTRIBUTION_CENTER,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehouseByDistributionCenter(string LOGIN_ID, string DISTRIBUTION_CENTER, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehouseByDistributionCenter", new object[] {
                        LOGIN_ID,
                        DISTRIBUTION_CENTER,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWarehouseByDistributionCenter(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisassociateWarehouseOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisassociateWarehouseOfUser(int WAREHOUSE_BY_USER_ID, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("DisassociateWarehouseOfUser", new object[] {
                        WAREHOUSE_BY_USER_ID,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDisassociateWarehouseOfUser(int WAREHOUSE_BY_USER_ID, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DisassociateWarehouseOfUser", new object[] {
                        WAREHOUSE_BY_USER_ID,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDisassociateWarehouseOfUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssociateWarehouseOfUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssociateWarehouseOfUser(string LOGIN_ID, string WAREHOUSE, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("AssociateWarehouseOfUser", new object[] {
                        LOGIN_ID,
                        WAREHOUSE,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssociateWarehouseOfUser(string LOGIN_ID, string WAREHOUSE, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssociateWarehouseOfUser", new object[] {
                        LOGIN_ID,
                        WAREHOUSE,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAssociateWarehouseOfUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AssociateDistributionCenterWithUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssociateDistributionCenterWithUser(string LOGIN_ID, string DISTRIBUTION_CENTER, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("AssociateDistributionCenterWithUser", new object[] {
                        LOGIN_ID,
                        DISTRIBUTION_CENTER,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssociateDistributionCenterWithUser(string LOGIN_ID, string DISTRIBUTION_CENTER, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssociateDistributionCenterWithUser", new object[] {
                        LOGIN_ID,
                        DISTRIBUTION_CENTER,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAssociateDistributionCenterWithUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAvailableWarehouseByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAvailableWarehouseByUser(string LOGIN_ID, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetAvailableWarehouseByUser", new object[] {
                        LOGIN_ID,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAvailableWarehouseByUser(string LOGIN_ID, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAvailableWarehouseByUser", new object[] {
                        LOGIN_ID,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetAvailableWarehouseByUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
