//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8825
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8825.
// 
namespace MobilityScm.Modelo.Vistas.Operaciones.WMS_InfoTrans {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_InfoTransSoap", Namespace="http://tempuri.org/")]
    public partial class WMS_InfoTrans : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_InfoTrans() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/Info/WMS_InfoTrans.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOccupancyLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOccupancyLevel(string pDate, string pDateTo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetOccupancyLevel", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOccupancyLevel(string pDate, string pDateTo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOccupancyLevel", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOccupancyLevel(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIfPolizaHasReview", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckIfPolizaHasReview(string pPoliza, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CheckIfPolizaHasReview", new object[] {
                        pPoliza,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckIfPolizaHasReview(string pPoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckIfPolizaHasReview", new object[] {
                        pPoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckIfPolizaHasReview(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickingVsAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPickingVsAudit(System.DateTime pSinceDate, System.DateTime pToDate, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPickingVsAudit", new object[] {
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickingVsAudit(System.DateTime pSinceDate, System.DateTime pToDate, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickingVsAudit", new object[] {
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPickingVsAudit(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWavePickingDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWavePickingDetail(int pWAVE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetWavePickingDetail", new object[] {
                        pWAVE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWavePickingDetail(int pWAVE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWavePickingDetail", new object[] {
                        pWAVE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetWavePickingDetail(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuditLog(string pDate, string pDateTo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAuditLog", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAuditLog(string pDate, string pDateTo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAuditLog", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAuditLog(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLogDispatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuditLogDispatch(string pDate, string pDateTo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAuditLogDispatch", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAuditLogDispatch(string pDate, string pDateTo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAuditLogDispatch", new object[] {
                        pDate,
                        pDateTo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAuditLogDispatch(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImgAudi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImgAudi(string pCodePoliza, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetImgAudi", new object[] {
                        pCodePoliza,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImgAudi(string pCodePoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImgAudi", new object[] {
                        pCodePoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetImgAudi(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuditLabel(string pItemName, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAuditLabel", new object[] {
                        pItemName,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAuditLabel(string pItemName, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAuditLabel", new object[] {
                        pItemName,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAuditLabel(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditSummary", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuditSummary(string pCODIGO_POLIZA, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAuditSummary", new object[] {
                        pCODIGO_POLIZA,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAuditSummary(string pCODIGO_POLIZA, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAuditSummary", new object[] {
                        pCODIGO_POLIZA,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAuditSummary(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAuditView(int pAuditID, string pOPTION, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAuditView", new object[] {
                        pAuditID,
                        pOPTION,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAuditView(int pAuditID, string pOPTION, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAuditView", new object[] {
                        pAuditID,
                        pOPTION,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAuditView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyFirstTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyFirstTask(string pLoginID, int pWaveID, string pCODIGO_POLIZA_SOURCE, string pSKU, string LocationSpotTarget, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMyFirstTask", new object[] {
                        pLoginID,
                        pWaveID,
                        pCODIGO_POLIZA_SOURCE,
                        pSKU,
                        LocationSpotTarget,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMyFirstTask(string pLoginID, int pWaveID, string pCODIGO_POLIZA_SOURCE, string pSKU, string LocationSpotTarget, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyFirstTask", new object[] {
                        pLoginID,
                        pWaveID,
                        pCODIGO_POLIZA_SOURCE,
                        pSKU,
                        LocationSpotTarget,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMyFirstTask(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsContainedOnWave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet IsContainedOnWave(string pLoginID, string pLocationID, int pWaveID, string pSKU, int pLicenseID, string pCODIGO_POLIZA_SOURCE, string pSERVICE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("IsContainedOnWave", new object[] {
                        pLoginID,
                        pLocationID,
                        pWaveID,
                        pSKU,
                        pLicenseID,
                        pCODIGO_POLIZA_SOURCE,
                        pSERVICE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsContainedOnWave(string pLoginID, string pLocationID, int pWaveID, string pSKU, int pLicenseID, string pCODIGO_POLIZA_SOURCE, string pSERVICE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsContainedOnWave", new object[] {
                        pLoginID,
                        pLocationID,
                        pWaveID,
                        pSKU,
                        pLicenseID,
                        pCODIGO_POLIZA_SOURCE,
                        pSERVICE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndIsContainedOnWave(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyTasks(string pLoginID, string pRegimen, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMyTasks", new object[] {
                        pLoginID,
                        pRegimen,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMyTasks(string pLoginID, string pRegimen, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyTasks", new object[] {
                        pLoginID,
                        pRegimen,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMyTasks(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClient_CommercialAggrements", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClient_CommercialAggrements(string pCLIENT_CODE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetClient_CommercialAggrements", new object[] {
                        pCLIENT_CODE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClient_CommercialAggrements(string pCLIENT_CODE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClient_CommercialAggrements", new object[] {
                        pCLIENT_CODE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetClient_CommercialAggrements(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerDateTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServerDateTime() {
            object[] results = this.Invoke("GetServerDateTime", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServerDateTime(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServerDateTime", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetServerDateTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyLastLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyLastLicense(string pCODIGO_POLIZA, string pLOGIN_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMyLastLicense", new object[] {
                        pCODIGO_POLIZA,
                        pLOGIN_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMyLastLicense(string pCODIGO_POLIZA, string pLOGIN_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyLastLicense", new object[] {
                        pCODIGO_POLIZA,
                        pLOGIN_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMyLastLicense(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_LICENSE_DETAIL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_LICENSE_DETAIL(int pLICENSE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_LICENSE_DETAIL", new object[] {
                        pLICENSE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_LICENSE_DETAIL(int pLICENSE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_LICENSE_DETAIL", new object[] {
                        pLICENSE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_LICENSE_DETAIL(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OP_WMS_POLIZA_HEADER", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OP_WMS_POLIZA_HEADER(string pCodigoPoliza, string pNumeroOrden, string pRegimen, string pTipo, string pOperador, bool validarOperador, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("Get_OP_WMS_POLIZA_HEADER", new object[] {
                        pCodigoPoliza,
                        pNumeroOrden,
                        pRegimen,
                        pTipo,
                        pOperador,
                        validarOperador,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_OP_WMS_POLIZA_HEADER(string pCodigoPoliza, string pNumeroOrden, string pRegimen, string pTipo, string pOperador, bool validarOperador, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_OP_WMS_POLIZA_HEADER", new object[] {
                        pCodigoPoliza,
                        pNumeroOrden,
                        pRegimen,
                        pTipo,
                        pOperador,
                        validarOperador,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGet_OP_WMS_POLIZA_HEADER(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_OP_WMS_IMAGENES_POLIZA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OP_WMS_IMAGENES_POLIZA(string pCODIGO_BARRAS_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("Get_OP_WMS_IMAGENES_POLIZA", new object[] {
                        pCODIGO_BARRAS_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGet_OP_WMS_IMAGENES_POLIZA(string pCODIGO_BARRAS_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Get_OP_WMS_IMAGENES_POLIZA", new object[] {
                        pCODIGO_BARRAS_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGet_OP_WMS_IMAGENES_POLIZA(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransBasicView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransBasicView(string UserLogged, string plstUsers, string plstTransTypes, System.DateTime pSinceDate, System.DateTime pToDate, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTransBasicView", new object[] {
                        UserLogged,
                        plstUsers,
                        plstTransTypes,
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransBasicView(string UserLogged, string plstUsers, string plstTransTypes, System.DateTime pSinceDate, System.DateTime pToDate, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransBasicView", new object[] {
                        UserLogged,
                        plstUsers,
                        plstTransTypes,
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransBasicView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransBasicView_ByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransBasicView_ByClient(string pClientID, System.DateTime pSinceDate, System.DateTime pToDate, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTransBasicView_ByClient", new object[] {
                        pClientID,
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransBasicView_ByClient(string pClientID, System.DateTime pSinceDate, System.DateTime pToDate, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransBasicView_ByClient", new object[] {
                        pClientID,
                        pSinceDate,
                        pToDate,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransBasicView_ByClient(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksBasicView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTasksBasicView(string plstUsers, string plstTasksTypes, System.DateTime pSinceDate, System.DateTime pToDate, string login, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTasksBasicView", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pSinceDate,
                        pToDate,
                        login,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTasksBasicView(string plstUsers, string plstTasksTypes, System.DateTime pSinceDate, System.DateTime pToDate, string login, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTasksBasicView", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pSinceDate,
                        pToDate,
                        login,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTasksBasicView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepPolizaEgreso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRepPolizaEgreso(string pCodigoPoliza, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRepPolizaEgreso", new object[] {
                        pCodigoPoliza,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRepPolizaEgreso(string pCodigoPoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRepPolizaEgreso", new object[] {
                        pCodigoPoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRepPolizaEgreso(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRepPolizaFiscal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRepPolizaFiscal(string pCodigoPoliza, string pRegimen, string pTipo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRepPolizaFiscal", new object[] {
                        pCodigoPoliza,
                        pRegimen,
                        pTipo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRepPolizaFiscal(string pCodigoPoliza, string pRegimen, string pTipo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRepPolizaFiscal", new object[] {
                        pCodigoPoliza,
                        pRegimen,
                        pTipo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRepPolizaFiscal(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTasksBasicView_Calendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTasksBasicView_Calendar(string plstUsers, string plstTasksTypes, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTasksBasicView_Calendar", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTasksBasicView_Calendar(string plstUsers, string plstTasksTypes, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTasksBasicView_Calendar", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTasksBasicView_Calendar(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBasicView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandBasicView(string plstUsers, string plstTasksTypes, string pDateFilterType, System.DateTime pSinceDate, System.DateTime pToDate, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandBasicView", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDateFilterType,
                        pSinceDate,
                        pToDate,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandBasicView(string plstUsers, string plstTasksTypes, string pDateFilterType, System.DateTime pSinceDate, System.DateTime pToDate, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandBasicView", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDateFilterType,
                        pSinceDate,
                        pToDate,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandBasicView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBasicView_Calendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandBasicView_Calendar(string plstUsers, string plstTasksTypes, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandBasicView_Calendar", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandBasicView_Calendar(string plstUsers, string plstTasksTypes, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandBasicView_Calendar", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandBasicView_Calendar(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandAssignedView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandAssignedView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandAssignedView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandAssignedView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandAssignedView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandAssignedView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandAssignedView_Calendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandAssignedView_Calendar(string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandAssignedView_Calendar", new object[] {
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandAssignedView_Calendar(string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandAssignedView_Calendar", new object[] {
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandAssignedView_Calendar(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandVoidedView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandVoidedView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandVoidedView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandVoidedView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandVoidedView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandVoidedView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandPendingPickingView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandPendingPickingView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandPendingPickingView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandPendingPickingView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandPendingPickingView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandPendingPickingView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingTasks(string pTaskType, string pLoginID, int pBIN, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pBIN,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingTasks(string pTaskType, string pLoginID, int pBIN, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pBIN,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingTasks(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingTasksByDoc(string pERP_DOCUMENT, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingTasksByDoc", new object[] {
                        pERP_DOCUMENT,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingTasksByDoc(string pERP_DOCUMENT, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingTasksByDoc", new object[] {
                        pERP_DOCUMENT,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingTasksByDoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDocAndSKU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingTasksByDocAndSKU(string pERP_DOCUMENT, string pSKU, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingTasksByDocAndSKU", new object[] {
                        pERP_DOCUMENT,
                        pSKU,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingTasksByDocAndSKU(string pERP_DOCUMENT, string pSKU, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingTasksByDocAndSKU", new object[] {
                        pERP_DOCUMENT,
                        pSKU,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingTasksByDocAndSKU(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextERP_DOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNextERP_DOC(string pLinea, string pSector, string pRuta, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetNextERP_DOC", new object[] {
                        pLinea,
                        pSector,
                        pRuta,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextERP_DOC(string pLinea, string pSector, string pRuta, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextERP_DOC", new object[] {
                        pLinea,
                        pSector,
                        pRuta,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetNextERP_DOC(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetERP_DOC_By_BIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetERP_DOC_By_BIN(int pBIN, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetERP_DOC_By_BIN", new object[] {
                        pBIN,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetERP_DOC_By_BIN(int pBIN, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetERP_DOC_By_BIN", new object[] {
                        pBIN,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetERP_DOC_By_BIN(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingReplenishmentTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingReplenishmentTasks(string pTaskType, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingReplenishmentTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingReplenishmentTasks(string pTaskType, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingReplenishmentTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingReplenishmentTasks(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingRelocationTasks", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingRelocationTasks(string pTaskType, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingRelocationTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingRelocationTasks(string pTaskType, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingRelocationTasks", new object[] {
                        pTaskType,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingRelocationTasks(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastTrans_ByLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLastTrans_ByLocation(string pWarehouseParent, string pLocation, int pTopRows, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLastTrans_ByLocation", new object[] {
                        pWarehouseParent,
                        pLocation,
                        pTopRows,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLastTrans_ByLocation(string pWarehouseParent, string pLocation, int pTopRows, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLastTrans_ByLocation", new object[] {
                        pWarehouseParent,
                        pLocation,
                        pTopRows,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLastTrans_ByLocation(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentDocOnDispatchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrentDocOnDispatchInfo(string pLine, string pLogin, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetCurrentDocOnDispatchInfo", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentDocOnDispatchInfo(string pLine, string pLogin, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentDocOnDispatchInfo", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCurrentDocOnDispatchInfo(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPerc_DocOnDispatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetPerc_DocOnDispatch(string pLine, string pLogin, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetPerc_DocOnDispatch", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPerc_DocOnDispatch(string pLine, string pLogin, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPerc_DocOnDispatch", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public double EndGetPerc_DocOnDispatch(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllowMaterialScann_DocOnDispatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double AllowMaterialScann_DocOnDispatch(string pLine, string pMaterialID, double pScannedQty, string pLogin, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("AllowMaterialScann_DocOnDispatch", new object[] {
                        pLine,
                        pMaterialID,
                        pScannedQty,
                        pLogin,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAllowMaterialScann_DocOnDispatch(string pLine, string pMaterialID, double pScannedQty, string pLogin, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AllowMaterialScann_DocOnDispatch", new object[] {
                        pLine,
                        pMaterialID,
                        pScannedQty,
                        pLogin,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public double EndAllowMaterialScann_DocOnDispatch(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransDet_DocOnDispatch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransDet_DocOnDispatch(string pLine, string pLogin, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTransDet_DocOnDispatch", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransDet_DocOnDispatch(string pLine, string pLogin, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransDet_DocOnDispatch", new object[] {
                        pLine,
                        pLogin,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTransDet_DocOnDispatch(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReplenishmentProdsBasicView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReplenishmentProdsBasicView(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetReplenishmentProdsBasicView", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReplenishmentProdsBasicView(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReplenishmentProdsBasicView", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReplenishmentProdsBasicView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReplenishmentByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReplenishmentByUser(string pUser, string pWarehouse, string pTaskType, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetReplenishmentByUser", new object[] {
                        pUser,
                        pWarehouse,
                        pTaskType,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReplenishmentByUser(string pUser, string pWarehouse, string pTaskType, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReplenishmentByUser", new object[] {
                        pUser,
                        pWarehouse,
                        pTaskType,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetReplenishmentByUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionalBINInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransactionalBINInfo(string pBinID, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTransactionalBINInfo", new object[] {
                        pBinID,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransactionalBINInfo(string pBinID, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransactionalBINInfo", new object[] {
                        pBinID,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransactionalBINInfo(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionalDOCInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransactionalDOCInfo(string pDocNumber, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTransactionalDOCInfo", new object[] {
                        pDocNumber,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransactionalDOCInfo(string pDocNumber, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransactionalDOCInfo", new object[] {
                        pDocNumber,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTransactionalDOCInfo(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPending_Docs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPending_Docs(string pLinea, string pSector, string pRuta, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPending_Docs", new object[] {
                        pLinea,
                        pSector,
                        pRuta,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPending_Docs(string pLinea, string pSector, string pRuta, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPending_Docs", new object[] {
                        pLinea,
                        pSector,
                        pRuta,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPending_Docs(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocsReportBasicView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDocsReportBasicView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDocsReportBasicView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocsReportBasicView(System.DateTime pSinceDate, System.DateTime pToDate, string pDateFilterType, string pDates, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocsReportBasicView", new object[] {
                        pSinceDate,
                        pToDate,
                        pDateFilterType,
                        pDates,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDocsReportBasicView(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLineBalancingBySector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLineBalancingBySector(string pSector, string pRuta, bool pIncluyeAsignados, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLineBalancingBySector", new object[] {
                        pSector,
                        pRuta,
                        pIncluyeAsignados,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLineBalancingBySector(string pSector, string pRuta, bool pIncluyeAsignados, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLineBalancingBySector", new object[] {
                        pSector,
                        pRuta,
                        pIncluyeAsignados,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLineBalancingBySector(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDemandBySizeForBalancing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDemandBySizeForBalancing(string pSector, string pRuta, bool pIncluyeAsignados, string pTamano, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDemandBySizeForBalancing", new object[] {
                        pSector,
                        pRuta,
                        pIncluyeAsignados,
                        pTamano,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDemandBySizeForBalancing(string pSector, string pRuta, bool pIncluyeAsignados, string pTamano, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDemandBySizeForBalancing", new object[] {
                        pSector,
                        pRuta,
                        pIncluyeAsignados,
                        pTamano,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDemandBySizeForBalancing(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientRouteInfoByDoc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetClientRouteInfoByDoc(string pDoc, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetClientRouteInfoByDoc", new object[] {
                        pDoc,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClientRouteInfoByDoc(string pDoc, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClientRouteInfoByDoc", new object[] {
                        pDoc,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetClientRouteInfoByDoc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextPendingBIN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNextPendingBIN(string pLogin, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetNextPendingBIN", new object[] {
                        pLogin,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNextPendingBIN(string pLogin, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextPendingBIN", new object[] {
                        pLogin,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetNextPendingBIN(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingTasksByDoc_Kiosk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPendingTasksByDoc_Kiosk(string pERP_DOCUMENT, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPendingTasksByDoc_Kiosk", new object[] {
                        pERP_DOCUMENT,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingTasksByDoc_Kiosk(string pERP_DOCUMENT, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingTasksByDoc_Kiosk", new object[] {
                        pERP_DOCUMENT,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPendingTasksByDoc_Kiosk(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocumentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDocumentInfo(string pDoc, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDocumentInfo", new object[] {
                        pDoc,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocumentInfo(string pDoc, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocumentInfo", new object[] {
                        pDoc,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDocumentInfo(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsolidationByDay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetConsolidationByDay(System.DateTime pDate, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetConsolidationByDay", new object[] {
                        pDate,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetConsolidationByDay(System.DateTime pDate, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetConsolidationByDay", new object[] {
                        pDate,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetConsolidationByDay(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRutasPorSector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRutasPorSector(string pSector, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRutasPorSector", new object[] {
                        pSector,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRutasPorSector(string pSector, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRutasPorSector", new object[] {
                        pSector,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRutasPorSector(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationsByDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocationsByDocument(string pDoc, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLocationsByDocument", new object[] {
                        pDoc,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationsByDocument(string pDoc, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationsByDocument", new object[] {
                        pDoc,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLocationsByDocument(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFinishedDispatchAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFinishedDispatchAudit(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetFinishedDispatchAudit", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFinishedDispatchAudit(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFinishedDispatchAudit", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetFinishedDispatchAudit(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPassByPolizaAvailable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPassByPolizaAvailable(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPassByPolizaAvailable", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPassByPolizaAvailable(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPassByPolizaAvailable", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPassByPolizaAvailable(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPassByPolizaAssigned", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPassByPolizaAssigned(int pPassId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetPassByPolizaAssigned", new object[] {
                        pPassId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPassByPolizaAssigned(int pPassId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPassByPolizaAssigned", new object[] {
                        pPassId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetPassByPolizaAssigned(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_LOCATION", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_LOCATION(string pLocation, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_LOCATION", new object[] {
                        pLocation,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_LOCATION(string pLocation, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_LOCATION", new object[] {
                        pLocation,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_LOCATION(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_POLIZA_ASSIGNEDTO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_POLIZA_ASSIGNEDTO(string pOperador, string pPolizaOpcion, string pRegimen, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_POLIZA_ASSIGNEDTO", new object[] {
                        pOperador,
                        pPolizaOpcion,
                        pRegimen,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_POLIZA_ASSIGNEDTO(string pOperador, string pPolizaOpcion, string pRegimen, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_POLIZA_ASSIGNEDTO", new object[] {
                        pOperador,
                        pPolizaOpcion,
                        pRegimen,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_POLIZA_ASSIGNEDTO(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_TYPE_CHARGE_MOVIL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_TYPE_CHARGE_MOVIL(int pLicenseId, string pTypeTrans, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_TYPE_CHARGE_MOVIL", new object[] {
                        pLicenseId,
                        pTypeTrans,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_TYPE_CHARGE_MOVIL(int pLicenseId, string pTypeTrans, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_TYPE_CHARGE_MOVIL", new object[] {
                        pLicenseId,
                        pTypeTrans,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_TYPE_CHARGE_MOVIL(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchSkuAuditoriaDesp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchSkuAuditoriaDesp(string pBarcode, string pPoliza, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchSkuAuditoriaDesp", new object[] {
                        pBarcode,
                        pPoliza,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchSkuAuditoriaDesp(string pBarcode, string pPoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchSkuAuditoriaDesp", new object[] {
                        pBarcode,
                        pPoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchSkuAuditoriaDesp(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskIngGeneral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaskIngGeneral(string pCodigoPoliza, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTaskIngGeneral", new object[] {
                        pCodigoPoliza,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskIngGeneral(string pCodigoPoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskIngGeneral", new object[] {
                        pCodigoPoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTaskIngGeneral(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePoliza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdatePoliza(string pPOLIZA_SEGURO, string pUSER, string pRPOLIZA, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdatePoliza", new object[] {
                        pPOLIZA_SEGURO,
                        pUSER,
                        pRPOLIZA,
                        pResult,
                        pEnvironmentName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePoliza(string pPOLIZA_SEGURO, string pUSER, string pRPOLIZA, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePoliza", new object[] {
                        pPOLIZA_SEGURO,
                        pUSER,
                        pRPOLIZA,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpdatePoliza(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AddMaterial(string pCODE_SKU, string pSKU_DESCRIPTION, string pCUSTOMER, string pUSER, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AddMaterial", new object[] {
                        pCODE_SKU,
                        pSKU_DESCRIPTION,
                        pCUSTOMER,
                        pUSER,
                        pResult,
                        pEnvironmentName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddMaterial(string pCODE_SKU, string pSKU_DESCRIPTION, string pCUSTOMER, string pUSER, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddMaterial", new object[] {
                        pCODE_SKU,
                        pSKU_DESCRIPTION,
                        pCUSTOMER,
                        pUSER,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndAddMaterial(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPolizaHeader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPolizaHeader(int pNumeroPoliza, string pCUSTOMER, string pCUSTOMER_NAME, string pUSER, string pTIPO, string pPOLASEGURADORA, string pACUERDO_COMERCIAL, string pIDENTITY, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AddPolizaHeader", new object[] {
                        pNumeroPoliza,
                        pCUSTOMER,
                        pCUSTOMER_NAME,
                        pUSER,
                        pTIPO,
                        pPOLASEGURADORA,
                        pACUERDO_COMERCIAL,
                        pIDENTITY,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPolizaHeader(int pNumeroPoliza, string pCUSTOMER, string pCUSTOMER_NAME, string pUSER, string pTIPO, string pPOLASEGURADORA, string pACUERDO_COMERCIAL, string pIDENTITY, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPolizaHeader", new object[] {
                        pNumeroPoliza,
                        pCUSTOMER,
                        pCUSTOMER_NAME,
                        pUSER,
                        pTIPO,
                        pPOLASEGURADORA,
                        pACUERDO_COMERCIAL,
                        pIDENTITY,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddPolizaHeader(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddLicense(string pCUSTOMER, string pWAREHOUSE, string pLOCATION, string pUSER, System.DateTime pFECHA, string pIDENTITY, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AddLicense", new object[] {
                        pCUSTOMER,
                        pWAREHOUSE,
                        pLOCATION,
                        pUSER,
                        pFECHA,
                        pIDENTITY,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLicense(string pCUSTOMER, string pWAREHOUSE, string pLOCATION, string pUSER, System.DateTime pFECHA, string pIDENTITY, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddLicense", new object[] {
                        pCUSTOMER,
                        pWAREHOUSE,
                        pLOCATION,
                        pUSER,
                        pFECHA,
                        pIDENTITY,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddLicense(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPolizaDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddPolizaDetail(string pHEADER, string pLINE, string pCUSTOMER, string pCUSTOMER_NAME, string pUSER, string pSKU_DESCRIPTION, string pUNIT_MEASURE, string pQTY, string pTOTAL, string pUNIT_PRICE, System.DateTime pFECHA, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AddPolizaDetail", new object[] {
                        pHEADER,
                        pLINE,
                        pCUSTOMER,
                        pCUSTOMER_NAME,
                        pUSER,
                        pSKU_DESCRIPTION,
                        pUNIT_MEASURE,
                        pQTY,
                        pTOTAL,
                        pUNIT_PRICE,
                        pFECHA,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPolizaDetail(string pHEADER, string pLINE, string pCUSTOMER, string pCUSTOMER_NAME, string pUSER, string pSKU_DESCRIPTION, string pUNIT_MEASURE, string pQTY, string pTOTAL, string pUNIT_PRICE, System.DateTime pFECHA, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPolizaDetail", new object[] {
                        pHEADER,
                        pLINE,
                        pCUSTOMER,
                        pCUSTOMER_NAME,
                        pUSER,
                        pSKU_DESCRIPTION,
                        pUNIT_MEASURE,
                        pQTY,
                        pTOTAL,
                        pUNIT_PRICE,
                        pFECHA,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddPolizaDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddInventory(
                    string pcodeSku, 
                    string pskudes, 
                    string pumesure, 
                    int pqty, 
                    decimal ptotal, 
                    decimal puprice, 
                    string pcustomer, 
                    string pcustomername, 
                    string puser, 
                    string pwh, 
                    string psigno, 
                    string plocation, 
                    string pheader, 
                    System.DateTime pfecha, 
                    string pacuerdo, 
                    string pRESULTADO, 
                    string pResult, 
                    string pEnvironmentName) {
            object[] results = this.Invoke("AddInventory", new object[] {
                        pcodeSku,
                        pskudes,
                        pumesure,
                        pqty,
                        ptotal,
                        puprice,
                        pcustomer,
                        pcustomername,
                        puser,
                        pwh,
                        psigno,
                        plocation,
                        pheader,
                        pfecha,
                        pacuerdo,
                        pRESULTADO,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInventory(
                    string pcodeSku, 
                    string pskudes, 
                    string pumesure, 
                    int pqty, 
                    decimal ptotal, 
                    decimal puprice, 
                    string pcustomer, 
                    string pcustomername, 
                    string puser, 
                    string pwh, 
                    string psigno, 
                    string plocation, 
                    string pheader, 
                    System.DateTime pfecha, 
                    string pacuerdo, 
                    string pRESULTADO, 
                    string pResult, 
                    string pEnvironmentName, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("AddInventory", new object[] {
                        pcodeSku,
                        pskudes,
                        pumesure,
                        pqty,
                        ptotal,
                        puprice,
                        pcustomer,
                        pcustomername,
                        puser,
                        pwh,
                        psigno,
                        plocation,
                        pheader,
                        pfecha,
                        pacuerdo,
                        pRESULTADO,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddInventory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddGeneralData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddGeneralData(string pcustomer, string pcustomername, string puser, string pwh, string plocation, string pseguro, string pacuerdo, System.DateTime pfecha, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AddGeneralData", new object[] {
                        pcustomer,
                        pcustomername,
                        puser,
                        pwh,
                        plocation,
                        pseguro,
                        pacuerdo,
                        pfecha,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGeneralData(string pcustomer, string pcustomername, string puser, string pwh, string plocation, string pseguro, string pacuerdo, System.DateTime pfecha, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGeneralData", new object[] {
                        pcustomer,
                        pcustomername,
                        puser,
                        pwh,
                        plocation,
                        pseguro,
                        pacuerdo,
                        pfecha,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddGeneralData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResultProcessDispatchExternal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResultProcessDispatchExternal(string pEnvironmentName, System.DateTime FechaDocumento) {
            object[] results = this.Invoke("ResultProcessDispatchExternal", new object[] {
                        pEnvironmentName,
                        FechaDocumento});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginResultProcessDispatchExternal(string pEnvironmentName, System.DateTime FechaDocumento, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ResultProcessDispatchExternal", new object[] {
                        pEnvironmentName,
                        FechaDocumento}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndResultProcessDispatchExternal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveInventoryFromFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveInventoryFromFile(System.Data.DataSet pDATA, string pEnvironmentName) {
            object[] results = this.Invoke("ReceiveInventoryFromFile", new object[] {
                        pDATA,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceiveInventoryFromFile(System.Data.DataSet pDATA, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceiveInventoryFromFile", new object[] {
                        pDATA,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndReceiveInventoryFromFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveInventoryFromFileExcel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveInventoryFromFileExcel(System.Data.DataTable pDATA, string pLOGIN, string pCLIENT, string pEnvironmentName) {
            object[] results = this.Invoke("ReceiveInventoryFromFileExcel", new object[] {
                        pDATA,
                        pLOGIN,
                        pCLIENT,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReceiveInventoryFromFileExcel(System.Data.DataTable pDATA, string pLOGIN, string pCLIENT, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReceiveInventoryFromFileExcel", new object[] {
                        pDATA,
                        pLOGIN,
                        pCLIENT,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndReceiveInventoryFromFileExcel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDataToReviewAddExternal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddDataToReviewAddExternal(System.Data.DataTable pDATA, string pLOGIN, string pCLIENT, string pEnvironmentName) {
            object[] results = this.Invoke("AddDataToReviewAddExternal", new object[] {
                        pDATA,
                        pLOGIN,
                        pCLIENT,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddDataToReviewAddExternal(System.Data.DataTable pDATA, string pLOGIN, string pCLIENT, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddDataToReviewAddExternal", new object[] {
                        pDATA,
                        pLOGIN,
                        pCLIENT,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddDataToReviewAddExternal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReviewDispatchForExternal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReviewDispatchForExternal(string pEnvironmentName) {
            object[] results = this.Invoke("GetReviewDispatchForExternal", new object[] {
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReviewDispatchForExternal(string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReviewDispatchForExternal", new object[] {
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetReviewDispatchForExternal(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReviewDispatchForExternalUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReviewDispatchForExternalUpdate(string pEnvironmentName) {
            object[] results = this.Invoke("GetReviewDispatchForExternalUpdate", new object[] {
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReviewDispatchForExternalUpdate(string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReviewDispatchForExternalUpdate", new object[] {
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetReviewDispatchForExternalUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseForExt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarehouseForExt(string pEnvironmentName) {
            object[] results = this.Invoke("GetWarehouseForExt", new object[] {
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehouseForExt(string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehouseForExt", new object[] {
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetWarehouseForExt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInsuranceAvilable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInsuranceAvilable(string pPoliza, string pUser, int pRpoliza, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInsuranceAvilable", new object[] {
                        pPoliza,
                        pUser,
                        pRpoliza,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInsuranceAvilable(string pPoliza, string pUser, int pRpoliza, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInsuranceAvilable", new object[] {
                        pPoliza,
                        pUser,
                        pRpoliza,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInsuranceAvilable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string updateInventory(string pcode, int pqty, string pcustomer, string presultado, string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("updateInventory", new object[] {
                        pcode,
                        pqty,
                        pcustomer,
                        presultado,
                        pResult,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateInventory(string pcode, int pqty, string pcustomer, string presultado, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateInventory", new object[] {
                        pcode,
                        pqty,
                        pcustomer,
                        presultado,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndupdateInventory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateQuotaLatter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateQuotaLatter(string pCarta, string pRegimen, string pMedida, string pFirma, string pClave, string positionPerson, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateQuotaLatter", new object[] {
                        pCarta,
                        pRegimen,
                        pMedida,
                        pFirma,
                        pClave,
                        positionPerson,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateQuotaLatter(string pCarta, string pRegimen, string pMedida, string pFirma, string pClave, string positionPerson, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateQuotaLatter", new object[] {
                        pCarta,
                        pRegimen,
                        pMedida,
                        pFirma,
                        pClave,
                        positionPerson,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndUpdateQuotaLatter(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotaLatter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotaLatter(string pStatus, string pStatus2, string pStatus3, System.DateTime pFechaInicio, System.DateTime pFechaFinal, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetQuotaLatter", new object[] {
                        pStatus,
                        pStatus2,
                        pStatus3,
                        pFechaInicio,
                        pFechaFinal,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuotaLatter(string pStatus, string pStatus2, string pStatus3, System.DateTime pFechaInicio, System.DateTime pFechaFinal, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuotaLatter", new object[] {
                        pStatus,
                        pStatus2,
                        pStatus3,
                        pFechaInicio,
                        pFechaFinal,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuotaLatter(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotaLatterGarita", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotaLatterGarita(int pDocId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetQuotaLatterGarita", new object[] {
                        pDocId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetQuotaLatterGarita(int pDocId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetQuotaLatterGarita", new object[] {
                        pDocId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetQuotaLatterGarita(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDocPolizaEnc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDocPolizaEnc(int pDocId, string pCodigoPoliza, string pNumeroOrden, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetDocPolizaEnc", new object[] {
                        pDocId,
                        pCodigoPoliza,
                        pNumeroOrden,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDocPolizaEnc(int pDocId, string pCodigoPoliza, string pNumeroOrden, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDocPolizaEnc", new object[] {
                        pDocId,
                        pCodigoPoliza,
                        pNumeroOrden,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetDocPolizaEnc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLineasAvailable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLineasAvailable(int pDocId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLineasAvailable", new object[] {
                        pDocId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLineasAvailable(int pDocId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLineasAvailable", new object[] {
                        pDocId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLineasAvailable(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAcuseRecibo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAcuseRecibo(System.DateTime pFechaInicio, System.DateTime pFechaFinal, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetAcuseRecibo", new object[] {
                        pFechaInicio,
                        pFechaFinal,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAcuseRecibo(System.DateTime pFechaInicio, System.DateTime pFechaFinal, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAcuseRecibo", new object[] {
                        pFechaInicio,
                        pFechaFinal,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAcuseRecibo(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTareasRecepcionAsignadasUsuario", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerTareasRecepcionAsignadasUsuario(string Regimen, string SerialNumber, string AssignedTo, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ObtenerTareasRecepcionAsignadasUsuario", new object[] {
                        Regimen,
                        SerialNumber,
                        AssignedTo,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerTareasRecepcionAsignadasUsuario(string Regimen, string SerialNumber, string AssignedTo, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerTareasRecepcionAsignadasUsuario", new object[] {
                        Regimen,
                        SerialNumber,
                        AssignedTo,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerTareasRecepcionAsignadasUsuario(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DistribuirTareasATodosLosOperadores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DistribuirTareasATodosLosOperadores(string login, string pEnvironmentName) {
            object[] results = this.Invoke("DistribuirTareasATodosLosOperadores", new object[] {
                        login,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDistribuirTareasATodosLosOperadores(string login, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DistribuirTareasATodosLosOperadores", new object[] {
                        login,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndDistribuirTareasATodosLosOperadores(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DistribuirTareasATodosLosOperadoresSinTareas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DistribuirTareasATodosLosOperadoresSinTareas(string login, ref string result, string pEnvironmentName) {
            object[] results = this.Invoke("DistribuirTareasATodosLosOperadoresSinTareas", new object[] {
                        login,
                        result,
                        pEnvironmentName});
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDistribuirTareasATodosLosOperadoresSinTareas(string login, string result, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DistribuirTareasATodosLosOperadoresSinTareas", new object[] {
                        login,
                        result,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndDistribuirTareasATodosLosOperadoresSinTareas(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LicenceHasInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LicenceHasInventory(int IdLicence, string pEnvironmentName) {
            object[] results = this.Invoke("LicenceHasInventory", new object[] {
                        IdLicence,
                        pEnvironmentName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLicenceHasInventory(int IdLicence, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LicenceHasInventory", new object[] {
                        IdLicence,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLicenceHasInventory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizeErpReceptionDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthorizeErpReceptionDocument(int ErpReceptionDocumentId, string LastUpdateBy, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("AuthorizeErpReceptionDocument", new object[] {
                        ErpReceptionDocumentId,
                        LastUpdateBy,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthorizeErpReceptionDocument(int ErpReceptionDocumentId, string LastUpdateBy, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthorizeErpReceptionDocument", new object[] {
                        ErpReceptionDocumentId,
                        LastUpdateBy,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAuthorizeErpReceptionDocument(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceptionTag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetReceptionTag(int taskId, string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetReceptionTag", new object[] {
                        taskId,
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceptionTag(int taskId, string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceptionTag", new object[] {
                        taskId,
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetReceptionTag(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPickingTag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPickingTag(int wavePickingId, string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetPickingTag", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPickingTag(int wavePickingId, string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPickingTag", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetPickingTag(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLabel(int labelId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetLabel", new object[] {
                        labelId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLabel(int labelId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLabel", new object[] {
                        labelId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetLabel(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthorizeErpPickingDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthorizeErpPickingDocument(int ErpPickingDocumentId, string LastUpdateBy, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("AuthorizeErpPickingDocument", new object[] {
                        ErpPickingDocumentId,
                        LastUpdateBy,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAuthorizeErpPickingDocument(int ErpPickingDocumentId, string LastUpdateBy, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AuthorizeErpPickingDocument", new object[] {
                        ErpPickingDocumentId,
                        LastUpdateBy,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAuthorizeErpPickingDocument(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForPicking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTaskDetailForPicking(int wavePickingId, string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTaskDetailForPicking", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskDetailForPicking(int wavePickingId, string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskDetailForPicking", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTaskDetailForPicking(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForReception", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTaskDetailForReception(int serialNUmber, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTaskDetailForReception", new object[] {
                        serialNUmber,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskDetailForReception(int serialNUmber, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskDetailForReception", new object[] {
                        serialNUmber,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTaskDetailForReception(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForRealloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTaskDetailForRealloc(int wavePickingId, string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTaskDetailForRealloc", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskDetailForRealloc(int wavePickingId, string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskDetailForRealloc", new object[] {
                        wavePickingId,
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTaskDetailForRealloc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskDetailForCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTaskDetailForCount(int taskId, string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetTaskDetailForCount", new object[] {
                        taskId,
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskDetailForCount(int taskId, string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskDetailForCount", new object[] {
                        taskId,
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTaskDetailForCount(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAssignedOperatorToCountDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAssignedOperatorToCountDetail(int physicalCountDetailId, string assignedTo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateAssignedOperatorToCountDetail", new object[] {
                        physicalCountDetailId,
                        assignedTo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAssignedOperatorToCountDetail(int physicalCountDetailId, string assignedTo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAssignedOperatorToCountDetail", new object[] {
                        physicalCountDetailId,
                        assignedTo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateAssignedOperatorToCountDetail(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorAssignedToDistributionCenterByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOperatorAssignedToDistributionCenterByUser(string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetOperatorAssignedToDistributionCenterByUser", new object[] {
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOperatorAssignedToDistributionCenterByUser(string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOperatorAssignedToDistributionCenterByUser", new object[] {
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetOperatorAssignedToDistributionCenterByUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorsGraphicsTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOperatorsGraphicsTask(string plstUsers, string plstTasksTypes, System.DateTime pSinceDate, System.DateTime pToDate, string login, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetOperatorsGraphicsTask", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pSinceDate,
                        pToDate,
                        login,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOperatorsGraphicsTask(string plstUsers, string plstTasksTypes, System.DateTime pSinceDate, System.DateTime pToDate, string login, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOperatorsGraphicsTask", new object[] {
                        plstUsers,
                        plstTasksTypes,
                        pSinceDate,
                        pToDate,
                        login,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetOperatorsGraphicsTask(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskPending", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTaskPending(int wavePickingId, string login, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTaskPending", new object[] {
                        wavePickingId,
                        login,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskPending(int wavePickingId, string login, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskPending", new object[] {
                        wavePickingId,
                        login,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetTaskPending(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLocation(string location, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLocation", new object[] {
                        location,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocation(string location, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocation", new object[] {
                        location,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetLocation(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaterial(string codeMaterial, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMaterial", new object[] {
                        codeMaterial,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaterial(string codeMaterial, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaterial", new object[] {
                        codeMaterial,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCanReallocOperatorAssignedToDistributionCenterByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCanReallocOperatorAssignedToDistributionCenterByUser(string login, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetCanReallocOperatorAssignedToDistributionCenterByUser", new object[] {
                        login,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCanReallocOperatorAssignedToDistributionCenterByUser(string login, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCanReallocOperatorAssignedToDistributionCenterByUser", new object[] {
                        login,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetCanReallocOperatorAssignedToDistributionCenterByUser(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateTaskStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateTaskStatus(string login, int serialNumber, int taskId, int wavePickingId, string materialId, string taskType, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ValidateTaskStatus", new object[] {
                        login,
                        serialNumber,
                        taskId,
                        wavePickingId,
                        materialId,
                        taskType,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateTaskStatus(string login, int serialNumber, int taskId, int wavePickingId, string materialId, string taskType, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateTaskStatus", new object[] {
                        login,
                        serialNumber,
                        taskId,
                        wavePickingId,
                        materialId,
                        taskType,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidateTaskStatus(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateStatusInMaterialsLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateStatusInMaterialsLicense(int license, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ValidateStatusInMaterialsLicense", new object[] {
                        license,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateStatusInMaterialsLicense(int license, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateStatusInMaterialsLicense", new object[] {
                        license,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidateStatusInMaterialsLicense(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierByDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSupplierByDocument(int taskId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("GetSupplierByDocument", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSupplierByDocument(int taskId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSupplierByDocument", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetSupplierByDocument(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeRecepcionPorDevolucionPorTarea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ObtenerDetalleDeRecepcionPorDevolucionPorTarea(int taskId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ObtenerDetalleDeRecepcionPorDevolucionPorTarea", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerDetalleDeRecepcionPorDevolucionPorTarea(int taskId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerDetalleDeRecepcionPorDevolucionPorTarea", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndObtenerDetalleDeRecepcionPorDevolucionPorTarea(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerTipoDeRecepcion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtenerTipoDeRecepcion(int taskId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ObtenerTipoDeRecepcion", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerTipoDeRecepcion(int taskId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerTipoDeRecepcion", new object[] {
                        taskId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndObtenerTipoDeRecepcion(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerParametros", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ObtenerParametros(string grupoParametro, string idParametro, string pEnvironmentName) {
            object[] results = this.Invoke("ObtenerParametros", new object[] {
                        grupoParametro,
                        idParametro,
                        pEnvironmentName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerParametros(string grupoParametro, string idParametro, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerParametros", new object[] {
                        grupoParametro,
                        idParametro,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndObtenerParametros(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarEtiqueta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidarEtiqueta(int labelId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ValidarEtiqueta", new object[] {
                        labelId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarEtiqueta(int labelId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarEtiqueta", new object[] {
                        labelId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidarEtiqueta(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInformacionPickingNoInmediato", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerInformacionPickingNoInmediato(int olaPicking, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ObtenerInformacionPickingNoInmediato", new object[] {
                        olaPicking,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerInformacionPickingNoInmediato(int olaPicking, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerInformacionPickingNoInmediato", new object[] {
                        olaPicking,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerInformacionPickingNoInmediato(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerValorProyectoEnBaseALicencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ObtenerValorProyectoEnBaseALicencia(int licenseId, string environmentName) {
            object[] results = this.Invoke("ObtenerValorProyectoEnBaseALicencia", new object[] {
                        licenseId,
                        environmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerValorProyectoEnBaseALicencia(int licenseId, string environmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerValorProyectoEnBaseALicencia", new object[] {
                        licenseId,
                        environmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndObtenerValorProyectoEnBaseALicencia(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaskByLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaskByLocation(string loginId, string regimen, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTaskByLocation", new object[] {
                        loginId,
                        regimen,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTaskByLocation(string loginId, string regimen, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTaskByLocation", new object[] {
                        loginId,
                        regimen,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTaskByLocation(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
    }
}
