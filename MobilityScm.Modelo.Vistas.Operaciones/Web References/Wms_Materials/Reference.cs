//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MobilityScm.Modelo.Vistas.Operaciones.Wms_Materials {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_MaterialsSoap", Namespace="http://tempuri.org/")]
    public partial class WMS_Materials : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_Materials() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/Catalogues/wms_materials.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMaterials(
                    string pCLIENT_OWNER, 
                    string pMATERIAL_ID, 
                    string pBARCODE_ID, 
                    string pALTERNATE_BARCODE, 
                    string pMATERIAL_NAME, 
                    string pSHORT_NAME, 
                    double pVOLUME_FACTOR, 
                    string pMATERIAL_CLASS, 
                    double pHIGH, 
                    double pLENGTH, 
                    double pWIDTH, 
                    int pMAX_X_BIN, 
                    int pSCAN_BY_ONE, 
                    int pREQUIRES_LOGISTICS_INFO, 
                    double pWEIGTH, 
                    string pLAST_UPDATED_BY, 
                    int pIS_CAR, 
                    int pBatchRequested, 
                    ref string resultado, 
                    string ambiente, 
                    int serialNumberRequests, 
                    int isMasterPack, 
                    string weightMeasurement, 
                    int explodeInReception, 
                    int handleTone, 
                    int handleCaliber, 
                    string usePickingLine) {
            object[] results = this.Invoke("CreateMaterials", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_ID,
                        pBARCODE_ID,
                        pALTERNATE_BARCODE,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pVOLUME_FACTOR,
                        pMATERIAL_CLASS,
                        pHIGH,
                        pLENGTH,
                        pWIDTH,
                        pMAX_X_BIN,
                        pSCAN_BY_ONE,
                        pREQUIRES_LOGISTICS_INFO,
                        pWEIGTH,
                        pLAST_UPDATED_BY,
                        pIS_CAR,
                        pBatchRequested,
                        resultado,
                        ambiente,
                        serialNumberRequests,
                        isMasterPack,
                        weightMeasurement,
                        explodeInReception,
                        handleTone,
                        handleCaliber,
                        usePickingLine});
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateMaterials(
                    string pCLIENT_OWNER, 
                    string pMATERIAL_ID, 
                    string pBARCODE_ID, 
                    string pALTERNATE_BARCODE, 
                    string pMATERIAL_NAME, 
                    string pSHORT_NAME, 
                    double pVOLUME_FACTOR, 
                    string pMATERIAL_CLASS, 
                    double pHIGH, 
                    double pLENGTH, 
                    double pWIDTH, 
                    int pMAX_X_BIN, 
                    int pSCAN_BY_ONE, 
                    int pREQUIRES_LOGISTICS_INFO, 
                    double pWEIGTH, 
                    string pLAST_UPDATED_BY, 
                    int pIS_CAR, 
                    int pBatchRequested, 
                    string resultado, 
                    string ambiente, 
                    int serialNumberRequests, 
                    int isMasterPack, 
                    string weightMeasurement, 
                    int explodeInReception, 
                    int handleTone, 
                    int handleCaliber, 
                    string usePickingLine, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateMaterials", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_ID,
                        pBARCODE_ID,
                        pALTERNATE_BARCODE,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pVOLUME_FACTOR,
                        pMATERIAL_CLASS,
                        pHIGH,
                        pLENGTH,
                        pWIDTH,
                        pMAX_X_BIN,
                        pSCAN_BY_ONE,
                        pREQUIRES_LOGISTICS_INFO,
                        pWEIGTH,
                        pLAST_UPDATED_BY,
                        pIS_CAR,
                        pBatchRequested,
                        resultado,
                        ambiente,
                        serialNumberRequests,
                        isMasterPack,
                        weightMeasurement,
                        explodeInReception,
                        handleTone,
                        handleCaliber,
                        usePickingLine}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateMaterials(System.IAsyncResult asyncResult, out string resultado) {
            object[] results = this.EndInvoke(asyncResult);
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCodeMultipleClients", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByBarCodeMultipleClients(string pBARCODE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByBarCodeMultipleClients", new object[] {
                        pBARCODE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByBarCodeMultipleClients(string pBARCODE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByBarCodeMultipleClients", new object[] {
                        pBARCODE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByBarCodeMultipleClients(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCodeMultipleClientsJava", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchByBarCodeMultipleClientsJava(string pBARCODE_ID) {
            object[] results = this.Invoke("SearchByBarCodeMultipleClientsJava", new object[] {
                        pBARCODE_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByBarCodeMultipleClientsJava(string pBARCODE_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByBarCodeMultipleClientsJava", new object[] {
                        pBARCODE_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSearchByBarCodeMultipleClientsJava(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByBarCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByBarCode(string pBARCODE_ID, string pCLIENT_OWNER, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByBarCode", new object[] {
                        pBARCODE_ID,
                        pCLIENT_OWNER,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByBarCode(string pBARCODE_ID, string pCLIENT_OWNER, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByBarCode", new object[] {
                        pBARCODE_ID,
                        pCLIENT_OWNER,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByBarCode(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerMaterialPorCodigoDeBarraYLicencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerMaterialPorCodigoDeBarraYLicencia(string codigoBarra, string cliente, int licencia, int tarea, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ObtenerMaterialPorCodigoDeBarraYLicencia", new object[] {
                        codigoBarra,
                        cliente,
                        licencia,
                        tarea,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerMaterialPorCodigoDeBarraYLicencia(string codigoBarra, string cliente, int licencia, int tarea, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerMaterialPorCodigoDeBarraYLicencia", new object[] {
                        codigoBarra,
                        cliente,
                        licencia,
                        tarea,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerMaterialPorCodigoDeBarraYLicencia(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMaterials(
                    string pCLIENT_OWNER, 
                    string pMATERIAL_ID, 
                    string pBARCODE_ID, 
                    string pALTERNATE_BARCODE, 
                    string pMATERIAL_NAME, 
                    string pSHORT_NAME, 
                    double pVOLUME_FACTOR, 
                    string pMATERIAL_CLASS, 
                    double pHIGH, 
                    double pLENGTH, 
                    double pWIDTH, 
                    int pMAX_X_BIN, 
                    int pSCAN_BY_ONE, 
                    int pREQUIRES_LOGISTICS_INFO, 
                    decimal pWEIGTH, 
                    string pLAST_UPDATED_BY, 
                    int IS_CAR, 
                    int pBatchRequested, 
                    ref string resultado, 
                    string ambiente, 
                    int serialNumberRequests, 
                    int isMasterPack, 
                    string weightMeasurement, 
                    int explodeInReception, 
                    int handleTone, 
                    int handleCaliber, 
                    string usePickingLine) {
            object[] results = this.Invoke("UpdateMaterials", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_ID,
                        pBARCODE_ID,
                        pALTERNATE_BARCODE,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pVOLUME_FACTOR,
                        pMATERIAL_CLASS,
                        pHIGH,
                        pLENGTH,
                        pWIDTH,
                        pMAX_X_BIN,
                        pSCAN_BY_ONE,
                        pREQUIRES_LOGISTICS_INFO,
                        pWEIGTH,
                        pLAST_UPDATED_BY,
                        IS_CAR,
                        pBatchRequested,
                        resultado,
                        ambiente,
                        serialNumberRequests,
                        isMasterPack,
                        weightMeasurement,
                        explodeInReception,
                        handleTone,
                        handleCaliber,
                        usePickingLine});
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateMaterials(
                    string pCLIENT_OWNER, 
                    string pMATERIAL_ID, 
                    string pBARCODE_ID, 
                    string pALTERNATE_BARCODE, 
                    string pMATERIAL_NAME, 
                    string pSHORT_NAME, 
                    double pVOLUME_FACTOR, 
                    string pMATERIAL_CLASS, 
                    double pHIGH, 
                    double pLENGTH, 
                    double pWIDTH, 
                    int pMAX_X_BIN, 
                    int pSCAN_BY_ONE, 
                    int pREQUIRES_LOGISTICS_INFO, 
                    decimal pWEIGTH, 
                    string pLAST_UPDATED_BY, 
                    int IS_CAR, 
                    int pBatchRequested, 
                    string resultado, 
                    string ambiente, 
                    int serialNumberRequests, 
                    int isMasterPack, 
                    string weightMeasurement, 
                    int explodeInReception, 
                    int handleTone, 
                    int handleCaliber, 
                    string usePickingLine, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("UpdateMaterials", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_ID,
                        pBARCODE_ID,
                        pALTERNATE_BARCODE,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pVOLUME_FACTOR,
                        pMATERIAL_CLASS,
                        pHIGH,
                        pLENGTH,
                        pWIDTH,
                        pMAX_X_BIN,
                        pSCAN_BY_ONE,
                        pREQUIRES_LOGISTICS_INFO,
                        pWEIGTH,
                        pLAST_UPDATED_BY,
                        IS_CAR,
                        pBatchRequested,
                        resultado,
                        ambiente,
                        serialNumberRequests,
                        isMasterPack,
                        weightMeasurement,
                        explodeInReception,
                        handleTone,
                        handleCaliber,
                        usePickingLine}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateMaterials(System.IAsyncResult asyncResult, out string resultado) {
            object[] results = this.EndInvoke(asyncResult);
            resultado = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMaterials(string pBARCODE_ID, string pCLIENT_OWNER, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteMaterials", new object[] {
                        pBARCODE_ID,
                        pCLIENT_OWNER,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMaterials(string pBARCODE_ID, string pCLIENT_OWNER, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMaterials", new object[] {
                        pBARCODE_ID,
                        pCLIENT_OWNER,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteMaterials(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByKeyMaterials(string pMATERIAL_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByKeyMaterials", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByKeyMaterials(string pMATERIAL_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByKeyMaterials", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByKeyMaterials(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialMaterials", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchPartialMaterials(string pMATERIAL_ID, string pMATERIAL_NAME, string pSHORT_NAME, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchPartialMaterials", new object[] {
                        pMATERIAL_ID,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchPartialMaterials(string pMATERIAL_ID, string pMATERIAL_NAME, string pSHORT_NAME, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchPartialMaterials", new object[] {
                        pMATERIAL_ID,
                        pMATERIAL_NAME,
                        pSHORT_NAME,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchPartialMaterials(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsSector1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMaterialsSector1(string pMATERIAL_ID, string pMATERIAL_NAME, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMaterialsSector1", new object[] {
                        pMATERIAL_ID,
                        pMATERIAL_NAME,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaterialsSector1(string pMATERIAL_ID, string pMATERIAL_NAME, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaterialsSector1", new object[] {
                        pMATERIAL_ID,
                        pMATERIAL_NAME,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMaterialsSector1(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVolumeFactor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateVolumeFactor(string pMATERIAL_ID, double pALTO, double pLARGO, double pANCHO, double pVOLUME_FACTOR, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateVolumeFactor", new object[] {
                        pMATERIAL_ID,
                        pALTO,
                        pLARGO,
                        pANCHO,
                        pVOLUME_FACTOR,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateVolumeFactor(string pMATERIAL_ID, double pALTO, double pLARGO, double pANCHO, double pVOLUME_FACTOR, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateVolumeFactor", new object[] {
                        pMATERIAL_ID,
                        pALTO,
                        pLARGO,
                        pANCHO,
                        pVOLUME_FACTOR,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateVolumeFactor(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVolumeFactorMultipleSKUs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateVolumeFactorMultipleSKUs(string pBARCODE_SKU, string pALTO, string pLARGO, string pANCHO, string pVOLUME_FACTOR, string pPESO, string pMT3) {
            object[] results = this.Invoke("UpdateVolumeFactorMultipleSKUs", new object[] {
                        pBARCODE_SKU,
                        pALTO,
                        pLARGO,
                        pANCHO,
                        pVOLUME_FACTOR,
                        pPESO,
                        pMT3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateVolumeFactorMultipleSKUs(string pBARCODE_SKU, string pALTO, string pLARGO, string pANCHO, string pVOLUME_FACTOR, string pPESO, string pMT3, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateVolumeFactorMultipleSKUs", new object[] {
                        pBARCODE_SKU,
                        pALTO,
                        pLARGO,
                        pANCHO,
                        pVOLUME_FACTOR,
                        pPESO,
                        pMT3}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateVolumeFactorMultipleSKUs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelatedLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRelatedLocations(string pMATERIAL_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetRelatedLocations", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRelatedLocations(string pMATERIAL_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRelatedLocations", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRelatedLocations(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterials_X_Location", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMaterials_X_Location(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteMaterials_X_Location", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMaterials_X_Location(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMaterials_X_Location", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteMaterials_X_Location(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterial_Join_SpotLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateMaterial_Join_SpotLocations(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pUSER_ID, int pMIN_QTY, int pMAX_QTY, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CreateMaterial_Join_SpotLocations", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pUSER_ID,
                        pMIN_QTY,
                        pMAX_QTY,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateMaterial_Join_SpotLocations(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pUSER_ID, int pMIN_QTY, int pMAX_QTY, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateMaterial_Join_SpotLocations", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pUSER_ID,
                        pMIN_QTY,
                        pMAX_QTY,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateMaterial_Join_SpotLocations(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Join_SpotLocations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update_Join_SpotLocations(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pUSER_ID, double pMIN_QTY, double pMAX_QTY, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("Update_Join_SpotLocations", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pUSER_ID,
                        pMIN_QTY,
                        pMAX_QTY,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdate_Join_SpotLocations(string pMATERIAL_ID, string pWAREHOUSE_PARENT, string pLOCATION_SPOT, string pUSER_ID, double pMIN_QTY, double pMAX_QTY, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Update_Join_SpotLocations", new object[] {
                        pMATERIAL_ID,
                        pWAREHOUSE_PARENT,
                        pLOCATION_SPOT,
                        pUSER_ID,
                        pMIN_QTY,
                        pMAX_QTY,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdate_Join_SpotLocations(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationsAvailableToRelate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocationsAvailableToRelate(string pMATERIAL_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLocationsAvailableToRelate", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocationsAvailableToRelate(string pMATERIAL_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocationsAvailableToRelate", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLocationsAvailableToRelate(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuickSKU_Mantainance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QuickSKU_Mantainance(string pCLIENT_OWNER, string pMATERIAL_NAME, string pBARCODE, string pLAST_LOGIN, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pIMAGE_1, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("QuickSKU_Mantainance", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_NAME,
                        pBARCODE,
                        pLAST_LOGIN,
                        pIMAGE_1,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuickSKU_Mantainance(string pCLIENT_OWNER, string pMATERIAL_NAME, string pBARCODE, string pLAST_LOGIN, byte[] pIMAGE_1, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QuickSKU_Mantainance", new object[] {
                        pCLIENT_OWNER,
                        pMATERIAL_NAME,
                        pBARCODE,
                        pLAST_LOGIN,
                        pIMAGE_1,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndQuickSKU_Mantainance(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalFactorVolumeLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTotalFactorVolumeLicense(int pLicenseId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetTotalFactorVolumeLicense", new object[] {
                        pLicenseId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalFactorVolumeLicense(int pLicenseId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalFactorVolumeLicense", new object[] {
                        pLicenseId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTotalFactorVolumeLicense(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIfExistsMaterialByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIfExistsMaterialByClient(string clientOwner, string materialId, ref string result, string environmentName) {
            object[] results = this.Invoke("GetIfExistsMaterialByClient", new object[] {
                        clientOwner,
                        materialId,
                        result,
                        environmentName});
            result = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIfExistsMaterialByClient(string clientOwner, string materialId, string result, string environmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIfExistsMaterialByClient", new object[] {
                        clientOwner,
                        materialId,
                        result,
                        environmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetIfExistsMaterialByClient(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadMaterialByXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadMaterialByXml(string xmlDeMaterial, string xmlDeUbicacion, string xmlDeMasterPack, string xmlDePropiedades, string login, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("LoadMaterialByXml", new object[] {
                        xmlDeMaterial,
                        xmlDeUbicacion,
                        xmlDeMasterPack,
                        xmlDePropiedades,
                        login,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadMaterialByXml(string xmlDeMaterial, string xmlDeUbicacion, string xmlDeMasterPack, string xmlDePropiedades, string login, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadMaterialByXml", new object[] {
                        xmlDeMaterial,
                        xmlDeUbicacion,
                        xmlDeMasterPack,
                        xmlDePropiedades,
                        login,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndLoadMaterialByXml(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerClasesParaMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerClasesParaMaterial(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ObtenerClasesParaMaterial", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerClasesParaMaterial(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerClasesParaMaterial", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerClasesParaMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarSiMaterialEsMasterPack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidarSiMaterialEsMasterPack(string ambiente, string material) {
            object[] results = this.Invoke("ValidarSiMaterialEsMasterPack", new object[] {
                        ambiente,
                        material});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarSiMaterialEsMasterPack(string ambiente, string material, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarSiMaterialEsMasterPack", new object[] {
                        ambiente,
                        material}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidarSiMaterialEsMasterPack(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarInventarioDeImplosionDeMasterpack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidarInventarioDeImplosionDeMasterpack(string ambiente, string codigoDeMaterial, string codigoDeBodega, int cantidad) {
            object[] results = this.Invoke("ValidarInventarioDeImplosionDeMasterpack", new object[] {
                        ambiente,
                        codigoDeMaterial,
                        codigoDeBodega,
                        cantidad});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarInventarioDeImplosionDeMasterpack(string ambiente, string codigoDeMaterial, string codigoDeBodega, int cantidad, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarInventarioDeImplosionDeMasterpack", new object[] {
                        ambiente,
                        codigoDeMaterial,
                        codigoDeBodega,
                        cantidad}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndValidarInventarioDeImplosionDeMasterpack(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidarLicenciaEnImplosion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidarLicenciaEnImplosion(string ambiente, int licencia, string codigoDeBodega) {
            object[] results = this.Invoke("ValidarLicenciaEnImplosion", new object[] {
                        ambiente,
                        licencia,
                        codigoDeBodega});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidarLicenciaEnImplosion(string ambiente, int licencia, string codigoDeBodega, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidarLicenciaEnImplosion", new object[] {
                        ambiente,
                        licencia,
                        codigoDeBodega}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidarLicenciaEnImplosion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarControlDeMasterPackEnImplosion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AgregarControlDeMasterPackEnImplosion(string ambiente, string codigoDeMasterPack, decimal cantidad, string usuario) {
            object[] results = this.Invoke("AgregarControlDeMasterPackEnImplosion", new object[] {
                        ambiente,
                        codigoDeMasterPack,
                        cantidad,
                        usuario});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregarControlDeMasterPackEnImplosion(string ambiente, string codigoDeMasterPack, decimal cantidad, string usuario, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarControlDeMasterPackEnImplosion", new object[] {
                        ambiente,
                        codigoDeMasterPack,
                        cantidad,
                        usuario}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndAgregarControlDeMasterPackEnImplosion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarParteDeImplosionATarea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AgregarParteDeImplosionATarea(string ambiente, int licencia, string codigoDeMaterial, decimal cantidad, string usuario, string codigoDeMaterPack, int licenciaDestino) {
            object[] results = this.Invoke("AgregarParteDeImplosionATarea", new object[] {
                        ambiente,
                        licencia,
                        codigoDeMaterial,
                        cantidad,
                        usuario,
                        codigoDeMaterPack,
                        licenciaDestino});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregarParteDeImplosionATarea(string ambiente, int licencia, string codigoDeMaterial, decimal cantidad, string usuario, string codigoDeMaterPack, int licenciaDestino, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarParteDeImplosionATarea", new object[] {
                        ambiente,
                        licencia,
                        codigoDeMaterial,
                        cantidad,
                        usuario,
                        codigoDeMaterPack,
                        licenciaDestino}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndAgregarParteDeImplosionATarea(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelarImplosionEnProgreso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CancelarImplosionEnProgreso(string ambiente, int licencia, string codigoDeMaterPack, string usuario) {
            object[] results = this.Invoke("CancelarImplosionEnProgreso", new object[] {
                        ambiente,
                        licencia,
                        codigoDeMaterPack,
                        usuario});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCancelarImplosionEnProgreso(string ambiente, int licencia, string codigoDeMaterPack, string usuario, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CancelarImplosionEnProgreso", new object[] {
                        ambiente,
                        licencia,
                        codigoDeMaterPack,
                        usuario}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndCancelarImplosionEnProgreso(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInventarioDeMaterialPorLicencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerInventarioDeMaterialPorLicencia(string ambiente, int licenciaOrigen, int licenciaDestino, string codigoDeMaterPack, string material, string bodega) {
            object[] results = this.Invoke("ObtenerInventarioDeMaterialPorLicencia", new object[] {
                        ambiente,
                        licenciaOrigen,
                        licenciaDestino,
                        codigoDeMaterPack,
                        material,
                        bodega});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerInventarioDeMaterialPorLicencia(string ambiente, int licenciaOrigen, int licenciaDestino, string codigoDeMaterPack, string material, string bodega, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerInventarioDeMaterialPorLicencia", new object[] {
                        ambiente,
                        licenciaOrigen,
                        licenciaDestino,
                        codigoDeMaterPack,
                        material,
                        bodega}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerInventarioDeMaterialPorLicencia(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeImplosionEnProceso", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerDetalleDeImplosionEnProceso(string ambiente, ref string resultado, int licencia, string codigoDeMaterial, decimal cantidad) {
            object[] results = this.Invoke("ObtenerDetalleDeImplosionEnProceso", new object[] {
                        ambiente,
                        resultado,
                        licencia,
                        codigoDeMaterial,
                        cantidad});
            resultado = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerDetalleDeImplosionEnProceso(string ambiente, string resultado, int licencia, string codigoDeMaterial, decimal cantidad, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerDetalleDeImplosionEnProceso", new object[] {
                        ambiente,
                        resultado,
                        licencia,
                        codigoDeMaterial,
                        cantidad}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerDetalleDeImplosionEnProceso(System.IAsyncResult asyncResult, out string resultado) {
            object[] results = this.EndInvoke(asyncResult);
            resultado = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinalizarImplosionDeMasterpack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FinalizarImplosionDeMasterpack(string ambiente, ref string ubicacion, int licencia, string codigoDeMaterial, decimal cantidad, string usuario) {
            object[] results = this.Invoke("FinalizarImplosionDeMasterpack", new object[] {
                        ambiente,
                        ubicacion,
                        licencia,
                        codigoDeMaterial,
                        cantidad,
                        usuario});
            ubicacion = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFinalizarImplosionDeMasterpack(string ambiente, string ubicacion, int licencia, string codigoDeMaterial, decimal cantidad, string usuario, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FinalizarImplosionDeMasterpack", new object[] {
                        ambiente,
                        ubicacion,
                        licencia,
                        codigoDeMaterial,
                        cantidad,
                        usuario}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndFinalizarImplosionDeMasterpack(System.IAsyncResult asyncResult, out string ubicacion) {
            object[] results = this.EndInvoke(asyncResult);
            ubicacion = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateMaterialUnitMesurement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CreateMaterialUnitMesurement(string clientId, string materialId, string measuremntUnit, int qty, string barcode, string alternativeBarcode, string pEnvironmentName) {
            object[] results = this.Invoke("CreateMaterialUnitMesurement", new object[] {
                        clientId,
                        materialId,
                        measuremntUnit,
                        qty,
                        barcode,
                        alternativeBarcode,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateMaterialUnitMesurement(string clientId, string materialId, string measuremntUnit, int qty, string barcode, string alternativeBarcode, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateMaterialUnitMesurement", new object[] {
                        clientId,
                        materialId,
                        measuremntUnit,
                        qty,
                        barcode,
                        alternativeBarcode,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndCreateMaterialUnitMesurement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaterialUnitMesurement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UpdateMaterialUnitMesurement(int measurementUnitId, string clientId, string materialId, string measuremntUnit, int qty, string barcode, string alternativeBarcode, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateMaterialUnitMesurement", new object[] {
                        measurementUnitId,
                        clientId,
                        materialId,
                        measuremntUnit,
                        qty,
                        barcode,
                        alternativeBarcode,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateMaterialUnitMesurement(int measurementUnitId, string clientId, string materialId, string measuremntUnit, int qty, string barcode, string alternativeBarcode, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateMaterialUnitMesurement", new object[] {
                        measurementUnitId,
                        clientId,
                        materialId,
                        measuremntUnit,
                        qty,
                        barcode,
                        alternativeBarcode,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndUpdateMaterialUnitMesurement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMaterialUnitMesurement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable DeleteMaterialUnitMesurement(int measurementUnitId, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteMaterialUnitMesurement", new object[] {
                        measurementUnitId,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMaterialUnitMesurement(int measurementUnitId, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMaterialUnitMesurement", new object[] {
                        measurementUnitId,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndDeleteMaterialUnitMesurement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitMesurement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUnitMesurement(string clientId, string materialId, string pEnvironmentName) {
            object[] results = this.Invoke("GetUnitMesurement", new object[] {
                        clientId,
                        materialId,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUnitMesurement(string clientId, string materialId, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUnitMesurement", new object[] {
                        clientId,
                        materialId,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetUnitMesurement(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsForMasterPackComponentByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaterialsForMasterPackComponentByClient(string pCLIENT_OWNER, string masterPackMaterialId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMaterialsForMasterPackComponentByClient", new object[] {
                        pCLIENT_OWNER,
                        masterPackMaterialId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaterialsForMasterPackComponentByClient(string pCLIENT_OWNER, string masterPackMaterialId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaterialsForMasterPackComponentByClient", new object[] {
                        pCLIENT_OWNER,
                        masterPackMaterialId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetMaterialsForMasterPackComponentByClient(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaterialsComponentsMasterPack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaterialsComponentsMasterPack(string pMaterialId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetMaterialsComponentsMasterPack", new object[] {
                        pMaterialId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMaterialsComponentsMasterPack(string pMaterialId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMaterialsComponentsMasterPack", new object[] {
                        pMaterialId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetMaterialsComponentsMasterPack(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMasterPackComponent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertMasterPackComponent(string pMasterPackCode, string pComponentMaterialId, int pQTY, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("InsertMasterPackComponent", new object[] {
                        pMasterPackCode,
                        pComponentMaterialId,
                        pQTY,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertMasterPackComponent(string pMasterPackCode, string pComponentMaterialId, int pQTY, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertMasterPackComponent", new object[] {
                        pMasterPackCode,
                        pComponentMaterialId,
                        pQTY,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertMasterPackComponent(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMasterPackComponent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMasterPackComponent(string pMasterPackComponentId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteMasterPackComponent", new object[] {
                        pMasterPackComponentId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteMasterPackComponent(string pMasterPackComponentId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteMasterPackComponent", new object[] {
                        pMasterPackComponentId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteMasterPackComponent(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MergeMasterPackComponentByLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable MergeMasterPackComponentByLoad(string masterPackCode, string componentMaterial, int qty, ref string result, string environmentName) {
            object[] results = this.Invoke("MergeMasterPackComponentByLoad", new object[] {
                        masterPackCode,
                        componentMaterial,
                        qty,
                        result,
                        environmentName});
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMergeMasterPackComponentByLoad(string masterPackCode, string componentMaterial, int qty, string result, string environmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MergeMasterPackComponentByLoad", new object[] {
                        masterPackCode,
                        componentMaterial,
                        qty,
                        result,
                        environmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndMergeMasterPackComponentByLoad(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarPropiedadPorBodegaAMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AgregarPropiedadPorBodegaAMaterial(int idPropiedadMaterial, string materialId, string bodega, string valor, string usuario, string pEnvironmentName) {
            object[] results = this.Invoke("AgregarPropiedadPorBodegaAMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        valor,
                        usuario,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregarPropiedadPorBodegaAMaterial(int idPropiedadMaterial, string materialId, string bodega, string valor, string usuario, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarPropiedadPorBodegaAMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        valor,
                        usuario,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndAgregarPropiedadPorBodegaAMaterial(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModificarPropiedadPorBodegaAMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ModificarPropiedadPorBodegaAMaterial(int idPropiedadMaterial, string materialId, string bodega, string valor, string usuario, string pEnvironmentName) {
            object[] results = this.Invoke("ModificarPropiedadPorBodegaAMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        valor,
                        usuario,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginModificarPropiedadPorBodegaAMaterial(int idPropiedadMaterial, string materialId, string bodega, string valor, string usuario, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ModificarPropiedadPorBodegaAMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        valor,
                        usuario,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndModificarPropiedadPorBodegaAMaterial(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarPropiedadPorBodegaDeMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable EliminarPropiedadPorBodegaDeMaterial(int idPropiedadMaterial, string materialId, string bodega, string pEnvironmentName) {
            object[] results = this.Invoke("EliminarPropiedadPorBodegaDeMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEliminarPropiedadPorBodegaDeMaterial(int idPropiedadMaterial, string materialId, string bodega, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EliminarPropiedadPorBodegaDeMaterial", new object[] {
                        idPropiedadMaterial,
                        materialId,
                        bodega,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndEliminarPropiedadPorBodegaDeMaterial(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPropiedadesDeMaterialPorBodega", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerPropiedadesDeMaterialPorBodega(string materialId, string pEnvironmentName) {
            object[] results = this.Invoke("ObtenerPropiedadesDeMaterialPorBodega", new object[] {
                        materialId,
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerPropiedadesDeMaterialPorBodega(string materialId, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerPropiedadesDeMaterialPorBodega", new object[] {
                        materialId,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerPropiedadesDeMaterialPorBodega(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerPropiedadesDeMateriales", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerPropiedadesDeMateriales(string pEnvironmentName) {
            object[] results = this.Invoke("ObtenerPropiedadesDeMateriales", new object[] {
                        pEnvironmentName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerPropiedadesDeMateriales(string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerPropiedadesDeMateriales", new object[] {
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerPropiedadesDeMateriales(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
