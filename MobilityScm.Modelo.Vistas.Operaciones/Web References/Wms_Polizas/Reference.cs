//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MobilityScm.Modelo.Vistas.Operaciones.Wms_Polizas {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_PolizasSoap", Namespace="http://tempuri.org/")]
    public partial class WMS_Polizas : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_Polizas() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/Trans/Wms_Polizas.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ParsePoliza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ParsePoliza(string pPOLIZA_BARCODE, ref string pResult) {
            object[] results = this.Invoke("ParsePoliza", new object[] {
                        pPOLIZA_BARCODE,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginParsePoliza(string pPOLIZA_BARCODE, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ParsePoliza", new object[] {
                        pPOLIZA_BARCODE,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndParsePoliza(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarImagenAPoliza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgregarImagenAPoliza(string pCODIGO_BARRAS_ID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] pIMAGE, string pLoginID, int pAuditId, string pAuditType, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AgregarImagenAPoliza", new object[] {
                        pCODIGO_BARRAS_ID,
                        pIMAGE,
                        pLoginID,
                        pAuditId,
                        pAuditType,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregarImagenAPoliza(string pCODIGO_BARRAS_ID, byte[] pIMAGE, string pLoginID, int pAuditId, string pAuditType, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarImagenAPoliza", new object[] {
                        pCODIGO_BARRAS_ID,
                        pIMAGE,
                        pLoginID,
                        pAuditId,
                        pAuditType,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAgregarImagenAPoliza(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearLicencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CrearLicencia(string pCODIGO_POLIZA, string pLoginID, ref int pLICENCIA_ID, string pCLIENT_OWNER, string pREGIMEN, int TaskId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CrearLicencia", new object[] {
                        pCODIGO_POLIZA,
                        pLoginID,
                        pLICENCIA_ID,
                        pCLIENT_OWNER,
                        pREGIMEN,
                        TaskId,
                        pResult,
                        pEnvironmentName});
            pLICENCIA_ID = ((int)(results[1]));
            pResult = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCrearLicencia(string pCODIGO_POLIZA, string pLoginID, int pLICENCIA_ID, string pCLIENT_OWNER, string pREGIMEN, int TaskId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CrearLicencia", new object[] {
                        pCODIGO_POLIZA,
                        pLoginID,
                        pLICENCIA_ID,
                        pCLIENT_OWNER,
                        pREGIMEN,
                        TaskId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCrearLicencia(System.IAsyncResult asyncResult, out int pLICENCIA_ID, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pLICENCIA_ID = ((int)(results[1]));
            pResult = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregaSKU_Licencia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgregaSKU_Licencia(
                    int pLICENSE_ID, 
                    string pBARCODE, 
                    decimal pQTY, 
                    string pLAST_LOGIN, 
                    double pVOLUME_FACTOR, 
                    double pWEIGTH, 
                    string pSERIAL, 
                    string pCOMMENTS, 
                    string pACUERDO_COMERCIAL, 
                    ref int pSKUS_COUNTED, 
                    string pSTATUS, 
                    ref string pResult, 
                    string pEnvironmentName, 
                    System.DateTime pDateExpiration, 
                    string pBatch, 
                    string pVin, 
                    string statusName, 
                    string action, 
                    string tone, 
                    string caliber) {
            object[] results = this.Invoke("AgregaSKU_Licencia", new object[] {
                        pLICENSE_ID,
                        pBARCODE,
                        pQTY,
                        pLAST_LOGIN,
                        pVOLUME_FACTOR,
                        pWEIGTH,
                        pSERIAL,
                        pCOMMENTS,
                        pACUERDO_COMERCIAL,
                        pSKUS_COUNTED,
                        pSTATUS,
                        pResult,
                        pEnvironmentName,
                        pDateExpiration,
                        pBatch,
                        pVin,
                        statusName,
                        action,
                        tone,
                        caliber});
            pSKUS_COUNTED = ((int)(results[1]));
            pResult = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregaSKU_Licencia(
                    int pLICENSE_ID, 
                    string pBARCODE, 
                    decimal pQTY, 
                    string pLAST_LOGIN, 
                    double pVOLUME_FACTOR, 
                    double pWEIGTH, 
                    string pSERIAL, 
                    string pCOMMENTS, 
                    string pACUERDO_COMERCIAL, 
                    int pSKUS_COUNTED, 
                    string pSTATUS, 
                    string pResult, 
                    string pEnvironmentName, 
                    System.DateTime pDateExpiration, 
                    string pBatch, 
                    string pVin, 
                    string statusName, 
                    string action, 
                    string tone, 
                    string caliber, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("AgregaSKU_Licencia", new object[] {
                        pLICENSE_ID,
                        pBARCODE,
                        pQTY,
                        pLAST_LOGIN,
                        pVOLUME_FACTOR,
                        pWEIGTH,
                        pSERIAL,
                        pCOMMENTS,
                        pACUERDO_COMERCIAL,
                        pSKUS_COUNTED,
                        pSTATUS,
                        pResult,
                        pEnvironmentName,
                        pDateExpiration,
                        pBatch,
                        pVin,
                        statusName,
                        action,
                        tone,
                        caliber}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAgregaSKU_Licencia(System.IAsyncResult asyncResult, out int pSKUS_COUNTED, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pSKUS_COUNTED = ((int)(results[1]));
            pResult = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePolizaImg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePolizaImg(int pPhotoId, string pComment, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdatePolizaImg", new object[] {
                        pPhotoId,
                        pComment,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePolizaImg(int pPhotoId, string pComment, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePolizaImg", new object[] {
                        pPhotoId,
                        pComment,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdatePolizaImg(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AgregarSeriePorMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AgregarSeriePorMaterial(int licenciaId, string materialId, string serie, string batch, System.DateTime fechaDeExpiracion, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("AgregarSeriePorMaterial", new object[] {
                        licenciaId,
                        materialId,
                        serie,
                        batch,
                        fechaDeExpiracion,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAgregarSeriePorMaterial(int licenciaId, string materialId, string serie, string batch, System.DateTime fechaDeExpiracion, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AgregarSeriePorMaterial", new object[] {
                        licenciaId,
                        materialId,
                        serie,
                        batch,
                        fechaDeExpiracion,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAgregarSeriePorMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActulizarLoteYFechaDeVencimientoPorSerie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ActulizarLoteYFechaDeVencimientoPorSerie(int correlativo, int batch, string fechaDeExpiracion, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ActulizarLoteYFechaDeVencimientoPorSerie", new object[] {
                        correlativo,
                        batch,
                        fechaDeExpiracion,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginActulizarLoteYFechaDeVencimientoPorSerie(int correlativo, int batch, string fechaDeExpiracion, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ActulizarLoteYFechaDeVencimientoPorSerie", new object[] {
                        correlativo,
                        batch,
                        fechaDeExpiracion,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndActulizarLoteYFechaDeVencimientoPorSerie(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarSerie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EliminarSerie(int correlativo, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("EliminarSerie", new object[] {
                        correlativo,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEliminarSerie(int correlativo, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EliminarSerie", new object[] {
                        correlativo,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndEliminarSerie(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtienerInformacionPorMaterialSerie", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtienerInformacionPorMaterialSerie(string materialId, string serie, int licenseId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ObtienerInformacionPorMaterialSerie", new object[] {
                        materialId,
                        serie,
                        licenseId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtienerInformacionPorMaterialSerie(string materialId, string serie, int licenseId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtienerInformacionPorMaterialSerie", new object[] {
                        materialId,
                        serie,
                        licenseId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtienerInformacionPorMaterialSerie(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
