//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MobilityScm.Modelo.WMS_InfoInventory {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_InfoInventorySoap", Namespace="http://tempuri.org/")]
    public partial class WMS_InfoInventory : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_InfoInventory() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/info/WMS_InfoInventory.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByLicense_JSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventory_ByLicense_JSON(string pLICENSE_ID, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByLicense_JSON", new object[] {
                        pLICENSE_ID,
                        pEnvironmentName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByLicense_JSON(string pLICENSE_ID, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByLicense_JSON", new object[] {
                        pLICENSE_ID,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInventory_ByLicense_JSON(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_View", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_View(string Login, string pViewName, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_View", new object[] {
                        Login,
                        pViewName,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_View(string Login, string pViewName, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_View", new object[] {
                        Login,
                        pViewName,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_View(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_ByClient(string pClientCode, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByClient", new object[] {
                        pClientCode,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByClient(string pClientCode, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByClient", new object[] {
                        pClientCode,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_ByClient(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByLicense", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_ByLicense(int pLICENSE_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByLicense", new object[] {
                        pLICENSE_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByLicense(int pLICENSE_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByLicense", new object[] {
                        pLICENSE_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_ByLicense(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByWarehouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_ByWarehouse(string Login, string pWAREHOUSE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByWarehouse", new object[] {
                        Login,
                        pWAREHOUSE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByWarehouse(string Login, string pWAREHOUSE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByWarehouse", new object[] {
                        Login,
                        pWAREHOUSE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_ByWarehouse(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByWarehouseAndLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_ByWarehouseAndLocation(string pWAREHOUSE, string pSPOT_LOCATION, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByWarehouseAndLocation", new object[] {
                        pWAREHOUSE,
                        pSPOT_LOCATION,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByWarehouseAndLocation(string pWAREHOUSE, string pSPOT_LOCATION, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByWarehouseAndLocation", new object[] {
                        pWAREHOUSE,
                        pSPOT_LOCATION,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_ByWarehouseAndLocation(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_GroupByMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_GroupByMaterial(string Login, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_GroupByMaterial", new object[] {
                        Login,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_GroupByMaterial(string Login, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_GroupByMaterial", new object[] {
                        Login,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_GroupByMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_GroupByWarehouseMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_GroupByWarehouseMaterial(string pMATERIAL_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_GroupByWarehouseMaterial", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_GroupByWarehouseMaterial(string pMATERIAL_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_GroupByWarehouseMaterial", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_GroupByWarehouseMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory_ByMaterial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory_ByMaterial(string pMATERIAL_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetInventory_ByMaterial", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInventory_ByMaterial(string pMATERIAL_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInventory_ByMaterial", new object[] {
                        pMATERIAL_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetInventory_ByMaterial(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_POLIZA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_INV_X_POLIZA(string pPOLIZA, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_INV_X_POLIZA", new object[] {
                        pPOLIZA,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_INV_X_POLIZA(string pPOLIZA, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_INV_X_POLIZA", new object[] {
                        pPOLIZA,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_INV_X_POLIZA(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_SKU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_INV_X_SKU(string pSKU, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_INV_X_SKU", new object[] {
                        pSKU,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_INV_X_SKU(string pSKU, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_INV_X_SKU", new object[] {
                        pSKU,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_INV_X_SKU(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_LOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_INV_X_LOC(string pLOC, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_INV_X_LOC", new object[] {
                        pLOC,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_INV_X_LOC(string pLOC, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_INV_X_LOC", new object[] {
                        pLOC,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_INV_X_LOC(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocation(string pLOC, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLocation", new object[] {
                        pLOC,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLocation(string pLOC, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLocation", new object[] {
                        pLOC,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLocation(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GET_INV_X_LIC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GET_INV_X_LIC(int pLIC, string pSKU, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GET_INV_X_LIC", new object[] {
                        pLIC,
                        pSKU,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_INV_X_LIC(int pLIC, string pSKU, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GET_INV_X_LIC", new object[] {
                        pLIC,
                        pSKU,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGET_INV_X_LIC(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLicenceAndSkuToRealloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateLicenceAndSkuToRealloc(int pLIC, string pSKU, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ValidateLicenceAndSkuToRealloc", new object[] {
                        pLIC,
                        pSKU,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateLicenceAndSkuToRealloc(int pLIC, string pSKU, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateLicenceAndSkuToRealloc", new object[] {
                        pLIC,
                        pSKU,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidateLicenceAndSkuToRealloc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLicenseLocationForRealloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateLicenseLocationForRealloc(int license, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ValidateLicenseLocationForRealloc", new object[] {
                        license,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateLicenseLocationForRealloc(int license, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateLicenseLocationForRealloc", new object[] {
                        license,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidateLicenseLocationForRealloc(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLocationForStorage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateLocationForStorage(string location, string login, string taskId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("ValidateLocationForStorage", new object[] {
                        location,
                        login,
                        taskId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateLocationForStorage(string location, string login, string taskId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateLocationForStorage", new object[] {
                        location,
                        login,
                        taskId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidateLocationForStorage(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateLocationMaxWeigth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateLocationMaxWeigth(string locationSpot, int licenseId, string pEnvironmentName, ref string pResult) {
            object[] results = this.Invoke("ValidateLocationMaxWeigth", new object[] {
                        locationSpot,
                        licenseId,
                        pEnvironmentName,
                        pResult});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateLocationMaxWeigth(string locationSpot, int licenseId, string pEnvironmentName, string pResult, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateLocationMaxWeigth", new object[] {
                        locationSpot,
                        licenseId,
                        pEnvironmentName,
                        pResult}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidateLocationMaxWeigth(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateIfStatusOfLicenseAllowsRealloc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ValidateIfStatusOfLicenseAllowsRealloc(int licenseId, string codeSku, string environmentName, ref string result) {
            object[] results = this.Invoke("ValidateIfStatusOfLicenseAllowsRealloc", new object[] {
                        licenseId,
                        codeSku,
                        environmentName,
                        result});
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateIfStatusOfLicenseAllowsRealloc(int licenseId, string codeSku, string environmentName, string result, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateIfStatusOfLicenseAllowsRealloc", new object[] {
                        licenseId,
                        codeSku,
                        environmentName,
                        result}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndValidateIfStatusOfLicenseAllowsRealloc(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateIfLocationExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateIfLocationExists(string enviroment, string location) {
            object[] results = this.Invoke("ValidateIfLocationExists", new object[] {
                        enviroment,
                        location});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateIfLocationExists(string enviroment, string location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateIfLocationExists", new object[] {
                        enviroment,
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidateIfLocationExists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerInformacionDeLaEtiquetaOCaja", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerInformacionDeLaEtiquetaOCaja(string type, string barcode, string enviroment, ref string result) {
            object[] results = this.Invoke("ObtenerInformacionDeLaEtiquetaOCaja", new object[] {
                        type,
                        barcode,
                        enviroment,
                        result});
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerInformacionDeLaEtiquetaOCaja(string type, string barcode, string enviroment, string result, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerInformacionDeLaEtiquetaOCaja", new object[] {
                        type,
                        barcode,
                        enviroment,
                        result}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerInformacionDeLaEtiquetaOCaja(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ObtenerDetalleDeLaEtiquetaOCaja", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ObtenerDetalleDeLaEtiquetaOCaja(string type, string barcode, int wave, string enviroment, ref string result) {
            object[] results = this.Invoke("ObtenerDetalleDeLaEtiquetaOCaja", new object[] {
                        type,
                        barcode,
                        wave,
                        enviroment,
                        result});
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerDetalleDeLaEtiquetaOCaja(string type, string barcode, int wave, string enviroment, string result, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerDetalleDeLaEtiquetaOCaja", new object[] {
                        type,
                        barcode,
                        wave,
                        enviroment,
                        result}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndObtenerDetalleDeLaEtiquetaOCaja(System.IAsyncResult asyncResult, out string result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
