//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MobilityScm.Modelo.Wms_Settings {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WMS_SettingsSoap", Namespace="http://tempuri.org/")]
    public partial class WMS_Settings : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WMS_Settings() {
            this.Url = "http://localhost:8088/WMSOnePlan_BusinessServices/Catalogues/WMS_Settings.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParamTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParamTypes(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetParamTypes", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParamTypes(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParamTypes", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetParamTypes(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParamsChilds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParamsChilds(string pParamType, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetParamsChilds", new object[] {
                        pParamType,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParamsChilds(string pParamType, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParamsChilds", new object[] {
                        pParamType,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetParamsChilds(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParam_PartialSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParam_PartialSearch(string pParam_Partial_Caption, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetParam_PartialSearch", new object[] {
                        pParam_Partial_Caption,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParam_PartialSearch(string pParam_Partial_Caption, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParam_PartialSearch", new object[] {
                        pParam_Partial_Caption,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetParam_PartialSearch(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParam_ByParamID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParam_ByParamID(string pParamID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetParam_ByParamID", new object[] {
                        pParamID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParam_ByParamID(string pParamID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParam_ByParamID", new object[] {
                        pParamID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetParam_ByParamID(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOccupancyLeveles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOccupancyLeveles(ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetOccupancyLeveles", new object[] {
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOccupancyLeveles(string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOccupancyLeveles", new object[] {
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOccupancyLeveles(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParam_ByParamKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParam_ByParamKey(string pParamType, string pParamGroup, string pParamId, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetParam_ByParamKey", new object[] {
                        pParamType,
                        pParamGroup,
                        pParamId,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetParam_ByParamKey(string pParamType, string pParamGroup, string pParamId, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetParam_ByParamKey", new object[] {
                        pParamType,
                        pParamGroup,
                        pParamId,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetParam_ByParamKey(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateParams(
                    string pPARAM_TYPE, 
                    string pPARAM_GROUP, 
                    string pPARAM_GROUP_CAPTION, 
                    string pPARAM_NAME, 
                    string pPARAM_CAPTION, 
                    int pNUMERIC_VALUE, 
                    double pMONEY_VALUE, 
                    string pTEXT_VALUE, 
                    System.DateTime pDATE_VALUE, 
                    int pRANGE_NUM_START, 
                    int pRANGE_NUM_END, 
                    System.DateTime pRANGE_DATE_START, 
                    System.DateTime pRANGE_DATE_END, 
                    string pSPARE1, 
                    string pSPARE2, 
                    ref string pResult, 
                    string pEnvironmentName, 
                    double pDECIMAL_VALUE, 
                    string pSPARE3, 
                    string pSPARE4, 
                    string pSPARE5, 
                    string pCOLOR) {
            object[] results = this.Invoke("CreateParams", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_GROUP_CAPTION,
                        pPARAM_NAME,
                        pPARAM_CAPTION,
                        pNUMERIC_VALUE,
                        pMONEY_VALUE,
                        pTEXT_VALUE,
                        pDATE_VALUE,
                        pRANGE_NUM_START,
                        pRANGE_NUM_END,
                        pRANGE_DATE_START,
                        pRANGE_DATE_END,
                        pSPARE1,
                        pSPARE2,
                        pResult,
                        pEnvironmentName,
                        pDECIMAL_VALUE,
                        pSPARE3,
                        pSPARE4,
                        pSPARE5,
                        pCOLOR});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateParams(
                    string pPARAM_TYPE, 
                    string pPARAM_GROUP, 
                    string pPARAM_GROUP_CAPTION, 
                    string pPARAM_NAME, 
                    string pPARAM_CAPTION, 
                    int pNUMERIC_VALUE, 
                    double pMONEY_VALUE, 
                    string pTEXT_VALUE, 
                    System.DateTime pDATE_VALUE, 
                    int pRANGE_NUM_START, 
                    int pRANGE_NUM_END, 
                    System.DateTime pRANGE_DATE_START, 
                    System.DateTime pRANGE_DATE_END, 
                    string pSPARE1, 
                    string pSPARE2, 
                    string pResult, 
                    string pEnvironmentName, 
                    double pDECIMAL_VALUE, 
                    string pSPARE3, 
                    string pSPARE4, 
                    string pSPARE5, 
                    string pCOLOR, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CreateParams", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_GROUP_CAPTION,
                        pPARAM_NAME,
                        pPARAM_CAPTION,
                        pNUMERIC_VALUE,
                        pMONEY_VALUE,
                        pTEXT_VALUE,
                        pDATE_VALUE,
                        pRANGE_NUM_START,
                        pRANGE_NUM_END,
                        pRANGE_DATE_START,
                        pRANGE_DATE_END,
                        pSPARE1,
                        pSPARE2,
                        pResult,
                        pEnvironmentName,
                        pDECIMAL_VALUE,
                        pSPARE3,
                        pSPARE4,
                        pSPARE5,
                        pCOLOR}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateParams(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateParams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateParams(
                    string pPARAM_TYPE, 
                    string pPARAM_GROUP, 
                    string pPARAM_GROUP_CAPTION, 
                    string pPARAM_NAME, 
                    string pPARAM_CAPTION, 
                    int pNUMERIC_VALUE, 
                    double pMONEY_VALUE, 
                    string pTEXT_VALUE, 
                    System.DateTime pDATE_VALUE, 
                    int pRANGE_NUM_START, 
                    int pRANGE_NUM_END, 
                    System.DateTime pRANGE_DATE_START, 
                    System.DateTime pRANGE_DATE_END, 
                    string pSPARE1, 
                    string pSPARE2, 
                    ref string pResult, 
                    string pEnvironmentName, 
                    double pDECIMAL_VALUE, 
                    string pSPARE3, 
                    string pSPARE4, 
                    string pSPARE5, 
                    string pCOLOR) {
            object[] results = this.Invoke("UpdateParams", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_GROUP_CAPTION,
                        pPARAM_NAME,
                        pPARAM_CAPTION,
                        pNUMERIC_VALUE,
                        pMONEY_VALUE,
                        pTEXT_VALUE,
                        pDATE_VALUE,
                        pRANGE_NUM_START,
                        pRANGE_NUM_END,
                        pRANGE_DATE_START,
                        pRANGE_DATE_END,
                        pSPARE1,
                        pSPARE2,
                        pResult,
                        pEnvironmentName,
                        pDECIMAL_VALUE,
                        pSPARE3,
                        pSPARE4,
                        pSPARE5,
                        pCOLOR});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateParams(
                    string pPARAM_TYPE, 
                    string pPARAM_GROUP, 
                    string pPARAM_GROUP_CAPTION, 
                    string pPARAM_NAME, 
                    string pPARAM_CAPTION, 
                    int pNUMERIC_VALUE, 
                    double pMONEY_VALUE, 
                    string pTEXT_VALUE, 
                    System.DateTime pDATE_VALUE, 
                    int pRANGE_NUM_START, 
                    int pRANGE_NUM_END, 
                    System.DateTime pRANGE_DATE_START, 
                    System.DateTime pRANGE_DATE_END, 
                    string pSPARE1, 
                    string pSPARE2, 
                    string pResult, 
                    string pEnvironmentName, 
                    double pDECIMAL_VALUE, 
                    string pSPARE3, 
                    string pSPARE4, 
                    string pSPARE5, 
                    string pCOLOR, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("UpdateParams", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_GROUP_CAPTION,
                        pPARAM_NAME,
                        pPARAM_CAPTION,
                        pNUMERIC_VALUE,
                        pMONEY_VALUE,
                        pTEXT_VALUE,
                        pDATE_VALUE,
                        pRANGE_NUM_START,
                        pRANGE_NUM_END,
                        pRANGE_DATE_START,
                        pRANGE_DATE_END,
                        pSPARE1,
                        pSPARE2,
                        pResult,
                        pEnvironmentName,
                        pDECIMAL_VALUE,
                        pSPARE3,
                        pSPARE4,
                        pSPARE5,
                        pCOLOR}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateParams(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteParam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteParam(string pPARAM_TYPE, string pPARAM_GROUP, string pPARAM_NAME, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteParam", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_NAME,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteParam(string pPARAM_TYPE, string pPARAM_GROUP, string pPARAM_NAME, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteParam", new object[] {
                        pPARAM_TYPE,
                        pPARAM_GROUP,
                        pPARAM_NAME,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteParam(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGridLayouts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateGridLayouts(string pGRID_ID, string pLOGIN_ID, string pLAYOUT_XML, string pLAYOUT_XML_APPERANCE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CreateGridLayouts", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pLAYOUT_XML,
                        pLAYOUT_XML_APPERANCE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateGridLayouts(string pGRID_ID, string pLOGIN_ID, string pLAYOUT_XML, string pLAYOUT_XML_APPERANCE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateGridLayouts", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pLAYOUT_XML,
                        pLAYOUT_XML_APPERANCE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateGridLayouts(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetGridLayout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetGridLayout(string pGRID_ID, string pLOGIN_ID, string pLAYOUT_XML, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SetGridLayout", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pLAYOUT_XML,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetGridLayout(string pGRID_ID, string pLOGIN_ID, string pLAYOUT_XML, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetGridLayout", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pLAYOUT_XML,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetGridLayout(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchByKeyGridLayouts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchByKeyGridLayouts(string pGRID_ID, string pLOGIN_ID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchByKeyGridLayouts", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchByKeyGridLayouts(string pGRID_ID, string pLOGIN_ID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchByKeyGridLayouts", new object[] {
                        pGRID_ID,
                        pLOGIN_ID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchByKeyGridLayouts(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchLineBalancingBySize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchLineBalancingBySize(string pSIZE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchLineBalancingBySize", new object[] {
                        pSIZE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchLineBalancingBySize(string pSIZE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchLineBalancingBySize", new object[] {
                        pSIZE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchLineBalancingBySize(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartialBalancingBySize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchPartialBalancingBySize(string pSIZE, string pSIZE_DESCRIPTION, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("SearchPartialBalancingBySize", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchPartialBalancingBySize(string pSIZE, string pSIZE_DESCRIPTION, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchPartialBalancingBySize", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndSearchPartialBalancingBySize(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateLineBalancing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateLineBalancing(string pSIZE, string pSIZE_DESCRIPTION, double pINITIAL_RANGE, double pFINAL_RANGE, double pLINE_1_PERCENT, double pLINE_2_PERCENT, double pLINE_3_PERCENT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("CreateLineBalancing", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pINITIAL_RANGE,
                        pFINAL_RANGE,
                        pLINE_1_PERCENT,
                        pLINE_2_PERCENT,
                        pLINE_3_PERCENT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateLineBalancing(string pSIZE, string pSIZE_DESCRIPTION, double pINITIAL_RANGE, double pFINAL_RANGE, double pLINE_1_PERCENT, double pLINE_2_PERCENT, double pLINE_3_PERCENT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateLineBalancing", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pINITIAL_RANGE,
                        pFINAL_RANGE,
                        pLINE_1_PERCENT,
                        pLINE_2_PERCENT,
                        pLINE_3_PERCENT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCreateLineBalancing(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLineBalancing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLineBalancing(string pSIZE, string pSIZE_DESCRIPTION, double pINITIAL_RANGE, double pFINAL_RANGE, double pLINE_1_PERCENT, double pLINE_2_PERCENT, double pLINE_3_PERCENT, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateLineBalancing", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pINITIAL_RANGE,
                        pFINAL_RANGE,
                        pLINE_1_PERCENT,
                        pLINE_2_PERCENT,
                        pLINE_3_PERCENT,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLineBalancing(string pSIZE, string pSIZE_DESCRIPTION, double pINITIAL_RANGE, double pFINAL_RANGE, double pLINE_1_PERCENT, double pLINE_2_PERCENT, double pLINE_3_PERCENT, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLineBalancing", new object[] {
                        pSIZE,
                        pSIZE_DESCRIPTION,
                        pINITIAL_RANGE,
                        pFINAL_RANGE,
                        pLINE_1_PERCENT,
                        pLINE_2_PERCENT,
                        pLINE_3_PERCENT,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateLineBalancing(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLineBalancing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLineBalancing(string pSIZE, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("DeleteLineBalancing", new object[] {
                        pSIZE,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLineBalancing(string pSIZE, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLineBalancing", new object[] {
                        pSIZE,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndDeleteLineBalancing(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabelsSetup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLabelsSetup(string pLabelID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLabelsSetup", new object[] {
                        pLabelID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLabelsSetup(string pLabelID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLabelsSetup", new object[] {
                        pLabelID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetLabelsSetup(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsLabelID_In_Line", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLabelID_In_Line(string pLabelID, string pLineID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("IsLabelID_In_Line", new object[] {
                        pLabelID,
                        pLineID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsLabelID_In_Line(string pLabelID, string pLineID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsLabelID_In_Line", new object[] {
                        pLabelID,
                        pLineID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsLabelID_In_Line(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RelateLabel_Line", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RelateLabel_Line(string pLabelID, string pLineID, bool pClearAllRelationship, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("RelateLabel_Line", new object[] {
                        pLabelID,
                        pLineID,
                        pClearAllRelationship,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRelateLabel_Line(string pLabelID, string pLineID, bool pClearAllRelationship, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RelateLabel_Line", new object[] {
                        pLabelID,
                        pLineID,
                        pClearAllRelationship,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRelateLabel_Line(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLabelSetup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLabelSetup(string pLabelID, string pZPLCommands, string pLoginID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("UpdateLabelSetup", new object[] {
                        pLabelID,
                        pZPLCommands,
                        pLoginID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLabelSetup(string pLabelID, string pZPLCommands, string pLoginID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLabelSetup", new object[] {
                        pLabelID,
                        pZPLCommands,
                        pLoginID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateLabelSetup(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLabelID_In_Line", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabelID_In_Line(string pLineID, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetLabelID_In_Line", new object[] {
                        pLineID,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLabelID_In_Line(string pLineID, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLabelID_In_Line", new object[] {
                        pLineID,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetLabelID_In_Line(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHHButtonSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHHButtonSettings(string pModel, string pManufacturer, ref string pResult, string pEnvironmentName) {
            object[] results = this.Invoke("GetHHButtonSettings", new object[] {
                        pModel,
                        pManufacturer,
                        pResult,
                        pEnvironmentName});
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHHButtonSettings(string pModel, string pManufacturer, string pResult, string pEnvironmentName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHHButtonSettings", new object[] {
                        pModel,
                        pManufacturer,
                        pResult,
                        pEnvironmentName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataTable EndGetHHButtonSettings(System.IAsyncResult asyncResult, out string pResult) {
            object[] results = this.EndInvoke(asyncResult);
            pResult = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
    }
}
