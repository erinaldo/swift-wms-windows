'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet_PolizaHeaderDetail"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet_PolizaHeaderDetail
    Inherits Global.System.Data.DataSet
    
    Private tableOP_WMS_VIEW_INVENTORY_X_DOCS As OP_WMS_VIEW_INVENTORY_X_DOCSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("OP_WMS_VIEW_INVENTORY_X_DOCS")) Is Nothing) Then
                MyBase.Tables.Add(New OP_WMS_VIEW_INVENTORY_X_DOCSDataTable(ds.Tables("OP_WMS_VIEW_INVENTORY_X_DOCS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_WMS_VIEW_INVENTORY_X_DOCS() As OP_WMS_VIEW_INVENTORY_X_DOCSDataTable
        Get
            Return Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet_PolizaHeaderDetail = CType(MyBase.Clone,DataSet_PolizaHeaderDetail)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("OP_WMS_VIEW_INVENTORY_X_DOCS")) Is Nothing) Then
                MyBase.Tables.Add(New OP_WMS_VIEW_INVENTORY_X_DOCSDataTable(ds.Tables("OP_WMS_VIEW_INVENTORY_X_DOCS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS = CType(MyBase.Tables("OP_WMS_VIEW_INVENTORY_X_DOCS"),OP_WMS_VIEW_INVENTORY_X_DOCSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS) Is Nothing) Then
                Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet_PolizaHeaderDetail"
        Me.Prefix = ""
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS = New OP_WMS_VIEW_INVENTORY_X_DOCSDataTable()
        MyBase.Tables.Add(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_WMS_VIEW_INVENTORY_X_DOCS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet_PolizaHeaderDetail = New DataSet_PolizaHeaderDetail()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_WMS_VIEW_INVENTORY_X_DOCSDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_WMS_VIEW_INVENTORY_X_DOCSRow)
        
        Private columnNUMERO_ORDEN As Global.System.Data.DataColumn
        
        Private columnWAREHOUSE_REGIMEN As Global.System.Data.DataColumn
        
        Private columnCODIGO_POLIZA As Global.System.Data.DataColumn
        
        Private columnNUMERO_DUA As Global.System.Data.DataColumn
        
        Private columnCLIENT_CODE As Global.System.Data.DataColumn
        
        Private columnCONSIGNATARIO_CODIGO As Global.System.Data.DataColumn
        
        Private columnBULTOS As Global.System.Data.DataColumn
        
        Private columnQTY As Global.System.Data.DataColumn
        
        Private columnCUSTOMS_AMOUNT As Global.System.Data.DataColumn
        
        Private columnDAI As Global.System.Data.DataColumn
        
        Private columnIVA As Global.System.Data.DataColumn
        
        Private columnSAC_CODE As Global.System.Data.DataColumn
        
        Private columnSKU_DESCRIPTION As Global.System.Data.DataColumn
        
        Private columnNET_WEIGTH As Global.System.Data.DataColumn
        
        Private columnWEIGTH_UNIT As Global.System.Data.DataColumn
        
        Private columnVOLUME As Global.System.Data.DataColumn
        
        Private columnVOLUME_UNIT As Global.System.Data.DataColumn
        
        Private columnQTY_UNIT As Global.System.Data.DataColumn
        
        Private columnFECHA_DOCUMENTO As Global.System.Data.DataColumn
        
        Private columnLINE_NUMBER As Global.System.Data.DataColumn
        
        Private columnDOC_ID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_WMS_VIEW_INVENTORY_X_DOCS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERO_ORDENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_ORDEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WAREHOUSE_REGIMENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWAREHOUSE_REGIMEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGO_POLIZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO_POLIZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMERO_DUAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMERO_DUA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONSIGNATARIO_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONSIGNATARIO_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BULTOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBULTOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMS_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMS_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SKU_DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSKU_DESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NET_WEIGTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNET_WEIGTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEIGTH_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEIGTH_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLUMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLUME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOLUME_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOLUME_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTY_UNITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY_UNIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHA_DOCUMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOCUMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINE_NUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINE_NUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOC_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOC_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_WMS_VIEW_INVENTORY_X_DOCSRow
            Get
                Return CType(Me.Rows(index),OP_WMS_VIEW_INVENTORY_X_DOCSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_WMS_VIEW_INVENTORY_X_DOCSRowChanging As OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_WMS_VIEW_INVENTORY_X_DOCSRowChanged As OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_WMS_VIEW_INVENTORY_X_DOCSRowDeleting As OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_WMS_VIEW_INVENTORY_X_DOCSRowDeleted As OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_WMS_VIEW_INVENTORY_X_DOCSRow(ByVal row As OP_WMS_VIEW_INVENTORY_X_DOCSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_WMS_VIEW_INVENTORY_X_DOCSRow( _
                    ByVal NUMERO_ORDEN As String,  _
                    ByVal WAREHOUSE_REGIMEN As String,  _
                    ByVal CODIGO_POLIZA As String,  _
                    ByVal NUMERO_DUA As String,  _
                    ByVal CLIENT_CODE As String,  _
                    ByVal CONSIGNATARIO_CODIGO As String,  _
                    ByVal BULTOS As Decimal,  _
                    ByVal QTY As Decimal,  _
                    ByVal CUSTOMS_AMOUNT As Decimal,  _
                    ByVal DAI As Decimal,  _
                    ByVal IVA As Decimal,  _
                    ByVal SAC_CODE As String,  _
                    ByVal SKU_DESCRIPTION As String,  _
                    ByVal NET_WEIGTH As Decimal,  _
                    ByVal WEIGTH_UNIT As String,  _
                    ByVal VOLUME As Decimal,  _
                    ByVal VOLUME_UNIT As String,  _
                    ByVal QTY_UNIT As String,  _
                    ByVal FECHA_DOCUMENTO As Date,  _
                    ByVal LINE_NUMBER As Decimal,  _
                    ByVal DOC_ID As Decimal) As OP_WMS_VIEW_INVENTORY_X_DOCSRow
            Dim rowOP_WMS_VIEW_INVENTORY_X_DOCSRow As OP_WMS_VIEW_INVENTORY_X_DOCSRow = CType(Me.NewRow,OP_WMS_VIEW_INVENTORY_X_DOCSRow)
            Dim columnValuesArray() As Object = New Object() {NUMERO_ORDEN, WAREHOUSE_REGIMEN, CODIGO_POLIZA, NUMERO_DUA, CLIENT_CODE, CONSIGNATARIO_CODIGO, BULTOS, QTY, CUSTOMS_AMOUNT, DAI, IVA, SAC_CODE, SKU_DESCRIPTION, NET_WEIGTH, WEIGTH_UNIT, VOLUME, VOLUME_UNIT, QTY_UNIT, FECHA_DOCUMENTO, LINE_NUMBER, DOC_ID}
            rowOP_WMS_VIEW_INVENTORY_X_DOCSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_WMS_VIEW_INVENTORY_X_DOCSRow)
            Return rowOP_WMS_VIEW_INVENTORY_X_DOCSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByLINE_NUMBERDOC_ID(ByVal LINE_NUMBER As Decimal, ByVal DOC_ID As Decimal) As OP_WMS_VIEW_INVENTORY_X_DOCSRow
            Return CType(Me.Rows.Find(New Object() {LINE_NUMBER, DOC_ID}),OP_WMS_VIEW_INVENTORY_X_DOCSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_WMS_VIEW_INVENTORY_X_DOCSDataTable = CType(MyBase.Clone,OP_WMS_VIEW_INVENTORY_X_DOCSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_WMS_VIEW_INVENTORY_X_DOCSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMERO_ORDEN = MyBase.Columns("NUMERO_ORDEN")
            Me.columnWAREHOUSE_REGIMEN = MyBase.Columns("WAREHOUSE_REGIMEN")
            Me.columnCODIGO_POLIZA = MyBase.Columns("CODIGO_POLIZA")
            Me.columnNUMERO_DUA = MyBase.Columns("NUMERO_DUA")
            Me.columnCLIENT_CODE = MyBase.Columns("CLIENT_CODE")
            Me.columnCONSIGNATARIO_CODIGO = MyBase.Columns("CONSIGNATARIO_CODIGO")
            Me.columnBULTOS = MyBase.Columns("BULTOS")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnCUSTOMS_AMOUNT = MyBase.Columns("CUSTOMS_AMOUNT")
            Me.columnDAI = MyBase.Columns("DAI")
            Me.columnIVA = MyBase.Columns("IVA")
            Me.columnSAC_CODE = MyBase.Columns("SAC_CODE")
            Me.columnSKU_DESCRIPTION = MyBase.Columns("SKU_DESCRIPTION")
            Me.columnNET_WEIGTH = MyBase.Columns("NET_WEIGTH")
            Me.columnWEIGTH_UNIT = MyBase.Columns("WEIGTH_UNIT")
            Me.columnVOLUME = MyBase.Columns("VOLUME")
            Me.columnVOLUME_UNIT = MyBase.Columns("VOLUME_UNIT")
            Me.columnQTY_UNIT = MyBase.Columns("QTY_UNIT")
            Me.columnFECHA_DOCUMENTO = MyBase.Columns("FECHA_DOCUMENTO")
            Me.columnLINE_NUMBER = MyBase.Columns("LINE_NUMBER")
            Me.columnDOC_ID = MyBase.Columns("DOC_ID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMERO_ORDEN = New Global.System.Data.DataColumn("NUMERO_ORDEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_ORDEN)
            Me.columnWAREHOUSE_REGIMEN = New Global.System.Data.DataColumn("WAREHOUSE_REGIMEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWAREHOUSE_REGIMEN)
            Me.columnCODIGO_POLIZA = New Global.System.Data.DataColumn("CODIGO_POLIZA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO_POLIZA)
            Me.columnNUMERO_DUA = New Global.System.Data.DataColumn("NUMERO_DUA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMERO_DUA)
            Me.columnCLIENT_CODE = New Global.System.Data.DataColumn("CLIENT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CODE)
            Me.columnCONSIGNATARIO_CODIGO = New Global.System.Data.DataColumn("CONSIGNATARIO_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONSIGNATARIO_CODIGO)
            Me.columnBULTOS = New Global.System.Data.DataColumn("BULTOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBULTOS)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnCUSTOMS_AMOUNT = New Global.System.Data.DataColumn("CUSTOMS_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMS_AMOUNT)
            Me.columnDAI = New Global.System.Data.DataColumn("DAI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAI)
            Me.columnIVA = New Global.System.Data.DataColumn("IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA)
            Me.columnSAC_CODE = New Global.System.Data.DataColumn("SAC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAC_CODE)
            Me.columnSKU_DESCRIPTION = New Global.System.Data.DataColumn("SKU_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSKU_DESCRIPTION)
            Me.columnNET_WEIGTH = New Global.System.Data.DataColumn("NET_WEIGTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNET_WEIGTH)
            Me.columnWEIGTH_UNIT = New Global.System.Data.DataColumn("WEIGTH_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEIGTH_UNIT)
            Me.columnVOLUME = New Global.System.Data.DataColumn("VOLUME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLUME)
            Me.columnVOLUME_UNIT = New Global.System.Data.DataColumn("VOLUME_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOLUME_UNIT)
            Me.columnQTY_UNIT = New Global.System.Data.DataColumn("QTY_UNIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY_UNIT)
            Me.columnFECHA_DOCUMENTO = New Global.System.Data.DataColumn("FECHA_DOCUMENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOCUMENTO)
            Me.columnLINE_NUMBER = New Global.System.Data.DataColumn("LINE_NUMBER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINE_NUMBER)
            Me.columnDOC_ID = New Global.System.Data.DataColumn("DOC_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOC_ID)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLINE_NUMBER, Me.columnDOC_ID}, true))
            Me.columnNUMERO_ORDEN.MaxLength = 25
            Me.columnWAREHOUSE_REGIMEN.MaxLength = 25
            Me.columnCODIGO_POLIZA.AllowDBNull = false
            Me.columnCODIGO_POLIZA.MaxLength = 15
            Me.columnNUMERO_DUA.MaxLength = 50
            Me.columnCLIENT_CODE.MaxLength = 25
            Me.columnCONSIGNATARIO_CODIGO.MaxLength = 25
            Me.columnBULTOS.ReadOnly = true
            Me.columnQTY.ReadOnly = true
            Me.columnCUSTOMS_AMOUNT.ReadOnly = true
            Me.columnDAI.ReadOnly = true
            Me.columnIVA.ReadOnly = true
            Me.columnSAC_CODE.AllowDBNull = false
            Me.columnSAC_CODE.MaxLength = 50
            Me.columnSKU_DESCRIPTION.AllowDBNull = false
            Me.columnSKU_DESCRIPTION.MaxLength = 250
            Me.columnNET_WEIGTH.ReadOnly = true
            Me.columnWEIGTH_UNIT.MaxLength = 25
            Me.columnVOLUME.ReadOnly = true
            Me.columnVOLUME_UNIT.MaxLength = 25
            Me.columnQTY_UNIT.MaxLength = 25
            Me.columnLINE_NUMBER.AllowDBNull = false
            Me.columnDOC_ID.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_WMS_VIEW_INVENTORY_X_DOCSRow() As OP_WMS_VIEW_INVENTORY_X_DOCSRow
            Return CType(Me.NewRow,OP_WMS_VIEW_INVENTORY_X_DOCSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_WMS_VIEW_INVENTORY_X_DOCSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_WMS_VIEW_INVENTORY_X_DOCSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_WMS_VIEW_INVENTORY_X_DOCSRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_WMS_VIEW_INVENTORY_X_DOCSRowChanged(Me, New OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent(CType(e.Row,OP_WMS_VIEW_INVENTORY_X_DOCSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_WMS_VIEW_INVENTORY_X_DOCSRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_WMS_VIEW_INVENTORY_X_DOCSRowChanging(Me, New OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent(CType(e.Row,OP_WMS_VIEW_INVENTORY_X_DOCSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_WMS_VIEW_INVENTORY_X_DOCSRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_WMS_VIEW_INVENTORY_X_DOCSRowDeleted(Me, New OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent(CType(e.Row,OP_WMS_VIEW_INVENTORY_X_DOCSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_WMS_VIEW_INVENTORY_X_DOCSRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_WMS_VIEW_INVENTORY_X_DOCSRowDeleting(Me, New OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent(CType(e.Row,OP_WMS_VIEW_INVENTORY_X_DOCSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_WMS_VIEW_INVENTORY_X_DOCSRow(ByVal row As OP_WMS_VIEW_INVENTORY_X_DOCSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet_PolizaHeaderDetail = New DataSet_PolizaHeaderDetail()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_WMS_VIEW_INVENTORY_X_DOCSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_WMS_VIEW_INVENTORY_X_DOCSRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_WMS_VIEW_INVENTORY_X_DOCS As OP_WMS_VIEW_INVENTORY_X_DOCSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS = CType(Me.Table,OP_WMS_VIEW_INVENTORY_X_DOCSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERO_ORDEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_ORDENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMERO_ORDEN' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_ORDENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WAREHOUSE_REGIMEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WAREHOUSE_REGIMENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WAREHOUSE_REGIMEN' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WAREHOUSE_REGIMENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO_POLIZA() As String
            Get
                Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CODIGO_POLIZAColumn),String)
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CODIGO_POLIZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMERO_DUA() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_DUAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMERO_DUA' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_DUAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CLIENT_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CODE' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CLIENT_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONSIGNATARIO_CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CONSIGNATARIO_CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONSIGNATARIO_CODIGO' in table 'OP_WMS_VIEW_INVENTORY_X_DOC"& _ 
                            "S' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CONSIGNATARIO_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BULTOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.BULTOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BULTOS' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.BULTOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMS_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CUSTOMS_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMS_AMOUNT' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CUSTOMS_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DAIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAI' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DAIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.IVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAC_CODE() As String
            Get
                Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.SAC_CODEColumn),String)
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.SAC_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SKU_DESCRIPTION() As String
            Get
                Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.SKU_DESCRIPTIONColumn),String)
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.SKU_DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NET_WEIGTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NET_WEIGTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NET_WEIGTH' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NET_WEIGTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEIGTH_UNIT() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WEIGTH_UNITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WEIGTH_UNIT' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WEIGTH_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLUME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLUME' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOLUME_UNIT() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUME_UNITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOLUME_UNIT' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUME_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY_UNIT() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTY_UNITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY_UNIT' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTY_UNITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA_DOCUMENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.FECHA_DOCUMENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_DOCUMENTO' in table 'OP_WMS_VIEW_INVENTORY_X_DOCS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.FECHA_DOCUMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINE_NUMBER() As Decimal
            Get
                Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.LINE_NUMBERColumn),Decimal)
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.LINE_NUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOC_ID() As Decimal
            Get
                Return CType(Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DOC_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DOC_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERO_ORDENNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_ORDENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERO_ORDENNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_ORDENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWAREHOUSE_REGIMENNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WAREHOUSE_REGIMENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWAREHOUSE_REGIMENNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WAREHOUSE_REGIMENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMERO_DUANull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_DUAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMERO_DUANull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NUMERO_DUAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CODENull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CLIENT_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CODENull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CLIENT_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONSIGNATARIO_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CONSIGNATARIO_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONSIGNATARIO_CODIGONull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CONSIGNATARIO_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBULTOSNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.BULTOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBULTOSNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.BULTOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTYNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMS_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CUSTOMS_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMS_AMOUNTNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.CUSTOMS_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAINull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DAIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAINull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.DAIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVANull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVANull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNET_WEIGTHNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NET_WEIGTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNET_WEIGTHNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.NET_WEIGTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEIGTH_UNITNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WEIGTH_UNITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEIGTH_UNITNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.WEIGTH_UNITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLUMENull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLUMENull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOLUME_UNITNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUME_UNITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOLUME_UNITNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.VOLUME_UNITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTY_UNITNull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTY_UNITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTY_UNITNull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.QTY_UNITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHA_DOCUMENTONull() As Boolean
            Return Me.IsNull(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.FECHA_DOCUMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHA_DOCUMENTONull()
            Me(Me.tableOP_WMS_VIEW_INVENTORY_X_DOCS.FECHA_DOCUMENTOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_WMS_VIEW_INVENTORY_X_DOCSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_WMS_VIEW_INVENTORY_X_DOCSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_WMS_VIEW_INVENTORY_X_DOCSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_WMS_VIEW_INVENTORY_X_DOCSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet_PolizaHeaderDetailTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_WMS_VIEW_INVENTORY_X_DOCSAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_WMS_VIEW_INVENTORY_X_DOCS"
            tableMapping.ColumnMappings.Add("NUMERO_ORDEN", "NUMERO_ORDEN")
            tableMapping.ColumnMappings.Add("WAREHOUSE_REGIMEN", "WAREHOUSE_REGIMEN")
            tableMapping.ColumnMappings.Add("CODIGO_POLIZA", "CODIGO_POLIZA")
            tableMapping.ColumnMappings.Add("NUMERO_DUA", "NUMERO_DUA")
            tableMapping.ColumnMappings.Add("CLIENT_CODE", "CLIENT_CODE")
            tableMapping.ColumnMappings.Add("CONSIGNATARIO_CODIGO", "CONSIGNATARIO_CODIGO")
            tableMapping.ColumnMappings.Add("BULTOS", "BULTOS")
            tableMapping.ColumnMappings.Add("QTY", "QTY")
            tableMapping.ColumnMappings.Add("CUSTOMS_AMOUNT", "CUSTOMS_AMOUNT")
            tableMapping.ColumnMappings.Add("DAI", "DAI")
            tableMapping.ColumnMappings.Add("IVA", "IVA")
            tableMapping.ColumnMappings.Add("SAC_CODE", "SAC_CODE")
            tableMapping.ColumnMappings.Add("SKU_DESCRIPTION", "SKU_DESCRIPTION")
            tableMapping.ColumnMappings.Add("NET_WEIGTH", "NET_WEIGTH")
            tableMapping.ColumnMappings.Add("WEIGTH_UNIT", "WEIGTH_UNIT")
            tableMapping.ColumnMappings.Add("VOLUME", "VOLUME")
            tableMapping.ColumnMappings.Add("VOLUME_UNIT", "VOLUME_UNIT")
            tableMapping.ColumnMappings.Add("QTY_UNIT", "QTY_UNIT")
            tableMapping.ColumnMappings.Add("FECHA_DOCUMENTO", "FECHA_DOCUMENTO")
            tableMapping.ColumnMappings.Add("LINE_NUMBER", "LINE_NUMBER")
            tableMapping.ColumnMappings.Add("DOC_ID", "DOC_ID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = "Data Source=192.168.0.63;Persist Security Info=True;Password=123;User ID="&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        ;Initial Catalog=OP_WMS"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NUMERO_ORDEN, WAREHOUSE_REGIMEN, CODIGO_POLIZA, NUMERO_DUA, CLIENT_CODE, C"& _ 
                "ONSIGNATARIO_CODIGO, BULTOS, QTY, CUSTOMS_AMOUNT, DAI, IVA, SAC_CODE, SKU_DESCRI"& _ 
                "PTION, NET_WEIGTH, WEIGTH_UNIT, VOLUME, VOLUME_UNIT, QTY_UNIT, FECHA_DOCUMENTO, "& _ 
                "LINE_NUMBER, DOC_ID FROM alsersa.OP_WMS_VIEW_INVENTORY_X_DOCS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet_PolizaHeaderDetail.OP_WMS_VIEW_INVENTORY_X_DOCSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet_PolizaHeaderDetail.OP_WMS_VIEW_INVENTORY_X_DOCSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet_PolizaHeaderDetail.OP_WMS_VIEW_INVENTORY_X_DOCSDataTable = New DataSet_PolizaHeaderDetail.OP_WMS_VIEW_INVENTORY_X_DOCSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
